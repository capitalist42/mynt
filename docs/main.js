!function(e){var t={};function n(a){if(t[a])return t[a].exports;var s=t[a]={i:a,l:!1,exports:{}};return e[a].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)n.d(a,s,function(t){return e[t]}.bind(null,s));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=10)}([function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){"use strict";(function(e,n){
/*!
 * Vue.js v2.6.14
 * (c) 2014-2021 Evan You
 * Released under the MIT License.
 */
var a=Object.freeze({});function s(e){return null==e}function i(e){return null!=e}function r(e){return!0===e}function o(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function p(e){return null!==e&&"object"==typeof e}var u=Object.prototype.toString;function d(e){return"[object Object]"===u.call(e)}function l(e){return"[object RegExp]"===u.call(e)}function y(e){var t=parseFloat(String(e));return t>=0&&Math.floor(t)===t&&isFinite(e)}function c(e){return i(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function m(e){return null==e?"":Array.isArray(e)||d(e)&&e.toString===u?JSON.stringify(e,null,2):String(e)}function f(e){var t=parseFloat(e);return isNaN(t)?e:t}function h(e,t){for(var n=Object.create(null),a=e.split(","),s=0;s<a.length;s++)n[a[s]]=!0;return t?function(e){return n[e.toLowerCase()]}:function(e){return n[e]}}var b=h("slot,component",!0),v=h("key,ref,slot,slot-scope,is");function T(e,t){if(e.length){var n=e.indexOf(t);if(n>-1)return e.splice(n,1)}}var g=Object.prototype.hasOwnProperty;function w(e,t){return g.call(e,t)}function k(e){var t=Object.create(null);return function(n){return t[n]||(t[n]=e(n))}}var _=/-(\w)/g,M=k((function(e){return e.replace(_,(function(e,t){return t?t.toUpperCase():""}))})),A=k((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),x=/\B([A-Z])/g,O=k((function(e){return e.replace(x,"-$1").toLowerCase()}));var S=Function.prototype.bind?function(e,t){return e.bind(t)}:function(e,t){function n(n){var a=arguments.length;return a?a>1?e.apply(t,arguments):e.call(t,n):e.call(t)}return n._length=e.length,n};function C(e,t){t=t||0;for(var n=e.length-t,a=new Array(n);n--;)a[n]=e[n+t];return a}function I(e,t){for(var n in t)e[n]=t[n];return e}function R(e){for(var t={},n=0;n<e.length;n++)e[n]&&I(t,e[n]);return t}function E(e,t,n){}var P=function(e,t,n){return!1},V=function(e){return e};function D(e,t){if(e===t)return!0;var n=p(e),a=p(t);if(!n||!a)return!n&&!a&&String(e)===String(t);try{var s=Array.isArray(e),i=Array.isArray(t);if(s&&i)return e.length===t.length&&e.every((function(e,n){return D(e,t[n])}));if(e instanceof Date&&t instanceof Date)return e.getTime()===t.getTime();if(s||i)return!1;var r=Object.keys(e),o=Object.keys(t);return r.length===o.length&&r.every((function(n){return D(e[n],t[n])}))}catch(e){return!1}}function F(e,t){for(var n=0;n<e.length;n++)if(D(e[n],t))return n;return-1}function B(e){var t=!1;return function(){t||(t=!0,e.apply(this,arguments))}}var $=["component","directive","filter"],N=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch"],L={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:P,isReservedAttr:P,isUnknownElement:P,getTagNamespace:E,parsePlatformTagName:V,mustUseProp:P,async:!0,_lifecycleHooks:N},j=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function U(e){var t=(e+"").charCodeAt(0);return 36===t||95===t}function z(e,t,n,a){Object.defineProperty(e,t,{value:n,enumerable:!!a,writable:!0,configurable:!0})}var W=new RegExp("[^"+j.source+".$_\\d]");var q,H="__proto__"in{},G="undefined"!=typeof window,Q="undefined"!=typeof WXEnvironment&&!!WXEnvironment.platform,Y=Q&&WXEnvironment.platform.toLowerCase(),X=G&&window.navigator.userAgent.toLowerCase(),K=X&&/msie|trident/.test(X),J=X&&X.indexOf("msie 9.0")>0,Z=X&&X.indexOf("edge/")>0,ee=(X&&X.indexOf("android"),X&&/iphone|ipad|ipod|ios/.test(X)||"ios"===Y),te=(X&&/chrome\/\d+/.test(X),X&&/phantomjs/.test(X),X&&X.match(/firefox\/(\d+)/)),ne={}.watch,ae=!1;if(G)try{var se={};Object.defineProperty(se,"passive",{get:function(){ae=!0}}),window.addEventListener("test-passive",null,se)}catch(e){}var ie=function(){return void 0===q&&(q=!G&&!Q&&void 0!==e&&(e.process&&"server"===e.process.env.VUE_ENV)),q},re=G&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function oe(e){return"function"==typeof e&&/native code/.test(e.toString())}var pe,ue="undefined"!=typeof Symbol&&oe(Symbol)&&"undefined"!=typeof Reflect&&oe(Reflect.ownKeys);pe="undefined"!=typeof Set&&oe(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var de=E,le=0,ye=function(){this.id=le++,this.subs=[]};ye.prototype.addSub=function(e){this.subs.push(e)},ye.prototype.removeSub=function(e){T(this.subs,e)},ye.prototype.depend=function(){ye.target&&ye.target.addDep(this)},ye.prototype.notify=function(){var e=this.subs.slice();for(var t=0,n=e.length;t<n;t++)e[t].update()},ye.target=null;var ce=[];function me(e){ce.push(e),ye.target=e}function fe(){ce.pop(),ye.target=ce[ce.length-1]}var he=function(e,t,n,a,s,i,r,o){this.tag=e,this.data=t,this.children=n,this.text=a,this.elm=s,this.ns=void 0,this.context=i,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=t&&t.key,this.componentOptions=r,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=o,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1},be={child:{configurable:!0}};be.child.get=function(){return this.componentInstance},Object.defineProperties(he.prototype,be);var ve=function(e){void 0===e&&(e="");var t=new he;return t.text=e,t.isComment=!0,t};function Te(e){return new he(void 0,void 0,void 0,String(e))}function ge(e){var t=new he(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return t.ns=e.ns,t.isStatic=e.isStatic,t.key=e.key,t.isComment=e.isComment,t.fnContext=e.fnContext,t.fnOptions=e.fnOptions,t.fnScopeId=e.fnScopeId,t.asyncMeta=e.asyncMeta,t.isCloned=!0,t}var we=Array.prototype,ke=Object.create(we);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(e){var t=we[e];z(ke,e,(function(){for(var n=[],a=arguments.length;a--;)n[a]=arguments[a];var s,i=t.apply(this,n),r=this.__ob__;switch(e){case"push":case"unshift":s=n;break;case"splice":s=n.slice(2)}return s&&r.observeArray(s),r.dep.notify(),i}))}));var _e=Object.getOwnPropertyNames(ke),Me=!0;function Ae(e){Me=e}var xe=function(e){this.value=e,this.dep=new ye,this.vmCount=0,z(e,"__ob__",this),Array.isArray(e)?(H?function(e,t){e.__proto__=t}(e,ke):function(e,t,n){for(var a=0,s=n.length;a<s;a++){var i=n[a];z(e,i,t[i])}}(e,ke,_e),this.observeArray(e)):this.walk(e)};function Oe(e,t){var n;if(p(e)&&!(e instanceof he))return w(e,"__ob__")&&e.__ob__ instanceof xe?n=e.__ob__:Me&&!ie()&&(Array.isArray(e)||d(e))&&Object.isExtensible(e)&&!e._isVue&&(n=new xe(e)),t&&n&&n.vmCount++,n}function Se(e,t,n,a,s){var i=new ye,r=Object.getOwnPropertyDescriptor(e,t);if(!r||!1!==r.configurable){var o=r&&r.get,p=r&&r.set;o&&!p||2!==arguments.length||(n=e[t]);var u=!s&&Oe(n);Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var t=o?o.call(e):n;return ye.target&&(i.depend(),u&&(u.dep.depend(),Array.isArray(t)&&Re(t))),t},set:function(t){var a=o?o.call(e):n;t===a||t!=t&&a!=a||o&&!p||(p?p.call(e,t):n=t,u=!s&&Oe(t),i.notify())}})}}function Ce(e,t,n){if(Array.isArray(e)&&y(t))return e.length=Math.max(e.length,t),e.splice(t,1,n),n;if(t in e&&!(t in Object.prototype))return e[t]=n,n;var a=e.__ob__;return e._isVue||a&&a.vmCount?n:a?(Se(a.value,t,n),a.dep.notify(),n):(e[t]=n,n)}function Ie(e,t){if(Array.isArray(e)&&y(t))e.splice(t,1);else{var n=e.__ob__;e._isVue||n&&n.vmCount||w(e,t)&&(delete e[t],n&&n.dep.notify())}}function Re(e){for(var t=void 0,n=0,a=e.length;n<a;n++)(t=e[n])&&t.__ob__&&t.__ob__.dep.depend(),Array.isArray(t)&&Re(t)}xe.prototype.walk=function(e){for(var t=Object.keys(e),n=0;n<t.length;n++)Se(e,t[n])},xe.prototype.observeArray=function(e){for(var t=0,n=e.length;t<n;t++)Oe(e[t])};var Ee=L.optionMergeStrategies;function Pe(e,t){if(!t)return e;for(var n,a,s,i=ue?Reflect.ownKeys(t):Object.keys(t),r=0;r<i.length;r++)"__ob__"!==(n=i[r])&&(a=e[n],s=t[n],w(e,n)?a!==s&&d(a)&&d(s)&&Pe(a,s):Ce(e,n,s));return e}function Ve(e,t,n){return n?function(){var a="function"==typeof t?t.call(n,n):t,s="function"==typeof e?e.call(n,n):e;return a?Pe(a,s):s}:t?e?function(){return Pe("function"==typeof t?t.call(this,this):t,"function"==typeof e?e.call(this,this):e)}:t:e}function De(e,t){var n=t?e?e.concat(t):Array.isArray(t)?t:[t]:e;return n?function(e){for(var t=[],n=0;n<e.length;n++)-1===t.indexOf(e[n])&&t.push(e[n]);return t}(n):n}function Fe(e,t,n,a){var s=Object.create(e||null);return t?I(s,t):s}Ee.data=function(e,t,n){return n?Ve(e,t,n):t&&"function"!=typeof t?e:Ve(e,t)},N.forEach((function(e){Ee[e]=De})),$.forEach((function(e){Ee[e+"s"]=Fe})),Ee.watch=function(e,t,n,a){if(e===ne&&(e=void 0),t===ne&&(t=void 0),!t)return Object.create(e||null);if(!e)return t;var s={};for(var i in I(s,e),t){var r=s[i],o=t[i];r&&!Array.isArray(r)&&(r=[r]),s[i]=r?r.concat(o):Array.isArray(o)?o:[o]}return s},Ee.props=Ee.methods=Ee.inject=Ee.computed=function(e,t,n,a){if(!e)return t;var s=Object.create(null);return I(s,e),t&&I(s,t),s},Ee.provide=Ve;var Be=function(e,t){return void 0===t?e:t};function $e(e,t,n){if("function"==typeof t&&(t=t.options),function(e,t){var n=e.props;if(n){var a,s,i={};if(Array.isArray(n))for(a=n.length;a--;)"string"==typeof(s=n[a])&&(i[M(s)]={type:null});else if(d(n))for(var r in n)s=n[r],i[M(r)]=d(s)?s:{type:s};else 0;e.props=i}}(t),function(e,t){var n=e.inject;if(n){var a=e.inject={};if(Array.isArray(n))for(var s=0;s<n.length;s++)a[n[s]]={from:n[s]};else if(d(n))for(var i in n){var r=n[i];a[i]=d(r)?I({from:i},r):{from:r}}else 0}}(t),function(e){var t=e.directives;if(t)for(var n in t){var a=t[n];"function"==typeof a&&(t[n]={bind:a,update:a})}}(t),!t._base&&(t.extends&&(e=$e(e,t.extends,n)),t.mixins))for(var a=0,s=t.mixins.length;a<s;a++)e=$e(e,t.mixins[a],n);var i,r={};for(i in e)o(i);for(i in t)w(e,i)||o(i);function o(a){var s=Ee[a]||Be;r[a]=s(e[a],t[a],n,a)}return r}function Ne(e,t,n,a){if("string"==typeof n){var s=e[t];if(w(s,n))return s[n];var i=M(n);if(w(s,i))return s[i];var r=A(i);return w(s,r)?s[r]:s[n]||s[i]||s[r]}}function Le(e,t,n,a){var s=t[e],i=!w(n,e),r=n[e],o=We(Boolean,s.type);if(o>-1)if(i&&!w(s,"default"))r=!1;else if(""===r||r===O(e)){var p=We(String,s.type);(p<0||o<p)&&(r=!0)}if(void 0===r){r=function(e,t,n){if(!w(t,"default"))return;var a=t.default;0;if(e&&e.$options.propsData&&void 0===e.$options.propsData[n]&&void 0!==e._props[n])return e._props[n];return"function"==typeof a&&"Function"!==Ue(t.type)?a.call(e):a}(a,s,e);var u=Me;Ae(!0),Oe(r),Ae(u)}return r}var je=/^\s*function (\w+)/;function Ue(e){var t=e&&e.toString().match(je);return t?t[1]:""}function ze(e,t){return Ue(e)===Ue(t)}function We(e,t){if(!Array.isArray(t))return ze(t,e)?0:-1;for(var n=0,a=t.length;n<a;n++)if(ze(t[n],e))return n;return-1}function qe(e,t,n){me();try{if(t)for(var a=t;a=a.$parent;){var s=a.$options.errorCaptured;if(s)for(var i=0;i<s.length;i++)try{if(!1===s[i].call(a,e,t,n))return}catch(e){Ge(e,a,"errorCaptured hook")}}Ge(e,t,n)}finally{fe()}}function He(e,t,n,a,s){var i;try{(i=n?e.apply(t,n):e.call(t))&&!i._isVue&&c(i)&&!i._handled&&(i.catch((function(e){return qe(e,a,s+" (Promise/async)")})),i._handled=!0)}catch(e){qe(e,a,s)}return i}function Ge(e,t,n){if(L.errorHandler)try{return L.errorHandler.call(null,e,t,n)}catch(t){t!==e&&Qe(t,null,"config.errorHandler")}Qe(e,t,n)}function Qe(e,t,n){if(!G&&!Q||"undefined"==typeof console)throw e;console.error(e)}var Ye,Xe=!1,Ke=[],Je=!1;function Ze(){Je=!1;var e=Ke.slice(0);Ke.length=0;for(var t=0;t<e.length;t++)e[t]()}if("undefined"!=typeof Promise&&oe(Promise)){var et=Promise.resolve();Ye=function(){et.then(Ze),ee&&setTimeout(E)},Xe=!0}else if(K||"undefined"==typeof MutationObserver||!oe(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())Ye=void 0!==n&&oe(n)?function(){n(Ze)}:function(){setTimeout(Ze,0)};else{var tt=1,nt=new MutationObserver(Ze),at=document.createTextNode(String(tt));nt.observe(at,{characterData:!0}),Ye=function(){tt=(tt+1)%2,at.data=String(tt)},Xe=!0}function st(e,t){var n;if(Ke.push((function(){if(e)try{e.call(t)}catch(e){qe(e,t,"nextTick")}else n&&n(t)})),Je||(Je=!0,Ye()),!e&&"undefined"!=typeof Promise)return new Promise((function(e){n=e}))}var it=new pe;function rt(e){!function e(t,n){var a,s,i=Array.isArray(t);if(!i&&!p(t)||Object.isFrozen(t)||t instanceof he)return;if(t.__ob__){var r=t.__ob__.dep.id;if(n.has(r))return;n.add(r)}if(i)for(a=t.length;a--;)e(t[a],n);else for(s=Object.keys(t),a=s.length;a--;)e(t[s[a]],n)}(e,it),it.clear()}var ot=k((function(e){var t="&"===e.charAt(0),n="~"===(e=t?e.slice(1):e).charAt(0),a="!"===(e=n?e.slice(1):e).charAt(0);return{name:e=a?e.slice(1):e,once:n,capture:a,passive:t}}));function pt(e,t){function n(){var e=arguments,a=n.fns;if(!Array.isArray(a))return He(a,null,arguments,t,"v-on handler");for(var s=a.slice(),i=0;i<s.length;i++)He(s[i],null,e,t,"v-on handler")}return n.fns=e,n}function ut(e,t,n,a,i,o){var p,u,d,l;for(p in e)u=e[p],d=t[p],l=ot(p),s(u)||(s(d)?(s(u.fns)&&(u=e[p]=pt(u,o)),r(l.once)&&(u=e[p]=i(l.name,u,l.capture)),n(l.name,u,l.capture,l.passive,l.params)):u!==d&&(d.fns=u,e[p]=d));for(p in t)s(e[p])&&a((l=ot(p)).name,t[p],l.capture)}function dt(e,t,n){var a;e instanceof he&&(e=e.data.hook||(e.data.hook={}));var o=e[t];function p(){n.apply(this,arguments),T(a.fns,p)}s(o)?a=pt([p]):i(o.fns)&&r(o.merged)?(a=o).fns.push(p):a=pt([o,p]),a.merged=!0,e[t]=a}function lt(e,t,n,a,s){if(i(t)){if(w(t,n))return e[n]=t[n],s||delete t[n],!0;if(w(t,a))return e[n]=t[a],s||delete t[a],!0}return!1}function yt(e){return o(e)?[Te(e)]:Array.isArray(e)?function e(t,n){var a,p,u,d,l=[];for(a=0;a<t.length;a++)s(p=t[a])||"boolean"==typeof p||(u=l.length-1,d=l[u],Array.isArray(p)?p.length>0&&(ct((p=e(p,(n||"")+"_"+a))[0])&&ct(d)&&(l[u]=Te(d.text+p[0].text),p.shift()),l.push.apply(l,p)):o(p)?ct(d)?l[u]=Te(d.text+p):""!==p&&l.push(Te(p)):ct(p)&&ct(d)?l[u]=Te(d.text+p.text):(r(t._isVList)&&i(p.tag)&&s(p.key)&&i(n)&&(p.key="__vlist"+n+"_"+a+"__"),l.push(p)));return l}(e):void 0}function ct(e){return i(e)&&i(e.text)&&!1===e.isComment}function mt(e,t){if(e){for(var n=Object.create(null),a=ue?Reflect.ownKeys(e):Object.keys(e),s=0;s<a.length;s++){var i=a[s];if("__ob__"!==i){for(var r=e[i].from,o=t;o;){if(o._provided&&w(o._provided,r)){n[i]=o._provided[r];break}o=o.$parent}if(!o)if("default"in e[i]){var p=e[i].default;n[i]="function"==typeof p?p.call(t):p}else 0}}return n}}function ft(e,t){if(!e||!e.length)return{};for(var n={},a=0,s=e.length;a<s;a++){var i=e[a],r=i.data;if(r&&r.attrs&&r.attrs.slot&&delete r.attrs.slot,i.context!==t&&i.fnContext!==t||!r||null==r.slot)(n.default||(n.default=[])).push(i);else{var o=r.slot,p=n[o]||(n[o]=[]);"template"===i.tag?p.push.apply(p,i.children||[]):p.push(i)}}for(var u in n)n[u].every(ht)&&delete n[u];return n}function ht(e){return e.isComment&&!e.asyncFactory||" "===e.text}function bt(e){return e.isComment&&e.asyncFactory}function vt(e,t,n){var s,i=Object.keys(t).length>0,r=e?!!e.$stable:!i,o=e&&e.$key;if(e){if(e._normalized)return e._normalized;if(r&&n&&n!==a&&o===n.$key&&!i&&!n.$hasNormal)return n;for(var p in s={},e)e[p]&&"$"!==p[0]&&(s[p]=Tt(t,p,e[p]))}else s={};for(var u in t)u in s||(s[u]=gt(t,u));return e&&Object.isExtensible(e)&&(e._normalized=s),z(s,"$stable",r),z(s,"$key",o),z(s,"$hasNormal",i),s}function Tt(e,t,n){var a=function(){var e=arguments.length?n.apply(null,arguments):n({}),t=(e=e&&"object"==typeof e&&!Array.isArray(e)?[e]:yt(e))&&e[0];return e&&(!t||1===e.length&&t.isComment&&!bt(t))?void 0:e};return n.proxy&&Object.defineProperty(e,t,{get:a,enumerable:!0,configurable:!0}),a}function gt(e,t){return function(){return e[t]}}function wt(e,t){var n,a,s,r,o;if(Array.isArray(e)||"string"==typeof e)for(n=new Array(e.length),a=0,s=e.length;a<s;a++)n[a]=t(e[a],a);else if("number"==typeof e)for(n=new Array(e),a=0;a<e;a++)n[a]=t(a+1,a);else if(p(e))if(ue&&e[Symbol.iterator]){n=[];for(var u=e[Symbol.iterator](),d=u.next();!d.done;)n.push(t(d.value,n.length)),d=u.next()}else for(r=Object.keys(e),n=new Array(r.length),a=0,s=r.length;a<s;a++)o=r[a],n[a]=t(e[o],o,a);return i(n)||(n=[]),n._isVList=!0,n}function kt(e,t,n,a){var s,i=this.$scopedSlots[e];i?(n=n||{},a&&(n=I(I({},a),n)),s=i(n)||("function"==typeof t?t():t)):s=this.$slots[e]||("function"==typeof t?t():t);var r=n&&n.slot;return r?this.$createElement("template",{slot:r},s):s}function _t(e){return Ne(this.$options,"filters",e)||V}function Mt(e,t){return Array.isArray(e)?-1===e.indexOf(t):e!==t}function At(e,t,n,a,s){var i=L.keyCodes[t]||n;return s&&a&&!L.keyCodes[t]?Mt(s,a):i?Mt(i,e):a?O(a)!==t:void 0===e}function xt(e,t,n,a,s){if(n)if(p(n)){var i;Array.isArray(n)&&(n=R(n));var r=function(r){if("class"===r||"style"===r||v(r))i=e;else{var o=e.attrs&&e.attrs.type;i=a||L.mustUseProp(t,o,r)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var p=M(r),u=O(r);p in i||u in i||(i[r]=n[r],s&&((e.on||(e.on={}))["update:"+r]=function(e){n[r]=e}))};for(var o in n)r(o)}else;return e}function Ot(e,t){var n=this._staticTrees||(this._staticTrees=[]),a=n[e];return a&&!t||Ct(a=n[e]=this.$options.staticRenderFns[e].call(this._renderProxy,null,this),"__static__"+e,!1),a}function St(e,t,n){return Ct(e,"__once__"+t+(n?"_"+n:""),!0),e}function Ct(e,t,n){if(Array.isArray(e))for(var a=0;a<e.length;a++)e[a]&&"string"!=typeof e[a]&&It(e[a],t+"_"+a,n);else It(e,t,n)}function It(e,t,n){e.isStatic=!0,e.key=t,e.isOnce=n}function Rt(e,t){if(t)if(d(t)){var n=e.on=e.on?I({},e.on):{};for(var a in t){var s=n[a],i=t[a];n[a]=s?[].concat(s,i):i}}else;return e}function Et(e,t,n,a){t=t||{$stable:!n};for(var s=0;s<e.length;s++){var i=e[s];Array.isArray(i)?Et(i,t,n):i&&(i.proxy&&(i.fn.proxy=!0),t[i.key]=i.fn)}return a&&(t.$key=a),t}function Pt(e,t){for(var n=0;n<t.length;n+=2){var a=t[n];"string"==typeof a&&a&&(e[t[n]]=t[n+1])}return e}function Vt(e,t){return"string"==typeof e?t+e:e}function Dt(e){e._o=St,e._n=f,e._s=m,e._l=wt,e._t=kt,e._q=D,e._i=F,e._m=Ot,e._f=_t,e._k=At,e._b=xt,e._v=Te,e._e=ve,e._u=Et,e._g=Rt,e._d=Pt,e._p=Vt}function Ft(e,t,n,s,i){var o,p=this,u=i.options;w(s,"_uid")?(o=Object.create(s))._original=s:(o=s,s=s._original);var d=r(u._compiled),l=!d;this.data=e,this.props=t,this.children=n,this.parent=s,this.listeners=e.on||a,this.injections=mt(u.inject,s),this.slots=function(){return p.$slots||vt(e.scopedSlots,p.$slots=ft(n,s)),p.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return vt(e.scopedSlots,this.slots())}}),d&&(this.$options=u,this.$slots=this.slots(),this.$scopedSlots=vt(e.scopedSlots,this.$slots)),u._scopeId?this._c=function(e,t,n,a){var i=zt(o,e,t,n,a,l);return i&&!Array.isArray(i)&&(i.fnScopeId=u._scopeId,i.fnContext=s),i}:this._c=function(e,t,n,a){return zt(o,e,t,n,a,l)}}function Bt(e,t,n,a,s){var i=ge(e);return i.fnContext=n,i.fnOptions=a,t.slot&&((i.data||(i.data={})).slot=t.slot),i}function $t(e,t){for(var n in t)e[M(n)]=t[n]}Dt(Ft.prototype);var Nt={init:function(e,t){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var n=e;Nt.prepatch(n,n)}else{(e.componentInstance=function(e,t){var n={_isComponent:!0,_parentVnode:e,parent:t},a=e.data.inlineTemplate;i(a)&&(n.render=a.render,n.staticRenderFns=a.staticRenderFns);return new e.componentOptions.Ctor(n)}(e,Jt)).$mount(t?e.elm:void 0,t)}},prepatch:function(e,t){var n=t.componentOptions;!function(e,t,n,s,i){0;var r=s.data.scopedSlots,o=e.$scopedSlots,p=!!(r&&!r.$stable||o!==a&&!o.$stable||r&&e.$scopedSlots.$key!==r.$key||!r&&e.$scopedSlots.$key),u=!!(i||e.$options._renderChildren||p);e.$options._parentVnode=s,e.$vnode=s,e._vnode&&(e._vnode.parent=s);if(e.$options._renderChildren=i,e.$attrs=s.data.attrs||a,e.$listeners=n||a,t&&e.$options.props){Ae(!1);for(var d=e._props,l=e.$options._propKeys||[],y=0;y<l.length;y++){var c=l[y],m=e.$options.props;d[c]=Le(c,m,t,e)}Ae(!0),e.$options.propsData=t}n=n||a;var f=e.$options._parentListeners;e.$options._parentListeners=n,Kt(e,n,f),u&&(e.$slots=ft(i,s.context),e.$forceUpdate());0}(t.componentInstance=e.componentInstance,n.propsData,n.listeners,t,n.children)},insert:function(e){var t,n=e.context,a=e.componentInstance;a._isMounted||(a._isMounted=!0,nn(a,"mounted")),e.data.keepAlive&&(n._isMounted?((t=a)._inactive=!1,sn.push(t)):tn(a,!0))},destroy:function(e){var t=e.componentInstance;t._isDestroyed||(e.data.keepAlive?function e(t,n){if(n&&(t._directInactive=!0,en(t)))return;if(!t._inactive){t._inactive=!0;for(var a=0;a<t.$children.length;a++)e(t.$children[a]);nn(t,"deactivated")}}(t,!0):t.$destroy())}},Lt=Object.keys(Nt);function jt(e,t,n,o,u){if(!s(e)){var d=n.$options._base;if(p(e)&&(e=d.extend(e)),"function"==typeof e){var l;if(s(e.cid)&&void 0===(e=function(e,t){if(r(e.error)&&i(e.errorComp))return e.errorComp;if(i(e.resolved))return e.resolved;var n=qt;n&&i(e.owners)&&-1===e.owners.indexOf(n)&&e.owners.push(n);if(r(e.loading)&&i(e.loadingComp))return e.loadingComp;if(n&&!i(e.owners)){var a=e.owners=[n],o=!0,u=null,d=null;n.$on("hook:destroyed",(function(){return T(a,n)}));var l=function(e){for(var t=0,n=a.length;t<n;t++)a[t].$forceUpdate();e&&(a.length=0,null!==u&&(clearTimeout(u),u=null),null!==d&&(clearTimeout(d),d=null))},y=B((function(n){e.resolved=Ht(n,t),o?a.length=0:l(!0)})),m=B((function(t){i(e.errorComp)&&(e.error=!0,l(!0))})),f=e(y,m);return p(f)&&(c(f)?s(e.resolved)&&f.then(y,m):c(f.component)&&(f.component.then(y,m),i(f.error)&&(e.errorComp=Ht(f.error,t)),i(f.loading)&&(e.loadingComp=Ht(f.loading,t),0===f.delay?e.loading=!0:u=setTimeout((function(){u=null,s(e.resolved)&&s(e.error)&&(e.loading=!0,l(!1))}),f.delay||200)),i(f.timeout)&&(d=setTimeout((function(){d=null,s(e.resolved)&&m(null)}),f.timeout)))),o=!1,e.loading?e.loadingComp:e.resolved}}(l=e,d)))return function(e,t,n,a,s){var i=ve();return i.asyncFactory=e,i.asyncMeta={data:t,context:n,children:a,tag:s},i}(l,t,n,o,u);t=t||{},An(e),i(t.model)&&function(e,t){var n=e.model&&e.model.prop||"value",a=e.model&&e.model.event||"input";(t.attrs||(t.attrs={}))[n]=t.model.value;var s=t.on||(t.on={}),r=s[a],o=t.model.callback;i(r)?(Array.isArray(r)?-1===r.indexOf(o):r!==o)&&(s[a]=[o].concat(r)):s[a]=o}(e.options,t);var y=function(e,t,n){var a=t.options.props;if(!s(a)){var r={},o=e.attrs,p=e.props;if(i(o)||i(p))for(var u in a){var d=O(u);lt(r,p,u,d,!0)||lt(r,o,u,d,!1)}return r}}(t,e);if(r(e.options.functional))return function(e,t,n,s,r){var o=e.options,p={},u=o.props;if(i(u))for(var d in u)p[d]=Le(d,u,t||a);else i(n.attrs)&&$t(p,n.attrs),i(n.props)&&$t(p,n.props);var l=new Ft(n,p,r,s,e),y=o.render.call(null,l._c,l);if(y instanceof he)return Bt(y,n,l.parent,o,l);if(Array.isArray(y)){for(var c=yt(y)||[],m=new Array(c.length),f=0;f<c.length;f++)m[f]=Bt(c[f],n,l.parent,o,l);return m}}(e,y,t,n,o);var m=t.on;if(t.on=t.nativeOn,r(e.options.abstract)){var f=t.slot;t={},f&&(t.slot=f)}!function(e){for(var t=e.hook||(e.hook={}),n=0;n<Lt.length;n++){var a=Lt[n],s=t[a],i=Nt[a];s===i||s&&s._merged||(t[a]=s?Ut(i,s):i)}}(t);var h=e.options.name||u;return new he("vue-component-"+e.cid+(h?"-"+h:""),t,void 0,void 0,void 0,n,{Ctor:e,propsData:y,listeners:m,tag:u,children:o},l)}}}function Ut(e,t){var n=function(n,a){e(n,a),t(n,a)};return n._merged=!0,n}function zt(e,t,n,a,u,d){return(Array.isArray(n)||o(n))&&(u=a,a=n,n=void 0),r(d)&&(u=2),function(e,t,n,a,o){if(i(n)&&i(n.__ob__))return ve();i(n)&&i(n.is)&&(t=n.is);if(!t)return ve();0;Array.isArray(a)&&"function"==typeof a[0]&&((n=n||{}).scopedSlots={default:a[0]},a.length=0);2===o?a=yt(a):1===o&&(a=function(e){for(var t=0;t<e.length;t++)if(Array.isArray(e[t]))return Array.prototype.concat.apply([],e);return e}(a));var u,d;if("string"==typeof t){var l;d=e.$vnode&&e.$vnode.ns||L.getTagNamespace(t),u=L.isReservedTag(t)?new he(L.parsePlatformTagName(t),n,a,void 0,void 0,e):n&&n.pre||!i(l=Ne(e.$options,"components",t))?new he(t,n,a,void 0,void 0,e):jt(l,n,e,a,t)}else u=jt(t,n,e,a);return Array.isArray(u)?u:i(u)?(i(d)&&function e(t,n,a){t.ns=n,"foreignObject"===t.tag&&(n=void 0,a=!0);if(i(t.children))for(var o=0,p=t.children.length;o<p;o++){var u=t.children[o];i(u.tag)&&(s(u.ns)||r(a)&&"svg"!==u.tag)&&e(u,n,a)}}(u,d),i(n)&&function(e){p(e.style)&&rt(e.style);p(e.class)&&rt(e.class)}(n),u):ve()}(e,t,n,a,u)}var Wt,qt=null;function Ht(e,t){return(e.__esModule||ue&&"Module"===e[Symbol.toStringTag])&&(e=e.default),p(e)?t.extend(e):e}function Gt(e){if(Array.isArray(e))for(var t=0;t<e.length;t++){var n=e[t];if(i(n)&&(i(n.componentOptions)||bt(n)))return n}}function Qt(e,t){Wt.$on(e,t)}function Yt(e,t){Wt.$off(e,t)}function Xt(e,t){var n=Wt;return function a(){var s=t.apply(null,arguments);null!==s&&n.$off(e,a)}}function Kt(e,t,n){Wt=e,ut(t,n||{},Qt,Yt,Xt,e),Wt=void 0}var Jt=null;function Zt(e){var t=Jt;return Jt=e,function(){Jt=t}}function en(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function tn(e,t){if(t){if(e._directInactive=!1,en(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var n=0;n<e.$children.length;n++)tn(e.$children[n]);nn(e,"activated")}}function nn(e,t){me();var n=e.$options[t],a=t+" hook";if(n)for(var s=0,i=n.length;s<i;s++)He(n[s],e,null,e,a);e._hasHookEvent&&e.$emit("hook:"+t),fe()}var an=[],sn=[],rn={},on=!1,pn=!1,un=0;var dn=0,ln=Date.now;if(G&&!K){var yn=window.performance;yn&&"function"==typeof yn.now&&ln()>document.createEvent("Event").timeStamp&&(ln=function(){return yn.now()})}function cn(){var e,t;for(dn=ln(),pn=!0,an.sort((function(e,t){return e.id-t.id})),un=0;un<an.length;un++)(e=an[un]).before&&e.before(),t=e.id,rn[t]=null,e.run();var n=sn.slice(),a=an.slice();un=an.length=sn.length=0,rn={},on=pn=!1,function(e){for(var t=0;t<e.length;t++)e[t]._inactive=!0,tn(e[t],!0)}(n),function(e){var t=e.length;for(;t--;){var n=e[t],a=n.vm;a._watcher===n&&a._isMounted&&!a._isDestroyed&&nn(a,"updated")}}(a),re&&L.devtools&&re.emit("flush")}var mn=0,fn=function(e,t,n,a,s){this.vm=e,s&&(e._watcher=this),e._watchers.push(this),a?(this.deep=!!a.deep,this.user=!!a.user,this.lazy=!!a.lazy,this.sync=!!a.sync,this.before=a.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=n,this.id=++mn,this.active=!0,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new pe,this.newDepIds=new pe,this.expression="","function"==typeof t?this.getter=t:(this.getter=function(e){if(!W.test(e)){var t=e.split(".");return function(e){for(var n=0;n<t.length;n++){if(!e)return;e=e[t[n]]}return e}}}(t),this.getter||(this.getter=E)),this.value=this.lazy?void 0:this.get()};fn.prototype.get=function(){var e;me(this);var t=this.vm;try{e=this.getter.call(t,t)}catch(e){if(!this.user)throw e;qe(e,t,'getter for watcher "'+this.expression+'"')}finally{this.deep&&rt(e),fe(),this.cleanupDeps()}return e},fn.prototype.addDep=function(e){var t=e.id;this.newDepIds.has(t)||(this.newDepIds.add(t),this.newDeps.push(e),this.depIds.has(t)||e.addSub(this))},fn.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var t=this.deps[e];this.newDepIds.has(t.id)||t.removeSub(this)}var n=this.depIds;this.depIds=this.newDepIds,this.newDepIds=n,this.newDepIds.clear(),n=this.deps,this.deps=this.newDeps,this.newDeps=n,this.newDeps.length=0},fn.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():function(e){var t=e.id;if(null==rn[t]){if(rn[t]=!0,pn){for(var n=an.length-1;n>un&&an[n].id>e.id;)n--;an.splice(n+1,0,e)}else an.push(e);on||(on=!0,st(cn))}}(this)},fn.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||p(e)||this.deep){var t=this.value;if(this.value=e,this.user){var n='callback for watcher "'+this.expression+'"';He(this.cb,this.vm,[e,t],this.vm,n)}else this.cb.call(this.vm,e,t)}}},fn.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},fn.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},fn.prototype.teardown=function(){if(this.active){this.vm._isBeingDestroyed||T(this.vm._watchers,this);for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1}};var hn={enumerable:!0,configurable:!0,get:E,set:E};function bn(e,t,n){hn.get=function(){return this[t][n]},hn.set=function(e){this[t][n]=e},Object.defineProperty(e,n,hn)}function vn(e){e._watchers=[];var t=e.$options;t.props&&function(e,t){var n=e.$options.propsData||{},a=e._props={},s=e.$options._propKeys=[];e.$parent&&Ae(!1);var i=function(i){s.push(i);var r=Le(i,t,n,e);Se(a,i,r),i in e||bn(e,"_props",i)};for(var r in t)i(r);Ae(!0)}(e,t.props),t.methods&&function(e,t){e.$options.props;for(var n in t)e[n]="function"!=typeof t[n]?E:S(t[n],e)}(e,t.methods),t.data?function(e){var t=e.$options.data;d(t=e._data="function"==typeof t?function(e,t){me();try{return e.call(t,t)}catch(e){return qe(e,t,"data()"),{}}finally{fe()}}(t,e):t||{})||(t={});var n=Object.keys(t),a=e.$options.props,s=(e.$options.methods,n.length);for(;s--;){var i=n[s];0,a&&w(a,i)||U(i)||bn(e,"_data",i)}Oe(t,!0)}(e):Oe(e._data={},!0),t.computed&&function(e,t){var n=e._computedWatchers=Object.create(null),a=ie();for(var s in t){var i=t[s],r="function"==typeof i?i:i.get;0,a||(n[s]=new fn(e,r||E,E,Tn)),s in e||gn(e,s,i)}}(e,t.computed),t.watch&&t.watch!==ne&&function(e,t){for(var n in t){var a=t[n];if(Array.isArray(a))for(var s=0;s<a.length;s++)_n(e,n,a[s]);else _n(e,n,a)}}(e,t.watch)}var Tn={lazy:!0};function gn(e,t,n){var a=!ie();"function"==typeof n?(hn.get=a?wn(t):kn(n),hn.set=E):(hn.get=n.get?a&&!1!==n.cache?wn(t):kn(n.get):E,hn.set=n.set||E),Object.defineProperty(e,t,hn)}function wn(e){return function(){var t=this._computedWatchers&&this._computedWatchers[e];if(t)return t.dirty&&t.evaluate(),ye.target&&t.depend(),t.value}}function kn(e){return function(){return e.call(this,this)}}function _n(e,t,n,a){return d(n)&&(a=n,n=n.handler),"string"==typeof n&&(n=e[n]),e.$watch(t,n,a)}var Mn=0;function An(e){var t=e.options;if(e.super){var n=An(e.super);if(n!==e.superOptions){e.superOptions=n;var a=function(e){var t,n=e.options,a=e.sealedOptions;for(var s in n)n[s]!==a[s]&&(t||(t={}),t[s]=n[s]);return t}(e);a&&I(e.extendOptions,a),(t=e.options=$e(n,e.extendOptions)).name&&(t.components[t.name]=e)}}return t}function xn(e){this._init(e)}function On(e){e.cid=0;var t=1;e.extend=function(e){e=e||{};var n=this,a=n.cid,s=e._Ctor||(e._Ctor={});if(s[a])return s[a];var i=e.name||n.options.name;var r=function(e){this._init(e)};return(r.prototype=Object.create(n.prototype)).constructor=r,r.cid=t++,r.options=$e(n.options,e),r.super=n,r.options.props&&function(e){var t=e.options.props;for(var n in t)bn(e.prototype,"_props",n)}(r),r.options.computed&&function(e){var t=e.options.computed;for(var n in t)gn(e.prototype,n,t[n])}(r),r.extend=n.extend,r.mixin=n.mixin,r.use=n.use,$.forEach((function(e){r[e]=n[e]})),i&&(r.options.components[i]=r),r.superOptions=n.options,r.extendOptions=e,r.sealedOptions=I({},r.options),s[a]=r,r}}function Sn(e){return e&&(e.Ctor.options.name||e.tag)}function Cn(e,t){return Array.isArray(e)?e.indexOf(t)>-1:"string"==typeof e?e.split(",").indexOf(t)>-1:!!l(e)&&e.test(t)}function In(e,t){var n=e.cache,a=e.keys,s=e._vnode;for(var i in n){var r=n[i];if(r){var o=r.name;o&&!t(o)&&Rn(n,i,a,s)}}}function Rn(e,t,n,a){var s=e[t];!s||a&&s.tag===a.tag||s.componentInstance.$destroy(),e[t]=null,T(n,t)}!function(e){e.prototype._init=function(e){var t=this;t._uid=Mn++,t._isVue=!0,e&&e._isComponent?function(e,t){var n=e.$options=Object.create(e.constructor.options),a=t._parentVnode;n.parent=t.parent,n._parentVnode=a;var s=a.componentOptions;n.propsData=s.propsData,n._parentListeners=s.listeners,n._renderChildren=s.children,n._componentTag=s.tag,t.render&&(n.render=t.render,n.staticRenderFns=t.staticRenderFns)}(t,e):t.$options=$e(An(t.constructor),e||{},t),t._renderProxy=t,t._self=t,function(e){var t=e.$options,n=t.parent;if(n&&!t.abstract){for(;n.$options.abstract&&n.$parent;)n=n.$parent;n.$children.push(e)}e.$parent=n,e.$root=n?n.$root:e,e.$children=[],e.$refs={},e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(t),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var t=e.$options._parentListeners;t&&Kt(e,t)}(t),function(e){e._vnode=null,e._staticTrees=null;var t=e.$options,n=e.$vnode=t._parentVnode,s=n&&n.context;e.$slots=ft(t._renderChildren,s),e.$scopedSlots=a,e._c=function(t,n,a,s){return zt(e,t,n,a,s,!1)},e.$createElement=function(t,n,a,s){return zt(e,t,n,a,s,!0)};var i=n&&n.data;Se(e,"$attrs",i&&i.attrs||a,null,!0),Se(e,"$listeners",t._parentListeners||a,null,!0)}(t),nn(t,"beforeCreate"),function(e){var t=mt(e.$options.inject,e);t&&(Ae(!1),Object.keys(t).forEach((function(n){Se(e,n,t[n])})),Ae(!0))}(t),vn(t),function(e){var t=e.$options.provide;t&&(e._provided="function"==typeof t?t.call(e):t)}(t),nn(t,"created"),t.$options.el&&t.$mount(t.$options.el)}}(xn),function(e){var t={get:function(){return this._data}},n={get:function(){return this._props}};Object.defineProperty(e.prototype,"$data",t),Object.defineProperty(e.prototype,"$props",n),e.prototype.$set=Ce,e.prototype.$delete=Ie,e.prototype.$watch=function(e,t,n){if(d(t))return _n(this,e,t,n);(n=n||{}).user=!0;var a=new fn(this,e,t,n);if(n.immediate){var s='callback for immediate watcher "'+a.expression+'"';me(),He(t,this,[a.value],this,s),fe()}return function(){a.teardown()}}}(xn),function(e){var t=/^hook:/;e.prototype.$on=function(e,n){var a=this;if(Array.isArray(e))for(var s=0,i=e.length;s<i;s++)a.$on(e[s],n);else(a._events[e]||(a._events[e]=[])).push(n),t.test(e)&&(a._hasHookEvent=!0);return a},e.prototype.$once=function(e,t){var n=this;function a(){n.$off(e,a),t.apply(n,arguments)}return a.fn=t,n.$on(e,a),n},e.prototype.$off=function(e,t){var n=this;if(!arguments.length)return n._events=Object.create(null),n;if(Array.isArray(e)){for(var a=0,s=e.length;a<s;a++)n.$off(e[a],t);return n}var i,r=n._events[e];if(!r)return n;if(!t)return n._events[e]=null,n;for(var o=r.length;o--;)if((i=r[o])===t||i.fn===t){r.splice(o,1);break}return n},e.prototype.$emit=function(e){var t=this,n=t._events[e];if(n){n=n.length>1?C(n):n;for(var a=C(arguments,1),s='event handler for "'+e+'"',i=0,r=n.length;i<r;i++)He(n[i],t,a,t,s)}return t}}(xn),function(e){e.prototype._update=function(e,t){var n=this,a=n.$el,s=n._vnode,i=Zt(n);n._vnode=e,n.$el=s?n.__patch__(s,e):n.__patch__(n.$el,e,t,!1),i(),a&&(a.__vue__=null),n.$el&&(n.$el.__vue__=n),n.$vnode&&n.$parent&&n.$vnode===n.$parent._vnode&&(n.$parent.$el=n.$el)},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){nn(e,"beforeDestroy"),e._isBeingDestroyed=!0;var t=e.$parent;!t||t._isBeingDestroyed||e.$options.abstract||T(t.$children,e),e._watcher&&e._watcher.teardown();for(var n=e._watchers.length;n--;)e._watchers[n].teardown();e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),nn(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(xn),function(e){Dt(e.prototype),e.prototype.$nextTick=function(e){return st(e,this)},e.prototype._render=function(){var e,t=this,n=t.$options,a=n.render,s=n._parentVnode;s&&(t.$scopedSlots=vt(s.data.scopedSlots,t.$slots,t.$scopedSlots)),t.$vnode=s;try{qt=t,e=a.call(t._renderProxy,t.$createElement)}catch(n){qe(n,t,"render"),e=t._vnode}finally{qt=null}return Array.isArray(e)&&1===e.length&&(e=e[0]),e instanceof he||(e=ve()),e.parent=s,e}}(xn);var En=[String,RegExp,Array],Pn={KeepAlive:{name:"keep-alive",abstract:!0,props:{include:En,exclude:En,max:[String,Number]},methods:{cacheVNode:function(){var e=this.cache,t=this.keys,n=this.vnodeToCache,a=this.keyToCache;if(n){var s=n.tag,i=n.componentInstance,r=n.componentOptions;e[a]={name:Sn(r),tag:s,componentInstance:i},t.push(a),this.max&&t.length>parseInt(this.max)&&Rn(e,t[0],t,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)Rn(this.cache,e,this.keys)},mounted:function(){var e=this;this.cacheVNode(),this.$watch("include",(function(t){In(e,(function(e){return Cn(t,e)}))})),this.$watch("exclude",(function(t){In(e,(function(e){return!Cn(t,e)}))}))},updated:function(){this.cacheVNode()},render:function(){var e=this.$slots.default,t=Gt(e),n=t&&t.componentOptions;if(n){var a=Sn(n),s=this.include,i=this.exclude;if(s&&(!a||!Cn(s,a))||i&&a&&Cn(i,a))return t;var r=this.cache,o=this.keys,p=null==t.key?n.Ctor.cid+(n.tag?"::"+n.tag:""):t.key;r[p]?(t.componentInstance=r[p].componentInstance,T(o,p),o.push(p)):(this.vnodeToCache=t,this.keyToCache=p),t.data.keepAlive=!0}return t||e&&e[0]}}};!function(e){var t={get:function(){return L}};Object.defineProperty(e,"config",t),e.util={warn:de,extend:I,mergeOptions:$e,defineReactive:Se},e.set=Ce,e.delete=Ie,e.nextTick=st,e.observable=function(e){return Oe(e),e},e.options=Object.create(null),$.forEach((function(t){e.options[t+"s"]=Object.create(null)})),e.options._base=e,I(e.options.components,Pn),function(e){e.use=function(e){var t=this._installedPlugins||(this._installedPlugins=[]);if(t.indexOf(e)>-1)return this;var n=C(arguments,1);return n.unshift(this),"function"==typeof e.install?e.install.apply(e,n):"function"==typeof e&&e.apply(null,n),t.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=$e(this.options,e),this}}(e),On(e),function(e){$.forEach((function(t){e[t]=function(e,n){return n?("component"===t&&d(n)&&(n.name=n.name||e,n=this.options._base.extend(n)),"directive"===t&&"function"==typeof n&&(n={bind:n,update:n}),this.options[t+"s"][e]=n,n):this.options[t+"s"][e]}}))}(e)}(xn),Object.defineProperty(xn.prototype,"$isServer",{get:ie}),Object.defineProperty(xn.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(xn,"FunctionalRenderContext",{value:Ft}),xn.version="2.6.14";var Vn=h("style,class"),Dn=h("input,textarea,option,select,progress"),Fn=function(e,t,n){return"value"===n&&Dn(e)&&"button"!==t||"selected"===n&&"option"===e||"checked"===n&&"input"===e||"muted"===n&&"video"===e},Bn=h("contenteditable,draggable,spellcheck"),$n=h("events,caret,typing,plaintext-only"),Nn=h("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),Ln="http://www.w3.org/1999/xlink",jn=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},Un=function(e){return jn(e)?e.slice(6,e.length):""},zn=function(e){return null==e||!1===e};function Wn(e){for(var t=e.data,n=e,a=e;i(a.componentInstance);)(a=a.componentInstance._vnode)&&a.data&&(t=qn(a.data,t));for(;i(n=n.parent);)n&&n.data&&(t=qn(t,n.data));return function(e,t){if(i(e)||i(t))return Hn(e,Gn(t));return""}(t.staticClass,t.class)}function qn(e,t){return{staticClass:Hn(e.staticClass,t.staticClass),class:i(e.class)?[e.class,t.class]:t.class}}function Hn(e,t){return e?t?e+" "+t:e:t||""}function Gn(e){return Array.isArray(e)?function(e){for(var t,n="",a=0,s=e.length;a<s;a++)i(t=Gn(e[a]))&&""!==t&&(n&&(n+=" "),n+=t);return n}(e):p(e)?function(e){var t="";for(var n in e)e[n]&&(t&&(t+=" "),t+=n);return t}(e):"string"==typeof e?e:""}var Qn={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},Yn=h("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),Xn=h("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),Kn=function(e){return Yn(e)||Xn(e)};function Jn(e){return Xn(e)?"svg":"math"===e?"math":void 0}var Zn=Object.create(null);var ea=h("text,number,password,search,email,tel,url");function ta(e){if("string"==typeof e){var t=document.querySelector(e);return t||document.createElement("div")}return e}var na=Object.freeze({createElement:function(e,t){var n=document.createElement(e);return"select"!==e||t.data&&t.data.attrs&&void 0!==t.data.attrs.multiple&&n.setAttribute("multiple","multiple"),n},createElementNS:function(e,t){return document.createElementNS(Qn[e],t)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,t,n){e.insertBefore(t,n)},removeChild:function(e,t){e.removeChild(t)},appendChild:function(e,t){e.appendChild(t)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,t){e.textContent=t},setStyleScope:function(e,t){e.setAttribute(t,"")}}),aa={create:function(e,t){sa(t)},update:function(e,t){e.data.ref!==t.data.ref&&(sa(e,!0),sa(t))},destroy:function(e){sa(e,!0)}};function sa(e,t){var n=e.data.ref;if(i(n)){var a=e.context,s=e.componentInstance||e.elm,r=a.$refs;t?Array.isArray(r[n])?T(r[n],s):r[n]===s&&(r[n]=void 0):e.data.refInFor?Array.isArray(r[n])?r[n].indexOf(s)<0&&r[n].push(s):r[n]=[s]:r[n]=s}}var ia=new he("",{},[]),ra=["create","activate","update","remove","destroy"];function oa(e,t){return e.key===t.key&&e.asyncFactory===t.asyncFactory&&(e.tag===t.tag&&e.isComment===t.isComment&&i(e.data)===i(t.data)&&function(e,t){if("input"!==e.tag)return!0;var n,a=i(n=e.data)&&i(n=n.attrs)&&n.type,s=i(n=t.data)&&i(n=n.attrs)&&n.type;return a===s||ea(a)&&ea(s)}(e,t)||r(e.isAsyncPlaceholder)&&s(t.asyncFactory.error))}function pa(e,t,n){var a,s,r={};for(a=t;a<=n;++a)i(s=e[a].key)&&(r[s]=a);return r}var ua={create:da,update:da,destroy:function(e){da(e,ia)}};function da(e,t){(e.data.directives||t.data.directives)&&function(e,t){var n,a,s,i=e===ia,r=t===ia,o=ya(e.data.directives,e.context),p=ya(t.data.directives,t.context),u=[],d=[];for(n in p)a=o[n],s=p[n],a?(s.oldValue=a.value,s.oldArg=a.arg,ma(s,"update",t,e),s.def&&s.def.componentUpdated&&d.push(s)):(ma(s,"bind",t,e),s.def&&s.def.inserted&&u.push(s));if(u.length){var l=function(){for(var n=0;n<u.length;n++)ma(u[n],"inserted",t,e)};i?dt(t,"insert",l):l()}d.length&&dt(t,"postpatch",(function(){for(var n=0;n<d.length;n++)ma(d[n],"componentUpdated",t,e)}));if(!i)for(n in o)p[n]||ma(o[n],"unbind",e,e,r)}(e,t)}var la=Object.create(null);function ya(e,t){var n,a,s=Object.create(null);if(!e)return s;for(n=0;n<e.length;n++)(a=e[n]).modifiers||(a.modifiers=la),s[ca(a)]=a,a.def=Ne(t.$options,"directives",a.name);return s}function ca(e){return e.rawName||e.name+"."+Object.keys(e.modifiers||{}).join(".")}function ma(e,t,n,a,s){var i=e.def&&e.def[t];if(i)try{i(n.elm,e,n,a,s)}catch(a){qe(a,n.context,"directive "+e.name+" "+t+" hook")}}var fa=[aa,ua];function ha(e,t){var n=t.componentOptions;if(!(i(n)&&!1===n.Ctor.options.inheritAttrs||s(e.data.attrs)&&s(t.data.attrs))){var a,r,o=t.elm,p=e.data.attrs||{},u=t.data.attrs||{};for(a in i(u.__ob__)&&(u=t.data.attrs=I({},u)),u)r=u[a],p[a]!==r&&ba(o,a,r,t.data.pre);for(a in(K||Z)&&u.value!==p.value&&ba(o,"value",u.value),p)s(u[a])&&(jn(a)?o.removeAttributeNS(Ln,Un(a)):Bn(a)||o.removeAttribute(a))}}function ba(e,t,n,a){a||e.tagName.indexOf("-")>-1?va(e,t,n):Nn(t)?zn(n)?e.removeAttribute(t):(n="allowfullscreen"===t&&"EMBED"===e.tagName?"true":t,e.setAttribute(t,n)):Bn(t)?e.setAttribute(t,function(e,t){return zn(t)||"false"===t?"false":"contenteditable"===e&&$n(t)?t:"true"}(t,n)):jn(t)?zn(n)?e.removeAttributeNS(Ln,Un(t)):e.setAttributeNS(Ln,t,n):va(e,t,n)}function va(e,t,n){if(zn(n))e.removeAttribute(t);else{if(K&&!J&&"TEXTAREA"===e.tagName&&"placeholder"===t&&""!==n&&!e.__ieph){var a=function(t){t.stopImmediatePropagation(),e.removeEventListener("input",a)};e.addEventListener("input",a),e.__ieph=!0}e.setAttribute(t,n)}}var Ta={create:ha,update:ha};function ga(e,t){var n=t.elm,a=t.data,r=e.data;if(!(s(a.staticClass)&&s(a.class)&&(s(r)||s(r.staticClass)&&s(r.class)))){var o=Wn(t),p=n._transitionClasses;i(p)&&(o=Hn(o,Gn(p))),o!==n._prevClass&&(n.setAttribute("class",o),n._prevClass=o)}}var wa,ka,_a,Ma,Aa,xa,Oa={create:ga,update:ga},Sa=/[\w).+\-_$\]]/;function Ca(e){var t,n,a,s,i,r=!1,o=!1,p=!1,u=!1,d=0,l=0,y=0,c=0;for(a=0;a<e.length;a++)if(n=t,t=e.charCodeAt(a),r)39===t&&92!==n&&(r=!1);else if(o)34===t&&92!==n&&(o=!1);else if(p)96===t&&92!==n&&(p=!1);else if(u)47===t&&92!==n&&(u=!1);else if(124!==t||124===e.charCodeAt(a+1)||124===e.charCodeAt(a-1)||d||l||y){switch(t){case 34:o=!0;break;case 39:r=!0;break;case 96:p=!0;break;case 40:y++;break;case 41:y--;break;case 91:l++;break;case 93:l--;break;case 123:d++;break;case 125:d--}if(47===t){for(var m=a-1,f=void 0;m>=0&&" "===(f=e.charAt(m));m--);f&&Sa.test(f)||(u=!0)}}else void 0===s?(c=a+1,s=e.slice(0,a).trim()):h();function h(){(i||(i=[])).push(e.slice(c,a).trim()),c=a+1}if(void 0===s?s=e.slice(0,a).trim():0!==c&&h(),i)for(a=0;a<i.length;a++)s=Ia(s,i[a]);return s}function Ia(e,t){var n=t.indexOf("(");if(n<0)return'_f("'+t+'")('+e+")";var a=t.slice(0,n),s=t.slice(n+1);return'_f("'+a+'")('+e+(")"!==s?","+s:s)}function Ra(e,t){console.error("[Vue compiler]: "+e)}function Ea(e,t){return e?e.map((function(e){return e[t]})).filter((function(e){return e})):[]}function Pa(e,t,n,a,s){(e.props||(e.props=[])).push(Ua({name:t,value:n,dynamic:s},a)),e.plain=!1}function Va(e,t,n,a,s){(s?e.dynamicAttrs||(e.dynamicAttrs=[]):e.attrs||(e.attrs=[])).push(Ua({name:t,value:n,dynamic:s},a)),e.plain=!1}function Da(e,t,n,a){e.attrsMap[t]=n,e.attrsList.push(Ua({name:t,value:n},a))}function Fa(e,t,n,a,s,i,r,o){(e.directives||(e.directives=[])).push(Ua({name:t,rawName:n,value:a,arg:s,isDynamicArg:i,modifiers:r},o)),e.plain=!1}function Ba(e,t,n){return n?"_p("+t+',"'+e+'")':e+t}function $a(e,t,n,s,i,r,o,p){var u;(s=s||a).right?p?t="("+t+")==='click'?'contextmenu':("+t+")":"click"===t&&(t="contextmenu",delete s.right):s.middle&&(p?t="("+t+")==='click'?'mouseup':("+t+")":"click"===t&&(t="mouseup")),s.capture&&(delete s.capture,t=Ba("!",t,p)),s.once&&(delete s.once,t=Ba("~",t,p)),s.passive&&(delete s.passive,t=Ba("&",t,p)),s.native?(delete s.native,u=e.nativeEvents||(e.nativeEvents={})):u=e.events||(e.events={});var d=Ua({value:n.trim(),dynamic:p},o);s!==a&&(d.modifiers=s);var l=u[t];Array.isArray(l)?i?l.unshift(d):l.push(d):u[t]=l?i?[d,l]:[l,d]:d,e.plain=!1}function Na(e,t,n){var a=La(e,":"+t)||La(e,"v-bind:"+t);if(null!=a)return Ca(a);if(!1!==n){var s=La(e,t);if(null!=s)return JSON.stringify(s)}}function La(e,t,n){var a;if(null!=(a=e.attrsMap[t]))for(var s=e.attrsList,i=0,r=s.length;i<r;i++)if(s[i].name===t){s.splice(i,1);break}return n&&delete e.attrsMap[t],a}function ja(e,t){for(var n=e.attrsList,a=0,s=n.length;a<s;a++){var i=n[a];if(t.test(i.name))return n.splice(a,1),i}}function Ua(e,t){return t&&(null!=t.start&&(e.start=t.start),null!=t.end&&(e.end=t.end)),e}function za(e,t,n){var a=n||{},s=a.number,i="$$v";a.trim&&(i="(typeof $$v === 'string'? $$v.trim(): $$v)"),s&&(i="_n("+i+")");var r=Wa(t,i);e.model={value:"("+t+")",expression:JSON.stringify(t),callback:"function ($$v) {"+r+"}"}}function Wa(e,t){var n=function(e){if(e=e.trim(),wa=e.length,e.indexOf("[")<0||e.lastIndexOf("]")<wa-1)return(Ma=e.lastIndexOf("."))>-1?{exp:e.slice(0,Ma),key:'"'+e.slice(Ma+1)+'"'}:{exp:e,key:null};ka=e,Ma=Aa=xa=0;for(;!Ha();)Ga(_a=qa())?Ya(_a):91===_a&&Qa(_a);return{exp:e.slice(0,Aa),key:e.slice(Aa+1,xa)}}(e);return null===n.key?e+"="+t:"$set("+n.exp+", "+n.key+", "+t+")"}function qa(){return ka.charCodeAt(++Ma)}function Ha(){return Ma>=wa}function Ga(e){return 34===e||39===e}function Qa(e){var t=1;for(Aa=Ma;!Ha();)if(Ga(e=qa()))Ya(e);else if(91===e&&t++,93===e&&t--,0===t){xa=Ma;break}}function Ya(e){for(var t=e;!Ha()&&(e=qa())!==t;);}var Xa;function Ka(e,t,n){var a=Xa;return function s(){var i=t.apply(null,arguments);null!==i&&es(e,s,n,a)}}var Ja=Xe&&!(te&&Number(te[1])<=53);function Za(e,t,n,a){if(Ja){var s=dn,i=t;t=i._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=s||e.timeStamp<=0||e.target.ownerDocument!==document)return i.apply(this,arguments)}}Xa.addEventListener(e,t,ae?{capture:n,passive:a}:n)}function es(e,t,n,a){(a||Xa).removeEventListener(e,t._wrapper||t,n)}function ts(e,t){if(!s(e.data.on)||!s(t.data.on)){var n=t.data.on||{},a=e.data.on||{};Xa=t.elm,function(e){if(i(e.__r)){var t=K?"change":"input";e[t]=[].concat(e.__r,e[t]||[]),delete e.__r}i(e.__c)&&(e.change=[].concat(e.__c,e.change||[]),delete e.__c)}(n),ut(n,a,Za,es,Ka,t.context),Xa=void 0}}var ns,as={create:ts,update:ts};function ss(e,t){if(!s(e.data.domProps)||!s(t.data.domProps)){var n,a,r=t.elm,o=e.data.domProps||{},p=t.data.domProps||{};for(n in i(p.__ob__)&&(p=t.data.domProps=I({},p)),o)n in p||(r[n]="");for(n in p){if(a=p[n],"textContent"===n||"innerHTML"===n){if(t.children&&(t.children.length=0),a===o[n])continue;1===r.childNodes.length&&r.removeChild(r.childNodes[0])}if("value"===n&&"PROGRESS"!==r.tagName){r._value=a;var u=s(a)?"":String(a);is(r,u)&&(r.value=u)}else if("innerHTML"===n&&Xn(r.tagName)&&s(r.innerHTML)){(ns=ns||document.createElement("div")).innerHTML="<svg>"+a+"</svg>";for(var d=ns.firstChild;r.firstChild;)r.removeChild(r.firstChild);for(;d.firstChild;)r.appendChild(d.firstChild)}else if(a!==o[n])try{r[n]=a}catch(e){}}}}function is(e,t){return!e.composing&&("OPTION"===e.tagName||function(e,t){var n=!0;try{n=document.activeElement!==e}catch(e){}return n&&e.value!==t}(e,t)||function(e,t){var n=e.value,a=e._vModifiers;if(i(a)){if(a.number)return f(n)!==f(t);if(a.trim)return n.trim()!==t.trim()}return n!==t}(e,t))}var rs={create:ss,update:ss},os=k((function(e){var t={},n=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){var a=e.split(n);a.length>1&&(t[a[0].trim()]=a[1].trim())}})),t}));function ps(e){var t=us(e.style);return e.staticStyle?I(e.staticStyle,t):t}function us(e){return Array.isArray(e)?R(e):"string"==typeof e?os(e):e}var ds,ls=/^--/,ys=/\s*!important$/,cs=function(e,t,n){if(ls.test(t))e.style.setProperty(t,n);else if(ys.test(n))e.style.setProperty(O(t),n.replace(ys,""),"important");else{var a=fs(t);if(Array.isArray(n))for(var s=0,i=n.length;s<i;s++)e.style[a]=n[s];else e.style[a]=n}},ms=["Webkit","Moz","ms"],fs=k((function(e){if(ds=ds||document.createElement("div").style,"filter"!==(e=M(e))&&e in ds)return e;for(var t=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<ms.length;n++){var a=ms[n]+t;if(a in ds)return a}}));function hs(e,t){var n=t.data,a=e.data;if(!(s(n.staticStyle)&&s(n.style)&&s(a.staticStyle)&&s(a.style))){var r,o,p=t.elm,u=a.staticStyle,d=a.normalizedStyle||a.style||{},l=u||d,y=us(t.data.style)||{};t.data.normalizedStyle=i(y.__ob__)?I({},y):y;var c=function(e,t){var n,a={};if(t)for(var s=e;s.componentInstance;)(s=s.componentInstance._vnode)&&s.data&&(n=ps(s.data))&&I(a,n);(n=ps(e.data))&&I(a,n);for(var i=e;i=i.parent;)i.data&&(n=ps(i.data))&&I(a,n);return a}(t,!0);for(o in l)s(c[o])&&cs(p,o,"");for(o in c)(r=c[o])!==l[o]&&cs(p,o,null==r?"":r)}}var bs={create:hs,update:hs},vs=/\s+/;function Ts(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(vs).forEach((function(t){return e.classList.add(t)})):e.classList.add(t);else{var n=" "+(e.getAttribute("class")||"")+" ";n.indexOf(" "+t+" ")<0&&e.setAttribute("class",(n+t).trim())}}function gs(e,t){if(t&&(t=t.trim()))if(e.classList)t.indexOf(" ")>-1?t.split(vs).forEach((function(t){return e.classList.remove(t)})):e.classList.remove(t),e.classList.length||e.removeAttribute("class");else{for(var n=" "+(e.getAttribute("class")||"")+" ",a=" "+t+" ";n.indexOf(a)>=0;)n=n.replace(a," ");(n=n.trim())?e.setAttribute("class",n):e.removeAttribute("class")}}function ws(e){if(e){if("object"==typeof e){var t={};return!1!==e.css&&I(t,ks(e.name||"v")),I(t,e),t}return"string"==typeof e?ks(e):void 0}}var ks=k((function(e){return{enterClass:e+"-enter",enterToClass:e+"-enter-to",enterActiveClass:e+"-enter-active",leaveClass:e+"-leave",leaveToClass:e+"-leave-to",leaveActiveClass:e+"-leave-active"}})),_s=G&&!J,Ms="transition",As="transitionend",xs="animation",Os="animationend";_s&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(Ms="WebkitTransition",As="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(xs="WebkitAnimation",Os="webkitAnimationEnd"));var Ss=G?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function Cs(e){Ss((function(){Ss(e)}))}function Is(e,t){var n=e._transitionClasses||(e._transitionClasses=[]);n.indexOf(t)<0&&(n.push(t),Ts(e,t))}function Rs(e,t){e._transitionClasses&&T(e._transitionClasses,t),gs(e,t)}function Es(e,t,n){var a=Vs(e,t),s=a.type,i=a.timeout,r=a.propCount;if(!s)return n();var o="transition"===s?As:Os,p=0,u=function(){e.removeEventListener(o,d),n()},d=function(t){t.target===e&&++p>=r&&u()};setTimeout((function(){p<r&&u()}),i+1),e.addEventListener(o,d)}var Ps=/\b(transform|all)(,|$)/;function Vs(e,t){var n,a=window.getComputedStyle(e),s=(a[Ms+"Delay"]||"").split(", "),i=(a[Ms+"Duration"]||"").split(", "),r=Ds(s,i),o=(a[xs+"Delay"]||"").split(", "),p=(a[xs+"Duration"]||"").split(", "),u=Ds(o,p),d=0,l=0;return"transition"===t?r>0&&(n="transition",d=r,l=i.length):"animation"===t?u>0&&(n="animation",d=u,l=p.length):l=(n=(d=Math.max(r,u))>0?r>u?"transition":"animation":null)?"transition"===n?i.length:p.length:0,{type:n,timeout:d,propCount:l,hasTransform:"transition"===n&&Ps.test(a[Ms+"Property"])}}function Ds(e,t){for(;e.length<t.length;)e=e.concat(e);return Math.max.apply(null,t.map((function(t,n){return Fs(t)+Fs(e[n])})))}function Fs(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function Bs(e,t){var n=e.elm;i(n._leaveCb)&&(n._leaveCb.cancelled=!0,n._leaveCb());var a=ws(e.data.transition);if(!s(a)&&!i(n._enterCb)&&1===n.nodeType){for(var r=a.css,o=a.type,u=a.enterClass,d=a.enterToClass,l=a.enterActiveClass,y=a.appearClass,c=a.appearToClass,m=a.appearActiveClass,h=a.beforeEnter,b=a.enter,v=a.afterEnter,T=a.enterCancelled,g=a.beforeAppear,w=a.appear,k=a.afterAppear,_=a.appearCancelled,M=a.duration,A=Jt,x=Jt.$vnode;x&&x.parent;)A=x.context,x=x.parent;var O=!A._isMounted||!e.isRootInsert;if(!O||w||""===w){var S=O&&y?y:u,C=O&&m?m:l,I=O&&c?c:d,R=O&&g||h,E=O&&"function"==typeof w?w:b,P=O&&k||v,V=O&&_||T,D=f(p(M)?M.enter:M);0;var F=!1!==r&&!J,$=Ls(E),N=n._enterCb=B((function(){F&&(Rs(n,I),Rs(n,C)),N.cancelled?(F&&Rs(n,S),V&&V(n)):P&&P(n),n._enterCb=null}));e.data.show||dt(e,"insert",(function(){var t=n.parentNode,a=t&&t._pending&&t._pending[e.key];a&&a.tag===e.tag&&a.elm._leaveCb&&a.elm._leaveCb(),E&&E(n,N)})),R&&R(n),F&&(Is(n,S),Is(n,C),Cs((function(){Rs(n,S),N.cancelled||(Is(n,I),$||(Ns(D)?setTimeout(N,D):Es(n,o,N)))}))),e.data.show&&(t&&t(),E&&E(n,N)),F||$||N()}}}function $s(e,t){var n=e.elm;i(n._enterCb)&&(n._enterCb.cancelled=!0,n._enterCb());var a=ws(e.data.transition);if(s(a)||1!==n.nodeType)return t();if(!i(n._leaveCb)){var r=a.css,o=a.type,u=a.leaveClass,d=a.leaveToClass,l=a.leaveActiveClass,y=a.beforeLeave,c=a.leave,m=a.afterLeave,h=a.leaveCancelled,b=a.delayLeave,v=a.duration,T=!1!==r&&!J,g=Ls(c),w=f(p(v)?v.leave:v);0;var k=n._leaveCb=B((function(){n.parentNode&&n.parentNode._pending&&(n.parentNode._pending[e.key]=null),T&&(Rs(n,d),Rs(n,l)),k.cancelled?(T&&Rs(n,u),h&&h(n)):(t(),m&&m(n)),n._leaveCb=null}));b?b(_):_()}function _(){k.cancelled||(!e.data.show&&n.parentNode&&((n.parentNode._pending||(n.parentNode._pending={}))[e.key]=e),y&&y(n),T&&(Is(n,u),Is(n,l),Cs((function(){Rs(n,u),k.cancelled||(Is(n,d),g||(Ns(w)?setTimeout(k,w):Es(n,o,k)))}))),c&&c(n,k),T||g||k())}}function Ns(e){return"number"==typeof e&&!isNaN(e)}function Ls(e){if(s(e))return!1;var t=e.fns;return i(t)?Ls(Array.isArray(t)?t[0]:t):(e._length||e.length)>1}function js(e,t){!0!==t.data.show&&Bs(t)}var Us=function(e){var t,n,a={},p=e.modules,u=e.nodeOps;for(t=0;t<ra.length;++t)for(a[ra[t]]=[],n=0;n<p.length;++n)i(p[n][ra[t]])&&a[ra[t]].push(p[n][ra[t]]);function d(e){var t=u.parentNode(e);i(t)&&u.removeChild(t,e)}function l(e,t,n,s,o,p,d){if(i(e.elm)&&i(p)&&(e=p[d]=ge(e)),e.isRootInsert=!o,!function(e,t,n,s){var o=e.data;if(i(o)){var p=i(e.componentInstance)&&o.keepAlive;if(i(o=o.hook)&&i(o=o.init)&&o(e,!1),i(e.componentInstance))return y(e,t),c(n,e.elm,s),r(p)&&function(e,t,n,s){var r,o=e;for(;o.componentInstance;)if(o=o.componentInstance._vnode,i(r=o.data)&&i(r=r.transition)){for(r=0;r<a.activate.length;++r)a.activate[r](ia,o);t.push(o);break}c(n,e.elm,s)}(e,t,n,s),!0}}(e,t,n,s)){var l=e.data,f=e.children,h=e.tag;i(h)?(e.elm=e.ns?u.createElementNS(e.ns,h):u.createElement(h,e),v(e),m(e,f,t),i(l)&&b(e,t),c(n,e.elm,s)):r(e.isComment)?(e.elm=u.createComment(e.text),c(n,e.elm,s)):(e.elm=u.createTextNode(e.text),c(n,e.elm,s))}}function y(e,t){i(e.data.pendingInsert)&&(t.push.apply(t,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,f(e)?(b(e,t),v(e)):(sa(e),t.push(e))}function c(e,t,n){i(e)&&(i(n)?u.parentNode(n)===e&&u.insertBefore(e,t,n):u.appendChild(e,t))}function m(e,t,n){if(Array.isArray(t)){0;for(var a=0;a<t.length;++a)l(t[a],n,e.elm,null,!0,t,a)}else o(e.text)&&u.appendChild(e.elm,u.createTextNode(String(e.text)))}function f(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return i(e.tag)}function b(e,n){for(var s=0;s<a.create.length;++s)a.create[s](ia,e);i(t=e.data.hook)&&(i(t.create)&&t.create(ia,e),i(t.insert)&&n.push(e))}function v(e){var t;if(i(t=e.fnScopeId))u.setStyleScope(e.elm,t);else for(var n=e;n;)i(t=n.context)&&i(t=t.$options._scopeId)&&u.setStyleScope(e.elm,t),n=n.parent;i(t=Jt)&&t!==e.context&&t!==e.fnContext&&i(t=t.$options._scopeId)&&u.setStyleScope(e.elm,t)}function T(e,t,n,a,s,i){for(;a<=s;++a)l(n[a],i,e,t,!1,n,a)}function g(e){var t,n,s=e.data;if(i(s))for(i(t=s.hook)&&i(t=t.destroy)&&t(e),t=0;t<a.destroy.length;++t)a.destroy[t](e);if(i(t=e.children))for(n=0;n<e.children.length;++n)g(e.children[n])}function w(e,t,n){for(;t<=n;++t){var a=e[t];i(a)&&(i(a.tag)?(k(a),g(a)):d(a.elm))}}function k(e,t){if(i(t)||i(e.data)){var n,s=a.remove.length+1;for(i(t)?t.listeners+=s:t=function(e,t){function n(){0==--n.listeners&&d(e)}return n.listeners=t,n}(e.elm,s),i(n=e.componentInstance)&&i(n=n._vnode)&&i(n.data)&&k(n,t),n=0;n<a.remove.length;++n)a.remove[n](e,t);i(n=e.data.hook)&&i(n=n.remove)?n(e,t):t()}else d(e.elm)}function _(e,t,n,a){for(var s=n;s<a;s++){var r=t[s];if(i(r)&&oa(e,r))return s}}function M(e,t,n,o,p,d){if(e!==t){i(t.elm)&&i(o)&&(t=o[p]=ge(t));var y=t.elm=e.elm;if(r(e.isAsyncPlaceholder))i(t.asyncFactory.resolved)?O(e.elm,t,n):t.isAsyncPlaceholder=!0;else if(r(t.isStatic)&&r(e.isStatic)&&t.key===e.key&&(r(t.isCloned)||r(t.isOnce)))t.componentInstance=e.componentInstance;else{var c,m=t.data;i(m)&&i(c=m.hook)&&i(c=c.prepatch)&&c(e,t);var h=e.children,b=t.children;if(i(m)&&f(t)){for(c=0;c<a.update.length;++c)a.update[c](e,t);i(c=m.hook)&&i(c=c.update)&&c(e,t)}s(t.text)?i(h)&&i(b)?h!==b&&function(e,t,n,a,r){var o,p,d,y=0,c=0,m=t.length-1,f=t[0],h=t[m],b=n.length-1,v=n[0],g=n[b],k=!r;for(0;y<=m&&c<=b;)s(f)?f=t[++y]:s(h)?h=t[--m]:oa(f,v)?(M(f,v,a,n,c),f=t[++y],v=n[++c]):oa(h,g)?(M(h,g,a,n,b),h=t[--m],g=n[--b]):oa(f,g)?(M(f,g,a,n,b),k&&u.insertBefore(e,f.elm,u.nextSibling(h.elm)),f=t[++y],g=n[--b]):oa(h,v)?(M(h,v,a,n,c),k&&u.insertBefore(e,h.elm,f.elm),h=t[--m],v=n[++c]):(s(o)&&(o=pa(t,y,m)),s(p=i(v.key)?o[v.key]:_(v,t,y,m))?l(v,a,e,f.elm,!1,n,c):oa(d=t[p],v)?(M(d,v,a,n,c),t[p]=void 0,k&&u.insertBefore(e,d.elm,f.elm)):l(v,a,e,f.elm,!1,n,c),v=n[++c]);y>m?T(e,s(n[b+1])?null:n[b+1].elm,n,c,b,a):c>b&&w(t,y,m)}(y,h,b,n,d):i(b)?(i(e.text)&&u.setTextContent(y,""),T(y,null,b,0,b.length-1,n)):i(h)?w(h,0,h.length-1):i(e.text)&&u.setTextContent(y,""):e.text!==t.text&&u.setTextContent(y,t.text),i(m)&&i(c=m.hook)&&i(c=c.postpatch)&&c(e,t)}}}function A(e,t,n){if(r(n)&&i(e.parent))e.parent.data.pendingInsert=t;else for(var a=0;a<t.length;++a)t[a].data.hook.insert(t[a])}var x=h("attrs,class,staticClass,staticStyle,key");function O(e,t,n,a){var s,o=t.tag,p=t.data,u=t.children;if(a=a||p&&p.pre,t.elm=e,r(t.isComment)&&i(t.asyncFactory))return t.isAsyncPlaceholder=!0,!0;if(i(p)&&(i(s=p.hook)&&i(s=s.init)&&s(t,!0),i(s=t.componentInstance)))return y(t,n),!0;if(i(o)){if(i(u))if(e.hasChildNodes())if(i(s=p)&&i(s=s.domProps)&&i(s=s.innerHTML)){if(s!==e.innerHTML)return!1}else{for(var d=!0,l=e.firstChild,c=0;c<u.length;c++){if(!l||!O(l,u[c],n,a)){d=!1;break}l=l.nextSibling}if(!d||l)return!1}else m(t,u,n);if(i(p)){var f=!1;for(var h in p)if(!x(h)){f=!0,b(t,n);break}!f&&p.class&&rt(p.class)}}else e.data!==t.text&&(e.data=t.text);return!0}return function(e,t,n,o){if(!s(t)){var p,d=!1,y=[];if(s(e))d=!0,l(t,y);else{var c=i(e.nodeType);if(!c&&oa(e,t))M(e,t,y,null,null,o);else{if(c){if(1===e.nodeType&&e.hasAttribute("data-server-rendered")&&(e.removeAttribute("data-server-rendered"),n=!0),r(n)&&O(e,t,y))return A(t,y,!0),e;p=e,e=new he(u.tagName(p).toLowerCase(),{},[],void 0,p)}var m=e.elm,h=u.parentNode(m);if(l(t,y,m._leaveCb?null:h,u.nextSibling(m)),i(t.parent))for(var b=t.parent,v=f(t);b;){for(var T=0;T<a.destroy.length;++T)a.destroy[T](b);if(b.elm=t.elm,v){for(var k=0;k<a.create.length;++k)a.create[k](ia,b);var _=b.data.hook.insert;if(_.merged)for(var x=1;x<_.fns.length;x++)_.fns[x]()}else sa(b);b=b.parent}i(h)?w([e],0,0):i(e.tag)&&g(e)}}return A(t,y,d),t.elm}i(e)&&g(e)}}({nodeOps:na,modules:[Ta,Oa,as,rs,bs,G?{create:js,activate:js,remove:function(e,t){!0!==e.data.show?$s(e,t):t()}}:{}].concat(fa)});J&&document.addEventListener("selectionchange",(function(){var e=document.activeElement;e&&e.vmodel&&Xs(e,"input")}));var zs={inserted:function(e,t,n,a){"select"===n.tag?(a.elm&&!a.elm._vOptions?dt(n,"postpatch",(function(){zs.componentUpdated(e,t,n)})):Ws(e,t,n.context),e._vOptions=[].map.call(e.options,Gs)):("textarea"===n.tag||ea(e.type))&&(e._vModifiers=t.modifiers,t.modifiers.lazy||(e.addEventListener("compositionstart",Qs),e.addEventListener("compositionend",Ys),e.addEventListener("change",Ys),J&&(e.vmodel=!0)))},componentUpdated:function(e,t,n){if("select"===n.tag){Ws(e,t,n.context);var a=e._vOptions,s=e._vOptions=[].map.call(e.options,Gs);if(s.some((function(e,t){return!D(e,a[t])})))(e.multiple?t.value.some((function(e){return Hs(e,s)})):t.value!==t.oldValue&&Hs(t.value,s))&&Xs(e,"change")}}};function Ws(e,t,n){qs(e,t,n),(K||Z)&&setTimeout((function(){qs(e,t,n)}),0)}function qs(e,t,n){var a=t.value,s=e.multiple;if(!s||Array.isArray(a)){for(var i,r,o=0,p=e.options.length;o<p;o++)if(r=e.options[o],s)i=F(a,Gs(r))>-1,r.selected!==i&&(r.selected=i);else if(D(Gs(r),a))return void(e.selectedIndex!==o&&(e.selectedIndex=o));s||(e.selectedIndex=-1)}}function Hs(e,t){return t.every((function(t){return!D(t,e)}))}function Gs(e){return"_value"in e?e._value:e.value}function Qs(e){e.target.composing=!0}function Ys(e){e.target.composing&&(e.target.composing=!1,Xs(e.target,"input"))}function Xs(e,t){var n=document.createEvent("HTMLEvents");n.initEvent(t,!0,!0),e.dispatchEvent(n)}function Ks(e){return!e.componentInstance||e.data&&e.data.transition?e:Ks(e.componentInstance._vnode)}var Js={model:zs,show:{bind:function(e,t,n){var a=t.value,s=(n=Ks(n)).data&&n.data.transition,i=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;a&&s?(n.data.show=!0,Bs(n,(function(){e.style.display=i}))):e.style.display=a?i:"none"},update:function(e,t,n){var a=t.value;!a!=!t.oldValue&&((n=Ks(n)).data&&n.data.transition?(n.data.show=!0,a?Bs(n,(function(){e.style.display=e.__vOriginalDisplay})):$s(n,(function(){e.style.display="none"}))):e.style.display=a?e.__vOriginalDisplay:"none")},unbind:function(e,t,n,a,s){s||(e.style.display=e.__vOriginalDisplay)}}},Zs={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function ei(e){var t=e&&e.componentOptions;return t&&t.Ctor.options.abstract?ei(Gt(t.children)):e}function ti(e){var t={},n=e.$options;for(var a in n.propsData)t[a]=e[a];var s=n._parentListeners;for(var i in s)t[M(i)]=s[i];return t}function ni(e,t){if(/\d-keep-alive$/.test(t.tag))return e("keep-alive",{props:t.componentOptions.propsData})}var ai=function(e){return e.tag||bt(e)},si=function(e){return"show"===e.name},ii={name:"transition",props:Zs,abstract:!0,render:function(e){var t=this,n=this.$slots.default;if(n&&(n=n.filter(ai)).length){0;var a=this.mode;0;var s=n[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return s;var i=ei(s);if(!i)return s;if(this._leaving)return ni(e,s);var r="__transition-"+this._uid+"-";i.key=null==i.key?i.isComment?r+"comment":r+i.tag:o(i.key)?0===String(i.key).indexOf(r)?i.key:r+i.key:i.key;var p=(i.data||(i.data={})).transition=ti(this),u=this._vnode,d=ei(u);if(i.data.directives&&i.data.directives.some(si)&&(i.data.show=!0),d&&d.data&&!function(e,t){return t.key===e.key&&t.tag===e.tag}(i,d)&&!bt(d)&&(!d.componentInstance||!d.componentInstance._vnode.isComment)){var l=d.data.transition=I({},p);if("out-in"===a)return this._leaving=!0,dt(l,"afterLeave",(function(){t._leaving=!1,t.$forceUpdate()})),ni(e,s);if("in-out"===a){if(bt(i))return u;var y,c=function(){y()};dt(p,"afterEnter",c),dt(p,"enterCancelled",c),dt(l,"delayLeave",(function(e){y=e}))}}return s}}},ri=I({tag:String,moveClass:String},Zs);function oi(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function pi(e){e.data.newPos=e.elm.getBoundingClientRect()}function ui(e){var t=e.data.pos,n=e.data.newPos,a=t.left-n.left,s=t.top-n.top;if(a||s){e.data.moved=!0;var i=e.elm.style;i.transform=i.WebkitTransform="translate("+a+"px,"+s+"px)",i.transitionDuration="0s"}}delete ri.mode;var di={Transition:ii,TransitionGroup:{props:ri,beforeMount:function(){var e=this,t=this._update;this._update=function(n,a){var s=Zt(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,s(),t.call(e,n,a)}},render:function(e){for(var t=this.tag||this.$vnode.data.tag||"span",n=Object.create(null),a=this.prevChildren=this.children,s=this.$slots.default||[],i=this.children=[],r=ti(this),o=0;o<s.length;o++){var p=s[o];if(p.tag)if(null!=p.key&&0!==String(p.key).indexOf("__vlist"))i.push(p),n[p.key]=p,(p.data||(p.data={})).transition=r;else;}if(a){for(var u=[],d=[],l=0;l<a.length;l++){var y=a[l];y.data.transition=r,y.data.pos=y.elm.getBoundingClientRect(),n[y.key]?u.push(y):d.push(y)}this.kept=e(t,null,u),this.removed=d}return e(t,null,i)},updated:function(){var e=this.prevChildren,t=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,t)&&(e.forEach(oi),e.forEach(pi),e.forEach(ui),this._reflow=document.body.offsetHeight,e.forEach((function(e){if(e.data.moved){var n=e.elm,a=n.style;Is(n,t),a.transform=a.WebkitTransform=a.transitionDuration="",n.addEventListener(As,n._moveCb=function e(a){a&&a.target!==n||a&&!/transform$/.test(a.propertyName)||(n.removeEventListener(As,e),n._moveCb=null,Rs(n,t))})}})))},methods:{hasMove:function(e,t){if(!_s)return!1;if(this._hasMove)return this._hasMove;var n=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach((function(e){gs(n,e)})),Ts(n,t),n.style.display="none",this.$el.appendChild(n);var a=Vs(n);return this.$el.removeChild(n),this._hasMove=a.hasTransform}}}};xn.config.mustUseProp=Fn,xn.config.isReservedTag=Kn,xn.config.isReservedAttr=Vn,xn.config.getTagNamespace=Jn,xn.config.isUnknownElement=function(e){if(!G)return!0;if(Kn(e))return!1;if(e=e.toLowerCase(),null!=Zn[e])return Zn[e];var t=document.createElement(e);return e.indexOf("-")>-1?Zn[e]=t.constructor===window.HTMLUnknownElement||t.constructor===window.HTMLElement:Zn[e]=/HTMLUnknownElement/.test(t.toString())},I(xn.options.directives,Js),I(xn.options.components,di),xn.prototype.__patch__=G?Us:E,xn.prototype.$mount=function(e,t){return function(e,t,n){var a;return e.$el=t,e.$options.render||(e.$options.render=ve),nn(e,"beforeMount"),a=function(){e._update(e._render(),n)},new fn(e,a,E,{before:function(){e._isMounted&&!e._isDestroyed&&nn(e,"beforeUpdate")}},!0),n=!1,null==e.$vnode&&(e._isMounted=!0,nn(e,"mounted")),e}(this,e=e&&G?ta(e):void 0,t)},G&&setTimeout((function(){L.devtools&&re&&re.emit("init",xn)}),0);var li=/\{\{((?:.|\r?\n)+?)\}\}/g,yi=/[-.*+?^${}()|[\]\/\\]/g,ci=k((function(e){var t=e[0].replace(yi,"\\$&"),n=e[1].replace(yi,"\\$&");return new RegExp(t+"((?:.|\\n)+?)"+n,"g")}));var mi={staticKeys:["staticClass"],transformNode:function(e,t){t.warn;var n=La(e,"class");n&&(e.staticClass=JSON.stringify(n));var a=Na(e,"class",!1);a&&(e.classBinding=a)},genData:function(e){var t="";return e.staticClass&&(t+="staticClass:"+e.staticClass+","),e.classBinding&&(t+="class:"+e.classBinding+","),t}};var fi,hi={staticKeys:["staticStyle"],transformNode:function(e,t){t.warn;var n=La(e,"style");n&&(e.staticStyle=JSON.stringify(os(n)));var a=Na(e,"style",!1);a&&(e.styleBinding=a)},genData:function(e){var t="";return e.staticStyle&&(t+="staticStyle:"+e.staticStyle+","),e.styleBinding&&(t+="style:("+e.styleBinding+"),"),t}},bi=function(e){return(fi=fi||document.createElement("div")).innerHTML=e,fi.textContent},vi=h("area,base,br,col,embed,frame,hr,img,input,isindex,keygen,link,meta,param,source,track,wbr"),Ti=h("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source"),gi=h("address,article,aside,base,blockquote,body,caption,col,colgroup,dd,details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,title,tr,track"),wi=/^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/,ki=/^\s*((?:v-[\w-]+:|@|:|#)\[[^=]+?\][^\s"'<>\/=]*)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/,_i="[a-zA-Z_][\\-\\.0-9_a-zA-Z"+j.source+"]*",Mi="((?:"+_i+"\\:)?"+_i+")",Ai=new RegExp("^<"+Mi),xi=/^\s*(\/?)>/,Oi=new RegExp("^<\\/"+Mi+"[^>]*>"),Si=/^<!DOCTYPE [^>]+>/i,Ci=/^<!\--/,Ii=/^<!\[/,Ri=h("script,style,textarea",!0),Ei={},Pi={"&lt;":"<","&gt;":">","&quot;":'"',"&amp;":"&","&#10;":"\n","&#9;":"\t","&#39;":"'"},Vi=/&(?:lt|gt|quot|amp|#39);/g,Di=/&(?:lt|gt|quot|amp|#39|#10|#9);/g,Fi=h("pre,textarea",!0),Bi=function(e,t){return e&&Fi(e)&&"\n"===t[0]};function $i(e,t){var n=t?Di:Vi;return e.replace(n,(function(e){return Pi[e]}))}var Ni,Li,ji,Ui,zi,Wi,qi,Hi,Gi=/^@|^v-on:/,Qi=/^v-|^@|^:|^#/,Yi=/([\s\S]*?)\s+(?:in|of)\s+([\s\S]*)/,Xi=/,([^,\}\]]*)(?:,([^,\}\]]*))?$/,Ki=/^\(|\)$/g,Ji=/^\[.*\]$/,Zi=/:(.*)$/,er=/^:|^\.|^v-bind:/,tr=/\.[^.\]]+(?=[^\]]*$)/g,nr=/^v-slot(:|$)|^#/,ar=/[\r\n]/,sr=/[ \f\t\r\n]+/g,ir=k(bi);function rr(e,t,n){return{type:1,tag:e,attrsList:t,attrsMap:cr(t),rawAttrsMap:{},parent:n,children:[]}}function or(e,t){Ni=t.warn||Ra,Wi=t.isPreTag||P,qi=t.mustUseProp||P,Hi=t.getTagNamespace||P;var n=t.isReservedTag||P;(function(e){return!(!(e.component||e.attrsMap[":is"]||e.attrsMap["v-bind:is"])&&(e.attrsMap.is?n(e.attrsMap.is):n(e.tag)))}),ji=Ea(t.modules,"transformNode"),Ui=Ea(t.modules,"preTransformNode"),zi=Ea(t.modules,"postTransformNode"),Li=t.delimiters;var a,s,i=[],r=!1!==t.preserveWhitespace,o=t.whitespace,p=!1,u=!1;function d(e){if(l(e),p||e.processed||(e=pr(e,t)),i.length||e===a||a.if&&(e.elseif||e.else)&&dr(a,{exp:e.elseif,block:e}),s&&!e.forbidden)if(e.elseif||e.else)r=e,(o=function(e){for(var t=e.length;t--;){if(1===e[t].type)return e[t];e.pop()}}(s.children))&&o.if&&dr(o,{exp:r.elseif,block:r});else{if(e.slotScope){var n=e.slotTarget||'"default"';(s.scopedSlots||(s.scopedSlots={}))[n]=e}s.children.push(e),e.parent=s}var r,o;e.children=e.children.filter((function(e){return!e.slotScope})),l(e),e.pre&&(p=!1),Wi(e.tag)&&(u=!1);for(var d=0;d<zi.length;d++)zi[d](e,t)}function l(e){if(!u)for(var t;(t=e.children[e.children.length-1])&&3===t.type&&" "===t.text;)e.children.pop()}return function(e,t){for(var n,a,s=[],i=t.expectHTML,r=t.isUnaryTag||P,o=t.canBeLeftOpenTag||P,p=0;e;){if(n=e,a&&Ri(a)){var u=0,d=a.toLowerCase(),l=Ei[d]||(Ei[d]=new RegExp("([\\s\\S]*?)(</"+d+"[^>]*>)","i")),y=e.replace(l,(function(e,n,a){return u=a.length,Ri(d)||"noscript"===d||(n=n.replace(/<!\--([\s\S]*?)-->/g,"$1").replace(/<!\[CDATA\[([\s\S]*?)]]>/g,"$1")),Bi(d,n)&&(n=n.slice(1)),t.chars&&t.chars(n),""}));p+=e.length-y.length,e=y,x(d,p-u,p)}else{var c=e.indexOf("<");if(0===c){if(Ci.test(e)){var m=e.indexOf("--\x3e");if(m>=0){t.shouldKeepComment&&t.comment(e.substring(4,m),p,p+m+3),_(m+3);continue}}if(Ii.test(e)){var f=e.indexOf("]>");if(f>=0){_(f+2);continue}}var h=e.match(Si);if(h){_(h[0].length);continue}var b=e.match(Oi);if(b){var v=p;_(b[0].length),x(b[1],v,p);continue}var T=M();if(T){A(T),Bi(T.tagName,e)&&_(1);continue}}var g=void 0,w=void 0,k=void 0;if(c>=0){for(w=e.slice(c);!(Oi.test(w)||Ai.test(w)||Ci.test(w)||Ii.test(w)||(k=w.indexOf("<",1))<0);)c+=k,w=e.slice(c);g=e.substring(0,c)}c<0&&(g=e),g&&_(g.length),t.chars&&g&&t.chars(g,p-g.length,p)}if(e===n){t.chars&&t.chars(e);break}}function _(t){p+=t,e=e.substring(t)}function M(){var t=e.match(Ai);if(t){var n,a,s={tagName:t[1],attrs:[],start:p};for(_(t[0].length);!(n=e.match(xi))&&(a=e.match(ki)||e.match(wi));)a.start=p,_(a[0].length),a.end=p,s.attrs.push(a);if(n)return s.unarySlash=n[1],_(n[0].length),s.end=p,s}}function A(e){var n=e.tagName,p=e.unarySlash;i&&("p"===a&&gi(n)&&x(a),o(n)&&a===n&&x(n));for(var u=r(n)||!!p,d=e.attrs.length,l=new Array(d),y=0;y<d;y++){var c=e.attrs[y],m=c[3]||c[4]||c[5]||"",f="a"===n&&"href"===c[1]?t.shouldDecodeNewlinesForHref:t.shouldDecodeNewlines;l[y]={name:c[1],value:$i(m,f)}}u||(s.push({tag:n,lowerCasedTag:n.toLowerCase(),attrs:l,start:e.start,end:e.end}),a=n),t.start&&t.start(n,l,u,e.start,e.end)}function x(e,n,i){var r,o;if(null==n&&(n=p),null==i&&(i=p),e)for(o=e.toLowerCase(),r=s.length-1;r>=0&&s[r].lowerCasedTag!==o;r--);else r=0;if(r>=0){for(var u=s.length-1;u>=r;u--)t.end&&t.end(s[u].tag,n,i);s.length=r,a=r&&s[r-1].tag}else"br"===o?t.start&&t.start(e,[],!0,n,i):"p"===o&&(t.start&&t.start(e,[],!1,n,i),t.end&&t.end(e,n,i))}x()}(e,{warn:Ni,expectHTML:t.expectHTML,isUnaryTag:t.isUnaryTag,canBeLeftOpenTag:t.canBeLeftOpenTag,shouldDecodeNewlines:t.shouldDecodeNewlines,shouldDecodeNewlinesForHref:t.shouldDecodeNewlinesForHref,shouldKeepComment:t.comments,outputSourceRange:t.outputSourceRange,start:function(e,n,r,o,l){var y=s&&s.ns||Hi(e);K&&"svg"===y&&(n=function(e){for(var t=[],n=0;n<e.length;n++){var a=e[n];mr.test(a.name)||(a.name=a.name.replace(fr,""),t.push(a))}return t}(n));var c,m=rr(e,n,s);y&&(m.ns=y),"style"!==(c=m).tag&&("script"!==c.tag||c.attrsMap.type&&"text/javascript"!==c.attrsMap.type)||ie()||(m.forbidden=!0);for(var f=0;f<Ui.length;f++)m=Ui[f](m,t)||m;p||(!function(e){null!=La(e,"v-pre")&&(e.pre=!0)}(m),m.pre&&(p=!0)),Wi(m.tag)&&(u=!0),p?function(e){var t=e.attrsList,n=t.length;if(n)for(var a=e.attrs=new Array(n),s=0;s<n;s++)a[s]={name:t[s].name,value:JSON.stringify(t[s].value)},null!=t[s].start&&(a[s].start=t[s].start,a[s].end=t[s].end);else e.pre||(e.plain=!0)}(m):m.processed||(ur(m),function(e){var t=La(e,"v-if");if(t)e.if=t,dr(e,{exp:t,block:e});else{null!=La(e,"v-else")&&(e.else=!0);var n=La(e,"v-else-if");n&&(e.elseif=n)}}(m),function(e){null!=La(e,"v-once")&&(e.once=!0)}(m)),a||(a=m),r?d(m):(s=m,i.push(m))},end:function(e,t,n){var a=i[i.length-1];i.length-=1,s=i[i.length-1],d(a)},chars:function(e,t,n){if(s&&(!K||"textarea"!==s.tag||s.attrsMap.placeholder!==e)){var a,i,d,l=s.children;if(e=u||e.trim()?"script"===(a=s).tag||"style"===a.tag?e:ir(e):l.length?o?"condense"===o&&ar.test(e)?"":" ":r?" ":"":"")u||"condense"!==o||(e=e.replace(sr," ")),!p&&" "!==e&&(i=function(e,t){var n=t?ci(t):li;if(n.test(e)){for(var a,s,i,r=[],o=[],p=n.lastIndex=0;a=n.exec(e);){(s=a.index)>p&&(o.push(i=e.slice(p,s)),r.push(JSON.stringify(i)));var u=Ca(a[1].trim());r.push("_s("+u+")"),o.push({"@binding":u}),p=s+a[0].length}return p<e.length&&(o.push(i=e.slice(p)),r.push(JSON.stringify(i))),{expression:r.join("+"),tokens:o}}}(e,Li))?d={type:2,expression:i.expression,tokens:i.tokens,text:e}:" "===e&&l.length&&" "===l[l.length-1].text||(d={type:3,text:e}),d&&l.push(d)}},comment:function(e,t,n){if(s){var a={type:3,text:e,isComment:!0};0,s.children.push(a)}}}),a}function pr(e,t){var n;!function(e){var t=Na(e,"key");if(t){e.key=t}}(e),e.plain=!e.key&&!e.scopedSlots&&!e.attrsList.length,function(e){var t=Na(e,"ref");t&&(e.ref=t,e.refInFor=function(e){var t=e;for(;t;){if(void 0!==t.for)return!0;t=t.parent}return!1}(e))}(e),function(e){var t;"template"===e.tag?(t=La(e,"scope"),e.slotScope=t||La(e,"slot-scope")):(t=La(e,"slot-scope"))&&(e.slotScope=t);var n=Na(e,"slot");n&&(e.slotTarget='""'===n?'"default"':n,e.slotTargetDynamic=!(!e.attrsMap[":slot"]&&!e.attrsMap["v-bind:slot"]),"template"===e.tag||e.slotScope||Va(e,"slot",n,function(e,t){return e.rawAttrsMap[":"+t]||e.rawAttrsMap["v-bind:"+t]||e.rawAttrsMap[t]}(e,"slot")));if("template"===e.tag){var a=ja(e,nr);if(a){0;var s=lr(a),i=s.name,r=s.dynamic;e.slotTarget=i,e.slotTargetDynamic=r,e.slotScope=a.value||"_empty_"}}else{var o=ja(e,nr);if(o){0;var p=e.scopedSlots||(e.scopedSlots={}),u=lr(o),d=u.name,l=u.dynamic,y=p[d]=rr("template",[],e);y.slotTarget=d,y.slotTargetDynamic=l,y.children=e.children.filter((function(e){if(!e.slotScope)return e.parent=y,!0})),y.slotScope=o.value||"_empty_",e.children=[],e.plain=!1}}}(e),"slot"===(n=e).tag&&(n.slotName=Na(n,"name")),function(e){var t;(t=Na(e,"is"))&&(e.component=t);null!=La(e,"inline-template")&&(e.inlineTemplate=!0)}(e);for(var a=0;a<ji.length;a++)e=ji[a](e,t)||e;return function(e){var t,n,a,s,i,r,o,p,u=e.attrsList;for(t=0,n=u.length;t<n;t++){if(a=s=u[t].name,i=u[t].value,Qi.test(a))if(e.hasBindings=!0,(r=yr(a.replace(Qi,"")))&&(a=a.replace(tr,"")),er.test(a))a=a.replace(er,""),i=Ca(i),(p=Ji.test(a))&&(a=a.slice(1,-1)),r&&(r.prop&&!p&&"innerHtml"===(a=M(a))&&(a="innerHTML"),r.camel&&!p&&(a=M(a)),r.sync&&(o=Wa(i,"$event"),p?$a(e,'"update:"+('+a+")",o,null,!1,0,u[t],!0):($a(e,"update:"+M(a),o,null,!1,0,u[t]),O(a)!==M(a)&&$a(e,"update:"+O(a),o,null,!1,0,u[t])))),r&&r.prop||!e.component&&qi(e.tag,e.attrsMap.type,a)?Pa(e,a,i,u[t],p):Va(e,a,i,u[t],p);else if(Gi.test(a))a=a.replace(Gi,""),(p=Ji.test(a))&&(a=a.slice(1,-1)),$a(e,a,i,r,!1,0,u[t],p);else{var d=(a=a.replace(Qi,"")).match(Zi),l=d&&d[1];p=!1,l&&(a=a.slice(0,-(l.length+1)),Ji.test(l)&&(l=l.slice(1,-1),p=!0)),Fa(e,a,s,i,l,p,r,u[t])}else Va(e,a,JSON.stringify(i),u[t]),!e.component&&"muted"===a&&qi(e.tag,e.attrsMap.type,a)&&Pa(e,a,"true",u[t])}}(e),e}function ur(e){var t;if(t=La(e,"v-for")){var n=function(e){var t=e.match(Yi);if(!t)return;var n={};n.for=t[2].trim();var a=t[1].trim().replace(Ki,""),s=a.match(Xi);s?(n.alias=a.replace(Xi,"").trim(),n.iterator1=s[1].trim(),s[2]&&(n.iterator2=s[2].trim())):n.alias=a;return n}(t);n&&I(e,n)}}function dr(e,t){e.ifConditions||(e.ifConditions=[]),e.ifConditions.push(t)}function lr(e){var t=e.name.replace(nr,"");return t||"#"!==e.name[0]&&(t="default"),Ji.test(t)?{name:t.slice(1,-1),dynamic:!0}:{name:'"'+t+'"',dynamic:!1}}function yr(e){var t=e.match(tr);if(t){var n={};return t.forEach((function(e){n[e.slice(1)]=!0})),n}}function cr(e){for(var t={},n=0,a=e.length;n<a;n++)t[e[n].name]=e[n].value;return t}var mr=/^xmlns:NS\d+/,fr=/^NS\d+:/;function hr(e){return rr(e.tag,e.attrsList.slice(),e.parent)}var br=[mi,hi,{preTransformNode:function(e,t){if("input"===e.tag){var n,a=e.attrsMap;if(!a["v-model"])return;if((a[":type"]||a["v-bind:type"])&&(n=Na(e,"type")),a.type||n||!a["v-bind"]||(n="("+a["v-bind"]+").type"),n){var s=La(e,"v-if",!0),i=s?"&&("+s+")":"",r=null!=La(e,"v-else",!0),o=La(e,"v-else-if",!0),p=hr(e);ur(p),Da(p,"type","checkbox"),pr(p,t),p.processed=!0,p.if="("+n+")==='checkbox'"+i,dr(p,{exp:p.if,block:p});var u=hr(e);La(u,"v-for",!0),Da(u,"type","radio"),pr(u,t),dr(p,{exp:"("+n+")==='radio'"+i,block:u});var d=hr(e);return La(d,"v-for",!0),Da(d,":type",n),pr(d,t),dr(p,{exp:s,block:d}),r?p.else=!0:o&&(p.elseif=o),p}}}}];var vr,Tr,gr={expectHTML:!0,modules:br,directives:{model:function(e,t,n){n;var a=t.value,s=t.modifiers,i=e.tag,r=e.attrsMap.type;if(e.component)return za(e,a,s),!1;if("select"===i)!function(e,t,n){var a='var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return '+(n&&n.number?"_n(val)":"val")+"});";a=a+" "+Wa(t,"$event.target.multiple ? $$selectedVal : $$selectedVal[0]"),$a(e,"change",a,null,!0)}(e,a,s);else if("input"===i&&"checkbox"===r)!function(e,t,n){var a=n&&n.number,s=Na(e,"value")||"null",i=Na(e,"true-value")||"true",r=Na(e,"false-value")||"false";Pa(e,"checked","Array.isArray("+t+")?_i("+t+","+s+")>-1"+("true"===i?":("+t+")":":_q("+t+","+i+")")),$a(e,"change","var $$a="+t+",$$el=$event.target,$$c=$$el.checked?("+i+"):("+r+");if(Array.isArray($$a)){var $$v="+(a?"_n("+s+")":s)+",$$i=_i($$a,$$v);if($$el.checked){$$i<0&&("+Wa(t,"$$a.concat([$$v])")+")}else{$$i>-1&&("+Wa(t,"$$a.slice(0,$$i).concat($$a.slice($$i+1))")+")}}else{"+Wa(t,"$$c")+"}",null,!0)}(e,a,s);else if("input"===i&&"radio"===r)!function(e,t,n){var a=n&&n.number,s=Na(e,"value")||"null";Pa(e,"checked","_q("+t+","+(s=a?"_n("+s+")":s)+")"),$a(e,"change",Wa(t,s),null,!0)}(e,a,s);else if("input"===i||"textarea"===i)!function(e,t,n){var a=e.attrsMap.type;0;var s=n||{},i=s.lazy,r=s.number,o=s.trim,p=!i&&"range"!==a,u=i?"change":"range"===a?"__r":"input",d="$event.target.value";o&&(d="$event.target.value.trim()");r&&(d="_n("+d+")");var l=Wa(t,d);p&&(l="if($event.target.composing)return;"+l);Pa(e,"value","("+t+")"),$a(e,u,l,null,!0),(o||r)&&$a(e,"blur","$forceUpdate()")}(e,a,s);else{if(!L.isReservedTag(i))return za(e,a,s),!1}return!0},text:function(e,t){t.value&&Pa(e,"textContent","_s("+t.value+")",t)},html:function(e,t){t.value&&Pa(e,"innerHTML","_s("+t.value+")",t)}},isPreTag:function(e){return"pre"===e},isUnaryTag:vi,mustUseProp:Fn,canBeLeftOpenTag:Ti,isReservedTag:Kn,getTagNamespace:Jn,staticKeys:function(e){return e.reduce((function(e,t){return e.concat(t.staticKeys||[])}),[]).join(",")}(br)},wr=k((function(e){return h("type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap"+(e?","+e:""))}));function kr(e,t){e&&(vr=wr(t.staticKeys||""),Tr=t.isReservedTag||P,function e(t){if(t.static=function(e){if(2===e.type)return!1;if(3===e.type)return!0;return!(!e.pre&&(e.hasBindings||e.if||e.for||b(e.tag)||!Tr(e.tag)||function(e){for(;e.parent;){if("template"!==(e=e.parent).tag)return!1;if(e.for)return!0}return!1}(e)||!Object.keys(e).every(vr)))}(t),1===t.type){if(!Tr(t.tag)&&"slot"!==t.tag&&null==t.attrsMap["inline-template"])return;for(var n=0,a=t.children.length;n<a;n++){var s=t.children[n];e(s),s.static||(t.static=!1)}if(t.ifConditions)for(var i=1,r=t.ifConditions.length;i<r;i++){var o=t.ifConditions[i].block;e(o),o.static||(t.static=!1)}}}(e),function e(t,n){if(1===t.type){if((t.static||t.once)&&(t.staticInFor=n),t.static&&t.children.length&&(1!==t.children.length||3!==t.children[0].type))return void(t.staticRoot=!0);if(t.staticRoot=!1,t.children)for(var a=0,s=t.children.length;a<s;a++)e(t.children[a],n||!!t.for);if(t.ifConditions)for(var i=1,r=t.ifConditions.length;i<r;i++)e(t.ifConditions[i].block,n)}}(e,!1))}var _r=/^([\w$_]+|\([^)]*?\))\s*=>|^function(?:\s+[\w$]+)?\s*\(/,Mr=/\([^)]*?\);*$/,Ar=/^[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['[^']*?']|\["[^"]*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*$/,xr={esc:27,tab:9,enter:13,space:32,up:38,left:37,right:39,down:40,delete:[8,46]},Or={esc:["Esc","Escape"],tab:"Tab",enter:"Enter",space:[" ","Spacebar"],up:["Up","ArrowUp"],left:["Left","ArrowLeft"],right:["Right","ArrowRight"],down:["Down","ArrowDown"],delete:["Backspace","Delete","Del"]},Sr=function(e){return"if("+e+")return null;"},Cr={stop:"$event.stopPropagation();",prevent:"$event.preventDefault();",self:Sr("$event.target !== $event.currentTarget"),ctrl:Sr("!$event.ctrlKey"),shift:Sr("!$event.shiftKey"),alt:Sr("!$event.altKey"),meta:Sr("!$event.metaKey"),left:Sr("'button' in $event && $event.button !== 0"),middle:Sr("'button' in $event && $event.button !== 1"),right:Sr("'button' in $event && $event.button !== 2")};function Ir(e,t){var n=t?"nativeOn:":"on:",a="",s="";for(var i in e){var r=Rr(e[i]);e[i]&&e[i].dynamic?s+=i+","+r+",":a+='"'+i+'":'+r+","}return a="{"+a.slice(0,-1)+"}",s?n+"_d("+a+",["+s.slice(0,-1)+"])":n+a}function Rr(e){if(!e)return"function(){}";if(Array.isArray(e))return"["+e.map((function(e){return Rr(e)})).join(",")+"]";var t=Ar.test(e.value),n=_r.test(e.value),a=Ar.test(e.value.replace(Mr,""));if(e.modifiers){var s="",i="",r=[];for(var o in e.modifiers)if(Cr[o])i+=Cr[o],xr[o]&&r.push(o);else if("exact"===o){var p=e.modifiers;i+=Sr(["ctrl","shift","alt","meta"].filter((function(e){return!p[e]})).map((function(e){return"$event."+e+"Key"})).join("||"))}else r.push(o);return r.length&&(s+=function(e){return"if(!$event.type.indexOf('key')&&"+e.map(Er).join("&&")+")return null;"}(r)),i&&(s+=i),"function($event){"+s+(t?"return "+e.value+".apply(null, arguments)":n?"return ("+e.value+").apply(null, arguments)":a?"return "+e.value:e.value)+"}"}return t||n?e.value:"function($event){"+(a?"return "+e.value:e.value)+"}"}function Er(e){var t=parseInt(e,10);if(t)return"$event.keyCode!=="+t;var n=xr[e],a=Or[e];return"_k($event.keyCode,"+JSON.stringify(e)+","+JSON.stringify(n)+",$event.key,"+JSON.stringify(a)+")"}var Pr={on:function(e,t){e.wrapListeners=function(e){return"_g("+e+","+t.value+")"}},bind:function(e,t){e.wrapData=function(n){return"_b("+n+",'"+e.tag+"',"+t.value+","+(t.modifiers&&t.modifiers.prop?"true":"false")+(t.modifiers&&t.modifiers.sync?",true":"")+")"}},cloak:E},Vr=function(e){this.options=e,this.warn=e.warn||Ra,this.transforms=Ea(e.modules,"transformCode"),this.dataGenFns=Ea(e.modules,"genData"),this.directives=I(I({},Pr),e.directives);var t=e.isReservedTag||P;this.maybeComponent=function(e){return!!e.component||!t(e.tag)},this.onceId=0,this.staticRenderFns=[],this.pre=!1};function Dr(e,t){var n=new Vr(t);return{render:"with(this){return "+(e?"script"===e.tag?"null":Fr(e,n):'_c("div")')+"}",staticRenderFns:n.staticRenderFns}}function Fr(e,t){if(e.parent&&(e.pre=e.pre||e.parent.pre),e.staticRoot&&!e.staticProcessed)return Br(e,t);if(e.once&&!e.onceProcessed)return $r(e,t);if(e.for&&!e.forProcessed)return Lr(e,t);if(e.if&&!e.ifProcessed)return Nr(e,t);if("template"!==e.tag||e.slotTarget||t.pre){if("slot"===e.tag)return function(e,t){var n=e.slotName||'"default"',a=Wr(e,t),s="_t("+n+(a?",function(){return "+a+"}":""),i=e.attrs||e.dynamicAttrs?Gr((e.attrs||[]).concat(e.dynamicAttrs||[]).map((function(e){return{name:M(e.name),value:e.value,dynamic:e.dynamic}}))):null,r=e.attrsMap["v-bind"];!i&&!r||a||(s+=",null");i&&(s+=","+i);r&&(s+=(i?"":",null")+","+r);return s+")"}(e,t);var n;if(e.component)n=function(e,t,n){var a=t.inlineTemplate?null:Wr(t,n,!0);return"_c("+e+","+jr(t,n)+(a?","+a:"")+")"}(e.component,e,t);else{var a;(!e.plain||e.pre&&t.maybeComponent(e))&&(a=jr(e,t));var s=e.inlineTemplate?null:Wr(e,t,!0);n="_c('"+e.tag+"'"+(a?","+a:"")+(s?","+s:"")+")"}for(var i=0;i<t.transforms.length;i++)n=t.transforms[i](e,n);return n}return Wr(e,t)||"void 0"}function Br(e,t){e.staticProcessed=!0;var n=t.pre;return e.pre&&(t.pre=e.pre),t.staticRenderFns.push("with(this){return "+Fr(e,t)+"}"),t.pre=n,"_m("+(t.staticRenderFns.length-1)+(e.staticInFor?",true":"")+")"}function $r(e,t){if(e.onceProcessed=!0,e.if&&!e.ifProcessed)return Nr(e,t);if(e.staticInFor){for(var n="",a=e.parent;a;){if(a.for){n=a.key;break}a=a.parent}return n?"_o("+Fr(e,t)+","+t.onceId+++","+n+")":Fr(e,t)}return Br(e,t)}function Nr(e,t,n,a){return e.ifProcessed=!0,function e(t,n,a,s){if(!t.length)return s||"_e()";var i=t.shift();return i.exp?"("+i.exp+")?"+r(i.block)+":"+e(t,n,a,s):""+r(i.block);function r(e){return a?a(e,n):e.once?$r(e,n):Fr(e,n)}}(e.ifConditions.slice(),t,n,a)}function Lr(e,t,n,a){var s=e.for,i=e.alias,r=e.iterator1?","+e.iterator1:"",o=e.iterator2?","+e.iterator2:"";return e.forProcessed=!0,(a||"_l")+"(("+s+"),function("+i+r+o+"){return "+(n||Fr)(e,t)+"})"}function jr(e,t){var n="{",a=function(e,t){var n=e.directives;if(!n)return;var a,s,i,r,o="directives:[",p=!1;for(a=0,s=n.length;a<s;a++){i=n[a],r=!0;var u=t.directives[i.name];u&&(r=!!u(e,i,t.warn)),r&&(p=!0,o+='{name:"'+i.name+'",rawName:"'+i.rawName+'"'+(i.value?",value:("+i.value+"),expression:"+JSON.stringify(i.value):"")+(i.arg?",arg:"+(i.isDynamicArg?i.arg:'"'+i.arg+'"'):"")+(i.modifiers?",modifiers:"+JSON.stringify(i.modifiers):"")+"},")}if(p)return o.slice(0,-1)+"]"}(e,t);a&&(n+=a+","),e.key&&(n+="key:"+e.key+","),e.ref&&(n+="ref:"+e.ref+","),e.refInFor&&(n+="refInFor:true,"),e.pre&&(n+="pre:true,"),e.component&&(n+='tag:"'+e.tag+'",');for(var s=0;s<t.dataGenFns.length;s++)n+=t.dataGenFns[s](e);if(e.attrs&&(n+="attrs:"+Gr(e.attrs)+","),e.props&&(n+="domProps:"+Gr(e.props)+","),e.events&&(n+=Ir(e.events,!1)+","),e.nativeEvents&&(n+=Ir(e.nativeEvents,!0)+","),e.slotTarget&&!e.slotScope&&(n+="slot:"+e.slotTarget+","),e.scopedSlots&&(n+=function(e,t,n){var a=e.for||Object.keys(t).some((function(e){var n=t[e];return n.slotTargetDynamic||n.if||n.for||Ur(n)})),s=!!e.if;if(!a)for(var i=e.parent;i;){if(i.slotScope&&"_empty_"!==i.slotScope||i.for){a=!0;break}i.if&&(s=!0),i=i.parent}var r=Object.keys(t).map((function(e){return zr(t[e],n)})).join(",");return"scopedSlots:_u(["+r+"]"+(a?",null,true":"")+(!a&&s?",null,false,"+function(e){var t=5381,n=e.length;for(;n;)t=33*t^e.charCodeAt(--n);return t>>>0}(r):"")+")"}(e,e.scopedSlots,t)+","),e.model&&(n+="model:{value:"+e.model.value+",callback:"+e.model.callback+",expression:"+e.model.expression+"},"),e.inlineTemplate){var i=function(e,t){var n=e.children[0];0;if(n&&1===n.type){var a=Dr(n,t.options);return"inlineTemplate:{render:function(){"+a.render+"},staticRenderFns:["+a.staticRenderFns.map((function(e){return"function(){"+e+"}"})).join(",")+"]}"}}(e,t);i&&(n+=i+",")}return n=n.replace(/,$/,"")+"}",e.dynamicAttrs&&(n="_b("+n+',"'+e.tag+'",'+Gr(e.dynamicAttrs)+")"),e.wrapData&&(n=e.wrapData(n)),e.wrapListeners&&(n=e.wrapListeners(n)),n}function Ur(e){return 1===e.type&&("slot"===e.tag||e.children.some(Ur))}function zr(e,t){var n=e.attrsMap["slot-scope"];if(e.if&&!e.ifProcessed&&!n)return Nr(e,t,zr,"null");if(e.for&&!e.forProcessed)return Lr(e,t,zr);var a="_empty_"===e.slotScope?"":String(e.slotScope),s="function("+a+"){return "+("template"===e.tag?e.if&&n?"("+e.if+")?"+(Wr(e,t)||"undefined")+":undefined":Wr(e,t)||"undefined":Fr(e,t))+"}",i=a?"":",proxy:true";return"{key:"+(e.slotTarget||'"default"')+",fn:"+s+i+"}"}function Wr(e,t,n,a,s){var i=e.children;if(i.length){var r=i[0];if(1===i.length&&r.for&&"template"!==r.tag&&"slot"!==r.tag){var o=n?t.maybeComponent(r)?",1":",0":"";return""+(a||Fr)(r,t)+o}var p=n?function(e,t){for(var n=0,a=0;a<e.length;a++){var s=e[a];if(1===s.type){if(qr(s)||s.ifConditions&&s.ifConditions.some((function(e){return qr(e.block)}))){n=2;break}(t(s)||s.ifConditions&&s.ifConditions.some((function(e){return t(e.block)})))&&(n=1)}}return n}(i,t.maybeComponent):0,u=s||Hr;return"["+i.map((function(e){return u(e,t)})).join(",")+"]"+(p?","+p:"")}}function qr(e){return void 0!==e.for||"template"===e.tag||"slot"===e.tag}function Hr(e,t){return 1===e.type?Fr(e,t):3===e.type&&e.isComment?function(e){return"_e("+JSON.stringify(e.text)+")"}(e):function(e){return"_v("+(2===e.type?e.expression:Qr(JSON.stringify(e.text)))+")"}(e)}function Gr(e){for(var t="",n="",a=0;a<e.length;a++){var s=e[a],i=Qr(s.value);s.dynamic?n+=s.name+","+i+",":t+='"'+s.name+'":'+i+","}return t="{"+t.slice(0,-1)+"}",n?"_d("+t+",["+n.slice(0,-1)+"])":t}function Qr(e){return e.replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029")}new RegExp("\\b"+"do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,super,throw,while,yield,delete,export,import,return,switch,default,extends,finally,continue,debugger,function,arguments".split(",").join("\\b|\\b")+"\\b"),new RegExp("\\b"+"delete,typeof,void".split(",").join("\\s*\\([^\\)]*\\)|\\b")+"\\s*\\([^\\)]*\\)");function Yr(e,t){try{return new Function(e)}catch(n){return t.push({err:n,code:e}),E}}function Xr(e){var t=Object.create(null);return function(n,a,s){(a=I({},a)).warn;delete a.warn;var i=a.delimiters?String(a.delimiters)+n:n;if(t[i])return t[i];var r=e(n,a);var o={},p=[];return o.render=Yr(r.render,p),o.staticRenderFns=r.staticRenderFns.map((function(e){return Yr(e,p)})),t[i]=o}}var Kr,Jr,Zr=(Kr=function(e,t){var n=or(e.trim(),t);!1!==t.optimize&&kr(n,t);var a=Dr(n,t);return{ast:n,render:a.render,staticRenderFns:a.staticRenderFns}},function(e){function t(t,n){var a=Object.create(e),s=[],i=[];if(n)for(var r in n.modules&&(a.modules=(e.modules||[]).concat(n.modules)),n.directives&&(a.directives=I(Object.create(e.directives||null),n.directives)),n)"modules"!==r&&"directives"!==r&&(a[r]=n[r]);a.warn=function(e,t,n){(n?i:s).push(e)};var o=Kr(t.trim(),a);return o.errors=s,o.tips=i,o}return{compile:t,compileToFunctions:Xr(t)}})(gr),eo=(Zr.compile,Zr.compileToFunctions);function to(e){return(Jr=Jr||document.createElement("div")).innerHTML=e?'<a href="\n"/>':'<div a="\n"/>',Jr.innerHTML.indexOf("&#10;")>0}var no=!!G&&to(!1),ao=!!G&&to(!0),so=k((function(e){var t=ta(e);return t&&t.innerHTML})),io=xn.prototype.$mount;xn.prototype.$mount=function(e,t){if((e=e&&ta(e))===document.body||e===document.documentElement)return this;var n=this.$options;if(!n.render){var a=n.template;if(a)if("string"==typeof a)"#"===a.charAt(0)&&(a=so(a));else{if(!a.nodeType)return this;a=a.innerHTML}else e&&(a=function(e){if(e.outerHTML)return e.outerHTML;var t=document.createElement("div");return t.appendChild(e.cloneNode(!0)),t.innerHTML}(e));if(a){0;var s=eo(a,{outputSourceRange:!1,shouldDecodeNewlines:no,shouldDecodeNewlinesForHref:ao,delimiters:n.delimiters,comments:n.comments},this),i=s.render,r=s.staticRenderFns;n.render=i,n.staticRenderFns=r}}return io.call(this,e,t)},xn.compile=eo,t.a=xn}).call(this,n(0),n(7).setImmediate)},function(e){e.exports=JSON.parse('{"a":"hardhat-docgen","b":"https://github.com/ItsNickBarry/hardhat-docgen"}')},function(e,t,n){var a=n(5);a.__esModule&&(a=a.default),"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n(11).default)("0b345cf4",a,!1,{})},function(e,t,n){"use strict";n(3)},function(e,t,n){(t=e.exports=n(6)(!1)).push([e.i,"@import url(https://fonts.googleapis.com/css2?family=Source+Code+Pro:wght@400;500;600;700&display=swap);",""]),t.push([e.i,"\nhtml,\nbody {\n  font-family: 'Source Code Pro', monospace;\n}\n",""])},function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=function(e,t){var n=e[1]||"",a=e[3];if(!a)return n;if(t&&"function"==typeof btoa){var s=(r=a,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+" */"),i=a.sources.map((function(e){return"/*# sourceURL="+a.sourceRoot+e+" */"}));return[n].concat(i).concat([s]).join("\n")}var r;return[n].join("\n")}(t,e);return t[2]?"@media "+t[2]+"{"+n+"}":n})).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var a={},s=0;s<this.length;s++){var i=this[s][0];null!=i&&(a[i]=!0)}for(s=0;s<e.length;s++){var r=e[s];null!=r[0]&&a[r[0]]||(n&&!r[2]?r[2]=n:n&&(r[2]="("+r[2]+") and ("+n+")"),t.push(r))}},t}},function(e,t,n){(function(e){var a=void 0!==e&&e||"undefined"!=typeof self&&self||window,s=Function.prototype.apply;function i(e,t){this._id=e,this._clearFn=t}t.setTimeout=function(){return new i(s.call(setTimeout,a,arguments),clearTimeout)},t.setInterval=function(){return new i(s.call(setInterval,a,arguments),clearInterval)},t.clearTimeout=t.clearInterval=function(e){e&&e.close()},i.prototype.unref=i.prototype.ref=function(){},i.prototype.close=function(){this._clearFn.call(a,this._id)},t.enroll=function(e,t){clearTimeout(e._idleTimeoutId),e._idleTimeout=t},t.unenroll=function(e){clearTimeout(e._idleTimeoutId),e._idleTimeout=-1},t._unrefActive=t.active=function(e){clearTimeout(e._idleTimeoutId);var t=e._idleTimeout;t>=0&&(e._idleTimeoutId=setTimeout((function(){e._onTimeout&&e._onTimeout()}),t))},n(8),t.setImmediate="undefined"!=typeof self&&self.setImmediate||void 0!==e&&e.setImmediate||this&&this.setImmediate,t.clearImmediate="undefined"!=typeof self&&self.clearImmediate||void 0!==e&&e.clearImmediate||this&&this.clearImmediate}).call(this,n(0))},function(e,t,n){(function(e,t){!function(e,n){"use strict";if(!e.setImmediate){var a,s,i,r,o,p=1,u={},d=!1,l=e.document,y=Object.getPrototypeOf&&Object.getPrototypeOf(e);y=y&&y.setTimeout?y:e,"[object process]"==={}.toString.call(e.process)?a=function(e){t.nextTick((function(){m(e)}))}:!function(){if(e.postMessage&&!e.importScripts){var t=!0,n=e.onmessage;return e.onmessage=function(){t=!1},e.postMessage("","*"),e.onmessage=n,t}}()?e.MessageChannel?((i=new MessageChannel).port1.onmessage=function(e){m(e.data)},a=function(e){i.port2.postMessage(e)}):l&&"onreadystatechange"in l.createElement("script")?(s=l.documentElement,a=function(e){var t=l.createElement("script");t.onreadystatechange=function(){m(e),t.onreadystatechange=null,s.removeChild(t),t=null},s.appendChild(t)}):a=function(e){setTimeout(m,0,e)}:(r="setImmediate$"+Math.random()+"$",o=function(t){t.source===e&&"string"==typeof t.data&&0===t.data.indexOf(r)&&m(+t.data.slice(r.length))},e.addEventListener?e.addEventListener("message",o,!1):e.attachEvent("onmessage",o),a=function(t){e.postMessage(r+t,"*")}),y.setImmediate=function(e){"function"!=typeof e&&(e=new Function(""+e));for(var t=new Array(arguments.length-1),n=0;n<t.length;n++)t[n]=arguments[n+1];var s={callback:e,args:t};return u[p]=s,a(p),p++},y.clearImmediate=c}function c(e){delete u[e]}function m(e){if(d)setTimeout(m,0,e);else{var t=u[e];if(t){d=!0;try{!function(e){var t=e.callback,n=e.args;switch(n.length){case 0:t();break;case 1:t(n[0]);break;case 2:t(n[0],n[1]);break;case 3:t(n[0],n[1],n[2]);break;default:t.apply(void 0,n)}}(t)}finally{c(e),d=!1}}}}}("undefined"==typeof self?void 0===e?this:e:self)}).call(this,n(0),n(9))},function(e,t){var n,a,s=e.exports={};function i(){throw new Error("setTimeout has not been defined")}function r(){throw new Error("clearTimeout has not been defined")}function o(e){if(n===setTimeout)return setTimeout(e,0);if((n===i||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:i}catch(e){n=i}try{a="function"==typeof clearTimeout?clearTimeout:r}catch(e){a=r}}();var p,u=[],d=!1,l=-1;function y(){d&&p&&(d=!1,p.length?u=p.concat(u):l=-1,u.length&&c())}function c(){if(!d){var e=o(y);d=!0;for(var t=u.length;t;){for(p=u,u=[];++l<t;)p&&p[l].run();l=-1,t=u.length}p=null,d=!1,function(e){if(a===clearTimeout)return clearTimeout(e);if((a===r||!a)&&clearTimeout)return a=clearTimeout,clearTimeout(e);try{a(e)}catch(t){try{return a.call(null,e)}catch(t){return a.call(this,e)}}}(e)}}function m(e,t){this.fun=e,this.array=t}function f(){}s.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];u.push(new m(e,t)),1!==u.length||d||o(c)},m.prototype.run=function(){this.fun.apply(null,this.array)},s.title="browser",s.browser=!0,s.env={},s.argv=[],s.version="",s.versions={},s.on=f,s.addListener=f,s.once=f,s.off=f,s.removeListener=f,s.removeAllListeners=f,s.emit=f,s.prependListener=f,s.prependOnceListener=f,s.listeners=function(e){return[]},s.binding=function(e){throw new Error("process.binding is not supported")},s.cwd=function(){return"/"},s.chdir=function(e){throw new Error("process.chdir is not supported")},s.umask=function(){return 0}},function(e,t,n){"use strict";n.r(t);var a=n(1);
/*!
  * vue-router v3.5.2
  * (c) 2021 Evan You
  * @license MIT
  */function s(e,t){for(var n in t)e[n]=t[n];return e}var i=/[!'()*]/g,r=function(e){return"%"+e.charCodeAt(0).toString(16)},o=/%2C/g,p=function(e){return encodeURIComponent(e).replace(i,r).replace(o,",")};function u(e){try{return decodeURIComponent(e)}catch(e){0}return e}var d=function(e){return null==e||"object"==typeof e?e:String(e)};function l(e){var t={};return(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var n=e.replace(/\+/g," ").split("="),a=u(n.shift()),s=n.length>0?u(n.join("=")):null;void 0===t[a]?t[a]=s:Array.isArray(t[a])?t[a].push(s):t[a]=[t[a],s]})),t):t}function y(e){var t=e?Object.keys(e).map((function(t){var n=e[t];if(void 0===n)return"";if(null===n)return p(t);if(Array.isArray(n)){var a=[];return n.forEach((function(e){void 0!==e&&(null===e?a.push(p(t)):a.push(p(t)+"="+p(e)))})),a.join("&")}return p(t)+"="+p(n)})).filter((function(e){return e.length>0})).join("&"):null;return t?"?"+t:""}var c=/\/?$/;function m(e,t,n,a){var s=a&&a.options.stringifyQuery,i=t.query||{};try{i=f(i)}catch(e){}var r={name:t.name||e&&e.name,meta:e&&e.meta||{},path:t.path||"/",hash:t.hash||"",query:i,params:t.params||{},fullPath:v(t,s),matched:e?b(e):[]};return n&&(r.redirectedFrom=v(n,s)),Object.freeze(r)}function f(e){if(Array.isArray(e))return e.map(f);if(e&&"object"==typeof e){var t={};for(var n in e)t[n]=f(e[n]);return t}return e}var h=m(null,{path:"/"});function b(e){for(var t=[];e;)t.unshift(e),e=e.parent;return t}function v(e,t){var n=e.path,a=e.query;void 0===a&&(a={});var s=e.hash;return void 0===s&&(s=""),(n||"/")+(t||y)(a)+s}function T(e,t,n){return t===h?e===t:!!t&&(e.path&&t.path?e.path.replace(c,"")===t.path.replace(c,"")&&(n||e.hash===t.hash&&g(e.query,t.query)):!(!e.name||!t.name)&&(e.name===t.name&&(n||e.hash===t.hash&&g(e.query,t.query)&&g(e.params,t.params))))}function g(e,t){if(void 0===e&&(e={}),void 0===t&&(t={}),!e||!t)return e===t;var n=Object.keys(e).sort(),a=Object.keys(t).sort();return n.length===a.length&&n.every((function(n,s){var i=e[n];if(a[s]!==n)return!1;var r=t[n];return null==i||null==r?i===r:"object"==typeof i&&"object"==typeof r?g(i,r):String(i)===String(r)}))}function w(e){for(var t=0;t<e.matched.length;t++){var n=e.matched[t];for(var a in n.instances){var s=n.instances[a],i=n.enteredCbs[a];if(s&&i){delete n.enteredCbs[a];for(var r=0;r<i.length;r++)s._isBeingDestroyed||i[r](s)}}}}var k={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(e,t){var n=t.props,a=t.children,i=t.parent,r=t.data;r.routerView=!0;for(var o=i.$createElement,p=n.name,u=i.$route,d=i._routerViewCache||(i._routerViewCache={}),l=0,y=!1;i&&i._routerRoot!==i;){var c=i.$vnode?i.$vnode.data:{};c.routerView&&l++,c.keepAlive&&i._directInactive&&i._inactive&&(y=!0),i=i.$parent}if(r.routerViewDepth=l,y){var m=d[p],f=m&&m.component;return f?(m.configProps&&_(f,r,m.route,m.configProps),o(f,r,a)):o()}var h=u.matched[l],b=h&&h.components[p];if(!h||!b)return d[p]=null,o();d[p]={component:b},r.registerRouteInstance=function(e,t){var n=h.instances[p];(t&&n!==e||!t&&n===e)&&(h.instances[p]=t)},(r.hook||(r.hook={})).prepatch=function(e,t){h.instances[p]=t.componentInstance},r.hook.init=function(e){e.data.keepAlive&&e.componentInstance&&e.componentInstance!==h.instances[p]&&(h.instances[p]=e.componentInstance),w(u)};var v=h.props&&h.props[p];return v&&(s(d[p],{route:u,configProps:v}),_(b,r,u,v)),o(b,r,a)}};function _(e,t,n,a){var i=t.props=function(e,t){switch(typeof t){case"undefined":return;case"object":return t;case"function":return t(e);case"boolean":return t?e.params:void 0;default:0}}(n,a);if(i){i=t.props=s({},i);var r=t.attrs=t.attrs||{};for(var o in i)e.props&&o in e.props||(r[o]=i[o],delete i[o])}}function M(e,t,n){var a=e.charAt(0);if("/"===a)return e;if("?"===a||"#"===a)return t+e;var s=t.split("/");n&&s[s.length-1]||s.pop();for(var i=e.replace(/^\//,"").split("/"),r=0;r<i.length;r++){var o=i[r];".."===o?s.pop():"."!==o&&s.push(o)}return""!==s[0]&&s.unshift(""),s.join("/")}function A(e){return e.replace(/\/\//g,"/")}var x=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)},O=j,S=P,C=function(e,t){return D(P(e,t),t)},I=D,R=L,E=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function P(e,t){for(var n,a=[],s=0,i=0,r="",o=t&&t.delimiter||"/";null!=(n=E.exec(e));){var p=n[0],u=n[1],d=n.index;if(r+=e.slice(i,d),i=d+p.length,u)r+=u[1];else{var l=e[i],y=n[2],c=n[3],m=n[4],f=n[5],h=n[6],b=n[7];r&&(a.push(r),r="");var v=null!=y&&null!=l&&l!==y,T="+"===h||"*"===h,g="?"===h||"*"===h,w=n[2]||o,k=m||f;a.push({name:c||s++,prefix:y||"",delimiter:w,optional:g,repeat:T,partial:v,asterisk:!!b,pattern:k?B(k):b?".*":"[^"+F(w)+"]+?"})}}return i<e.length&&(r+=e.substr(i)),r&&a.push(r),a}function V(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function D(e,t){for(var n=new Array(e.length),a=0;a<e.length;a++)"object"==typeof e[a]&&(n[a]=new RegExp("^(?:"+e[a].pattern+")$",N(t)));return function(t,a){for(var s="",i=t||{},r=(a||{}).pretty?V:encodeURIComponent,o=0;o<e.length;o++){var p=e[o];if("string"!=typeof p){var u,d=i[p.name];if(null==d){if(p.optional){p.partial&&(s+=p.prefix);continue}throw new TypeError('Expected "'+p.name+'" to be defined')}if(x(d)){if(!p.repeat)throw new TypeError('Expected "'+p.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(p.optional)continue;throw new TypeError('Expected "'+p.name+'" to not be empty')}for(var l=0;l<d.length;l++){if(u=r(d[l]),!n[o].test(u))throw new TypeError('Expected all "'+p.name+'" to match "'+p.pattern+'", but received `'+JSON.stringify(u)+"`");s+=(0===l?p.prefix:p.delimiter)+u}}else{if(u=p.asterisk?encodeURI(d).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):r(d),!n[o].test(u))throw new TypeError('Expected "'+p.name+'" to match "'+p.pattern+'", but received "'+u+'"');s+=p.prefix+u}}else s+=p}return s}}function F(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function B(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function $(e,t){return e.keys=t,e}function N(e){return e&&e.sensitive?"":"i"}function L(e,t,n){x(t)||(n=t||n,t=[]);for(var a=(n=n||{}).strict,s=!1!==n.end,i="",r=0;r<e.length;r++){var o=e[r];if("string"==typeof o)i+=F(o);else{var p=F(o.prefix),u="(?:"+o.pattern+")";t.push(o),o.repeat&&(u+="(?:"+p+u+")*"),i+=u=o.optional?o.partial?p+"("+u+")?":"(?:"+p+"("+u+"))?":p+"("+u+")"}}var d=F(n.delimiter||"/"),l=i.slice(-d.length)===d;return a||(i=(l?i.slice(0,-d.length):i)+"(?:"+d+"(?=$))?"),i+=s?"$":a&&l?"":"(?="+d+"|$)",$(new RegExp("^"+i,N(n)),t)}function j(e,t,n){return x(t)||(n=t||n,t=[]),n=n||{},e instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var a=0;a<n.length;a++)t.push({name:a,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return $(e,t)}(e,t):x(e)?function(e,t,n){for(var a=[],s=0;s<e.length;s++)a.push(j(e[s],t,n).source);return $(new RegExp("(?:"+a.join("|")+")",N(n)),t)}(e,t,n):function(e,t,n){return L(P(e,n),t,n)}(e,t,n)}O.parse=S,O.compile=C,O.tokensToFunction=I,O.tokensToRegExp=R;var U=Object.create(null);function z(e,t,n){t=t||{};try{var a=U[e]||(U[e]=O.compile(e));return"string"==typeof t.pathMatch&&(t[0]=t.pathMatch),a(t,{pretty:!0})}catch(e){return""}finally{delete t[0]}}function W(e,t,n,a){var i="string"==typeof e?{path:e}:e;if(i._normalized)return i;if(i.name){var r=(i=s({},e)).params;return r&&"object"==typeof r&&(i.params=s({},r)),i}if(!i.path&&i.params&&t){(i=s({},i))._normalized=!0;var o=s(s({},t.params),i.params);if(t.name)i.name=t.name,i.params=o;else if(t.matched.length){var p=t.matched[t.matched.length-1].path;i.path=z(p,o,t.path)}else 0;return i}var u=function(e){var t="",n="",a=e.indexOf("#");a>=0&&(t=e.slice(a),e=e.slice(0,a));var s=e.indexOf("?");return s>=0&&(n=e.slice(s+1),e=e.slice(0,s)),{path:e,query:n,hash:t}}(i.path||""),y=t&&t.path||"/",c=u.path?M(u.path,y,n||i.append):y,m=function(e,t,n){void 0===t&&(t={});var a,s=n||l;try{a=s(e||"")}catch(e){a={}}for(var i in t){var r=t[i];a[i]=Array.isArray(r)?r.map(d):d(r)}return a}(u.query,i.query,a&&a.options.parseQuery),f=i.hash||u.hash;return f&&"#"!==f.charAt(0)&&(f="#"+f),{_normalized:!0,path:c,query:m,hash:f}}var q,H=function(){},G={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(e){var t=this,n=this.$router,a=this.$route,i=n.resolve(this.to,a,this.append),r=i.location,o=i.route,p=i.href,u={},d=n.options.linkActiveClass,l=n.options.linkExactActiveClass,y=null==d?"router-link-active":d,f=null==l?"router-link-exact-active":l,h=null==this.activeClass?y:this.activeClass,b=null==this.exactActiveClass?f:this.exactActiveClass,v=o.redirectedFrom?m(null,W(o.redirectedFrom),null,n):o;u[b]=T(a,v,this.exactPath),u[h]=this.exact||this.exactPath?u[b]:function(e,t){return 0===e.path.replace(c,"/").indexOf(t.path.replace(c,"/"))&&(!t.hash||e.hash===t.hash)&&function(e,t){for(var n in t)if(!(n in e))return!1;return!0}(e.query,t.query)}(a,v);var g=u[b]?this.ariaCurrentValue:null,w=function(e){Q(e)&&(t.replace?n.replace(r,H):n.push(r,H))},k={click:Q};Array.isArray(this.event)?this.event.forEach((function(e){k[e]=w})):k[this.event]=w;var _={class:u},M=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:p,route:o,navigate:w,isActive:u[h],isExactActive:u[b]});if(M){if(1===M.length)return M[0];if(M.length>1||!M.length)return 0===M.length?e():e("span",{},M)}if("a"===this.tag)_.on=k,_.attrs={href:p,"aria-current":g};else{var A=function e(t){var n;if(t)for(var a=0;a<t.length;a++){if("a"===(n=t[a]).tag)return n;if(n.children&&(n=e(n.children)))return n}}(this.$slots.default);if(A){A.isStatic=!1;var x=A.data=s({},A.data);for(var O in x.on=x.on||{},x.on){var S=x.on[O];O in k&&(x.on[O]=Array.isArray(S)?S:[S])}for(var C in k)C in x.on?x.on[C].push(k[C]):x.on[C]=w;var I=A.data.attrs=s({},A.data.attrs);I.href=p,I["aria-current"]=g}else _.on=k}return e(this.tag,_,this.$slots.default)}};function Q(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||e.defaultPrevented||void 0!==e.button&&0!==e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){var t=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return e.preventDefault&&e.preventDefault(),!0}}var Y="undefined"!=typeof window;function X(e,t,n,a,s){var i=t||[],r=n||Object.create(null),o=a||Object.create(null);e.forEach((function(e){!function e(t,n,a,s,i,r){var o=s.path,p=s.name;0;var u=s.pathToRegexpOptions||{},d=function(e,t,n){n||(e=e.replace(/\/$/,""));if("/"===e[0])return e;if(null==t)return e;return A(t.path+"/"+e)}(o,i,u.strict);"boolean"==typeof s.caseSensitive&&(u.sensitive=s.caseSensitive);var l={path:d,regex:K(d,u),components:s.components||{default:s.component},alias:s.alias?"string"==typeof s.alias?[s.alias]:s.alias:[],instances:{},enteredCbs:{},name:p,parent:i,matchAs:r,redirect:s.redirect,beforeEnter:s.beforeEnter,meta:s.meta||{},props:null==s.props?{}:s.components?s.props:{default:s.props}};s.children&&s.children.forEach((function(s){var i=r?A(r+"/"+s.path):void 0;e(t,n,a,s,l,i)}));n[l.path]||(t.push(l.path),n[l.path]=l);if(void 0!==s.alias)for(var y=Array.isArray(s.alias)?s.alias:[s.alias],c=0;c<y.length;++c){0;var m={path:y[c],children:s.children};e(t,n,a,m,i,l.path||"/")}p&&(a[p]||(a[p]=l))}(i,r,o,e,s)}));for(var p=0,u=i.length;p<u;p++)"*"===i[p]&&(i.push(i.splice(p,1)[0]),u--,p--);return{pathList:i,pathMap:r,nameMap:o}}function K(e,t){return O(e,[],t)}function J(e,t){var n=X(e),a=n.pathList,s=n.pathMap,i=n.nameMap;function r(e,n,r){var o=W(e,n,!1,t),u=o.name;if(u){var d=i[u];if(!d)return p(null,o);var l=d.regex.keys.filter((function(e){return!e.optional})).map((function(e){return e.name}));if("object"!=typeof o.params&&(o.params={}),n&&"object"==typeof n.params)for(var y in n.params)!(y in o.params)&&l.indexOf(y)>-1&&(o.params[y]=n.params[y]);return o.path=z(d.path,o.params),p(d,o,r)}if(o.path){o.params={};for(var c=0;c<a.length;c++){var m=a[c],f=s[m];if(Z(f.regex,o.path,o.params))return p(f,o,r)}}return p(null,o)}function o(e,n){var a=e.redirect,s="function"==typeof a?a(m(e,n,null,t)):a;if("string"==typeof s&&(s={path:s}),!s||"object"!=typeof s)return p(null,n);var o=s,u=o.name,d=o.path,l=n.query,y=n.hash,c=n.params;if(l=o.hasOwnProperty("query")?o.query:l,y=o.hasOwnProperty("hash")?o.hash:y,c=o.hasOwnProperty("params")?o.params:c,u){i[u];return r({_normalized:!0,name:u,query:l,hash:y,params:c},void 0,n)}if(d){var f=function(e,t){return M(e,t.parent?t.parent.path:"/",!0)}(d,e);return r({_normalized:!0,path:z(f,c),query:l,hash:y},void 0,n)}return p(null,n)}function p(e,n,a){return e&&e.redirect?o(e,a||n):e&&e.matchAs?function(e,t,n){var a=r({_normalized:!0,path:z(n,t.params)});if(a){var s=a.matched,i=s[s.length-1];return t.params=a.params,p(i,t)}return p(null,t)}(0,n,e.matchAs):m(e,n,a,t)}return{match:r,addRoute:function(e,t){var n="object"!=typeof e?i[e]:void 0;X([t||e],a,s,i,n),n&&n.alias.length&&X(n.alias.map((function(e){return{path:e,children:[t]}})),a,s,i,n)},getRoutes:function(){return a.map((function(e){return s[e]}))},addRoutes:function(e){X(e,a,s,i)}}}function Z(e,t,n){var a=t.match(e);if(!a)return!1;if(!n)return!0;for(var s=1,i=a.length;s<i;++s){var r=e.keys[s-1];r&&(n[r.name||"pathMatch"]="string"==typeof a[s]?u(a[s]):a[s])}return!0}var ee=Y&&window.performance&&window.performance.now?window.performance:Date;function te(){return ee.now().toFixed(3)}var ne=te();function ae(){return ne}function se(e){return ne=e}var ie=Object.create(null);function re(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var e=window.location.protocol+"//"+window.location.host,t=window.location.href.replace(e,""),n=s({},window.history.state);return n.key=ae(),window.history.replaceState(n,"",t),window.addEventListener("popstate",ue),function(){window.removeEventListener("popstate",ue)}}function oe(e,t,n,a){if(e.app){var s=e.options.scrollBehavior;s&&e.app.$nextTick((function(){var i=function(){var e=ae();if(e)return ie[e]}(),r=s.call(e,t,n,a?i:null);r&&("function"==typeof r.then?r.then((function(e){me(e,i)})).catch((function(e){0})):me(r,i))}))}}function pe(){var e=ae();e&&(ie[e]={x:window.pageXOffset,y:window.pageYOffset})}function ue(e){pe(),e.state&&e.state.key&&se(e.state.key)}function de(e){return ye(e.x)||ye(e.y)}function le(e){return{x:ye(e.x)?e.x:window.pageXOffset,y:ye(e.y)?e.y:window.pageYOffset}}function ye(e){return"number"==typeof e}var ce=/^#\d/;function me(e,t){var n,a="object"==typeof e;if(a&&"string"==typeof e.selector){var s=ce.test(e.selector)?document.getElementById(e.selector.slice(1)):document.querySelector(e.selector);if(s){var i=e.offset&&"object"==typeof e.offset?e.offset:{};t=function(e,t){var n=document.documentElement.getBoundingClientRect(),a=e.getBoundingClientRect();return{x:a.left-n.left-t.x,y:a.top-n.top-t.y}}(s,i={x:ye((n=i).x)?n.x:0,y:ye(n.y)?n.y:0})}else de(e)&&(t=le(e))}else a&&de(e)&&(t=le(e));t&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:t.x,top:t.y,behavior:e.behavior}):window.scrollTo(t.x,t.y))}var fe,he=Y&&((-1===(fe=window.navigator.userAgent).indexOf("Android 2.")&&-1===fe.indexOf("Android 4.0")||-1===fe.indexOf("Mobile Safari")||-1!==fe.indexOf("Chrome")||-1!==fe.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function be(e,t){pe();var n=window.history;try{if(t){var a=s({},n.state);a.key=ae(),n.replaceState(a,"",e)}else n.pushState({key:se(te())},"",e)}catch(n){window.location[t?"replace":"assign"](e)}}function ve(e){be(e,!0)}function Te(e,t,n){var a=function(s){s>=e.length?n():e[s]?t(e[s],(function(){a(s+1)})):a(s+1)};a(0)}var ge={redirected:2,aborted:4,cancelled:8,duplicated:16};function we(e,t){return _e(e,t,ge.redirected,'Redirected when going from "'+e.fullPath+'" to "'+function(e){if("string"==typeof e)return e;if("path"in e)return e.path;var t={};return Me.forEach((function(n){n in e&&(t[n]=e[n])})),JSON.stringify(t,null,2)}(t)+'" via a navigation guard.')}function ke(e,t){return _e(e,t,ge.cancelled,'Navigation cancelled from "'+e.fullPath+'" to "'+t.fullPath+'" with a new navigation.')}function _e(e,t,n,a){var s=new Error(a);return s._isRouter=!0,s.from=e,s.to=t,s.type=n,s}var Me=["params","query","hash"];function Ae(e){return Object.prototype.toString.call(e).indexOf("Error")>-1}function xe(e,t){return Ae(e)&&e._isRouter&&(null==t||e.type===t)}function Oe(e){return function(t,n,a){var s=!1,i=0,r=null;Se(e,(function(e,t,n,o){if("function"==typeof e&&void 0===e.cid){s=!0,i++;var p,u=Re((function(t){var s;((s=t).__esModule||Ie&&"Module"===s[Symbol.toStringTag])&&(t=t.default),e.resolved="function"==typeof t?t:q.extend(t),n.components[o]=t,--i<=0&&a()})),d=Re((function(e){var t="Failed to resolve async component "+o+": "+e;r||(r=Ae(e)?e:new Error(t),a(r))}));try{p=e(u,d)}catch(e){d(e)}if(p)if("function"==typeof p.then)p.then(u,d);else{var l=p.component;l&&"function"==typeof l.then&&l.then(u,d)}}})),s||a()}}function Se(e,t){return Ce(e.map((function(e){return Object.keys(e.components).map((function(n){return t(e.components[n],e.instances[n],e,n)}))})))}function Ce(e){return Array.prototype.concat.apply([],e)}var Ie="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function Re(e){var t=!1;return function(){for(var n=[],a=arguments.length;a--;)n[a]=arguments[a];if(!t)return t=!0,e.apply(this,n)}}var Ee=function(e,t){this.router=e,this.base=function(e){if(!e)if(Y){var t=document.querySelector("base");e=(e=t&&t.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else e="/";"/"!==e.charAt(0)&&(e="/"+e);return e.replace(/\/$/,"")}(t),this.current=h,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function Pe(e,t,n,a){var s=Se(e,(function(e,a,s,i){var r=function(e,t){"function"!=typeof e&&(e=q.extend(e));return e.options[t]}(e,t);if(r)return Array.isArray(r)?r.map((function(e){return n(e,a,s,i)})):n(r,a,s,i)}));return Ce(a?s.reverse():s)}function Ve(e,t){if(t)return function(){return e.apply(t,arguments)}}Ee.prototype.listen=function(e){this.cb=e},Ee.prototype.onReady=function(e,t){this.ready?e():(this.readyCbs.push(e),t&&this.readyErrorCbs.push(t))},Ee.prototype.onError=function(e){this.errorCbs.push(e)},Ee.prototype.transitionTo=function(e,t,n){var a,s=this;try{a=this.router.match(e,this.current)}catch(e){throw this.errorCbs.forEach((function(t){t(e)})),e}var i=this.current;this.confirmTransition(a,(function(){s.updateRoute(a),t&&t(a),s.ensureURL(),s.router.afterHooks.forEach((function(e){e&&e(a,i)})),s.ready||(s.ready=!0,s.readyCbs.forEach((function(e){e(a)})))}),(function(e){n&&n(e),e&&!s.ready&&(xe(e,ge.redirected)&&i===h||(s.ready=!0,s.readyErrorCbs.forEach((function(t){t(e)}))))}))},Ee.prototype.confirmTransition=function(e,t,n){var a=this,s=this.current;this.pending=e;var i,r,o=function(e){!xe(e)&&Ae(e)&&(a.errorCbs.length?a.errorCbs.forEach((function(t){t(e)})):console.error(e)),n&&n(e)},p=e.matched.length-1,u=s.matched.length-1;if(T(e,s)&&p===u&&e.matched[p]===s.matched[u])return this.ensureURL(),o(((r=_e(i=s,e,ge.duplicated,'Avoided redundant navigation to current location: "'+i.fullPath+'".')).name="NavigationDuplicated",r));var d=function(e,t){var n,a=Math.max(e.length,t.length);for(n=0;n<a&&e[n]===t[n];n++);return{updated:t.slice(0,n),activated:t.slice(n),deactivated:e.slice(n)}}(this.current.matched,e.matched),l=d.updated,y=d.deactivated,c=d.activated,m=[].concat(function(e){return Pe(e,"beforeRouteLeave",Ve,!0)}(y),this.router.beforeHooks,function(e){return Pe(e,"beforeRouteUpdate",Ve)}(l),c.map((function(e){return e.beforeEnter})),Oe(c)),f=function(t,n){if(a.pending!==e)return o(ke(s,e));try{t(e,s,(function(t){!1===t?(a.ensureURL(!0),o(function(e,t){return _e(e,t,ge.aborted,'Navigation aborted from "'+e.fullPath+'" to "'+t.fullPath+'" via a navigation guard.')}(s,e))):Ae(t)?(a.ensureURL(!0),o(t)):"string"==typeof t||"object"==typeof t&&("string"==typeof t.path||"string"==typeof t.name)?(o(we(s,e)),"object"==typeof t&&t.replace?a.replace(t):a.push(t)):n(t)}))}catch(e){o(e)}};Te(m,f,(function(){Te(function(e){return Pe(e,"beforeRouteEnter",(function(e,t,n,a){return function(e,t,n){return function(a,s,i){return e(a,s,(function(e){"function"==typeof e&&(t.enteredCbs[n]||(t.enteredCbs[n]=[]),t.enteredCbs[n].push(e)),i(e)}))}}(e,n,a)}))}(c).concat(a.router.resolveHooks),f,(function(){if(a.pending!==e)return o(ke(s,e));a.pending=null,t(e),a.router.app&&a.router.app.$nextTick((function(){w(e)}))}))}))},Ee.prototype.updateRoute=function(e){this.current=e,this.cb&&this.cb(e)},Ee.prototype.setupListeners=function(){},Ee.prototype.teardown=function(){this.listeners.forEach((function(e){e()})),this.listeners=[],this.current=h,this.pending=null};var De=function(e){function t(t,n){e.call(this,t,n),this._startLocation=Fe(this.base)}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router,n=t.options.scrollBehavior,a=he&&n;a&&this.listeners.push(re());var s=function(){var n=e.current,s=Fe(e.base);e.current===h&&s===e._startLocation||e.transitionTo(s,(function(e){a&&oe(t,e,n,!0)}))};window.addEventListener("popstate",s),this.listeners.push((function(){window.removeEventListener("popstate",s)}))}},t.prototype.go=function(e){window.history.go(e)},t.prototype.push=function(e,t,n){var a=this,s=this.current;this.transitionTo(e,(function(e){be(A(a.base+e.fullPath)),oe(a.router,e,s,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var a=this,s=this.current;this.transitionTo(e,(function(e){ve(A(a.base+e.fullPath)),oe(a.router,e,s,!1),t&&t(e)}),n)},t.prototype.ensureURL=function(e){if(Fe(this.base)!==this.current.fullPath){var t=A(this.base+this.current.fullPath);e?be(t):ve(t)}},t.prototype.getCurrentLocation=function(){return Fe(this.base)},t}(Ee);function Fe(e){var t=window.location.pathname,n=t.toLowerCase(),a=e.toLowerCase();return!e||n!==a&&0!==n.indexOf(A(a+"/"))||(t=t.slice(e.length)),(t||"/")+window.location.search+window.location.hash}var Be=function(e){function t(t,n,a){e.call(this,t,n),a&&function(e){var t=Fe(e);if(!/^\/#/.test(t))return window.location.replace(A(e+"/#"+t)),!0}(this.base)||$e()}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var t=this.router.options.scrollBehavior,n=he&&t;n&&this.listeners.push(re());var a=function(){var t=e.current;$e()&&e.transitionTo(Ne(),(function(a){n&&oe(e.router,a,t,!0),he||Ue(a.fullPath)}))},s=he?"popstate":"hashchange";window.addEventListener(s,a),this.listeners.push((function(){window.removeEventListener(s,a)}))}},t.prototype.push=function(e,t,n){var a=this,s=this.current;this.transitionTo(e,(function(e){je(e.fullPath),oe(a.router,e,s,!1),t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var a=this,s=this.current;this.transitionTo(e,(function(e){Ue(e.fullPath),oe(a.router,e,s,!1),t&&t(e)}),n)},t.prototype.go=function(e){window.history.go(e)},t.prototype.ensureURL=function(e){var t=this.current.fullPath;Ne()!==t&&(e?je(t):Ue(t))},t.prototype.getCurrentLocation=function(){return Ne()},t}(Ee);function $e(){var e=Ne();return"/"===e.charAt(0)||(Ue("/"+e),!1)}function Ne(){var e=window.location.href,t=e.indexOf("#");return t<0?"":e=e.slice(t+1)}function Le(e){var t=window.location.href,n=t.indexOf("#");return(n>=0?t.slice(0,n):t)+"#"+e}function je(e){he?be(Le(e)):window.location.hash=e}function Ue(e){he?ve(Le(e)):window.location.replace(Le(e))}var ze=function(e){function t(t,n){e.call(this,t,n),this.stack=[],this.index=-1}return e&&(t.__proto__=e),t.prototype=Object.create(e&&e.prototype),t.prototype.constructor=t,t.prototype.push=function(e,t,n){var a=this;this.transitionTo(e,(function(e){a.stack=a.stack.slice(0,a.index+1).concat(e),a.index++,t&&t(e)}),n)},t.prototype.replace=function(e,t,n){var a=this;this.transitionTo(e,(function(e){a.stack=a.stack.slice(0,a.index).concat(e),t&&t(e)}),n)},t.prototype.go=function(e){var t=this,n=this.index+e;if(!(n<0||n>=this.stack.length)){var a=this.stack[n];this.confirmTransition(a,(function(){var e=t.current;t.index=n,t.updateRoute(a),t.router.afterHooks.forEach((function(t){t&&t(a,e)}))}),(function(e){xe(e,ge.duplicated)&&(t.index=n)}))}},t.prototype.getCurrentLocation=function(){var e=this.stack[this.stack.length-1];return e?e.fullPath:"/"},t.prototype.ensureURL=function(){},t}(Ee),We=function(e){void 0===e&&(e={}),this.app=null,this.apps=[],this.options=e,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=J(e.routes||[],this);var t=e.mode||"hash";switch(this.fallback="history"===t&&!he&&!1!==e.fallback,this.fallback&&(t="hash"),Y||(t="abstract"),this.mode=t,t){case"history":this.history=new De(this,e.base);break;case"hash":this.history=new Be(this,e.base,this.fallback);break;case"abstract":this.history=new ze(this,e.base);break;default:0}},qe={currentRoute:{configurable:!0}};function He(e,t){return e.push(t),function(){var n=e.indexOf(t);n>-1&&e.splice(n,1)}}We.prototype.match=function(e,t,n){return this.matcher.match(e,t,n)},qe.currentRoute.get=function(){return this.history&&this.history.current},We.prototype.init=function(e){var t=this;if(this.apps.push(e),e.$once("hook:destroyed",(function(){var n=t.apps.indexOf(e);n>-1&&t.apps.splice(n,1),t.app===e&&(t.app=t.apps[0]||null),t.app||t.history.teardown()})),!this.app){this.app=e;var n=this.history;if(n instanceof De||n instanceof Be){var a=function(e){n.setupListeners(),function(e){var a=n.current,s=t.options.scrollBehavior;he&&s&&"fullPath"in e&&oe(t,e,a,!1)}(e)};n.transitionTo(n.getCurrentLocation(),a,a)}n.listen((function(e){t.apps.forEach((function(t){t._route=e}))}))}},We.prototype.beforeEach=function(e){return He(this.beforeHooks,e)},We.prototype.beforeResolve=function(e){return He(this.resolveHooks,e)},We.prototype.afterEach=function(e){return He(this.afterHooks,e)},We.prototype.onReady=function(e,t){this.history.onReady(e,t)},We.prototype.onError=function(e){this.history.onError(e)},We.prototype.push=function(e,t,n){var a=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){a.history.push(e,t,n)}));this.history.push(e,t,n)},We.prototype.replace=function(e,t,n){var a=this;if(!t&&!n&&"undefined"!=typeof Promise)return new Promise((function(t,n){a.history.replace(e,t,n)}));this.history.replace(e,t,n)},We.prototype.go=function(e){this.history.go(e)},We.prototype.back=function(){this.go(-1)},We.prototype.forward=function(){this.go(1)},We.prototype.getMatchedComponents=function(e){var t=e?e.matched?e:this.resolve(e).route:this.currentRoute;return t?[].concat.apply([],t.matched.map((function(e){return Object.keys(e.components).map((function(t){return e.components[t]}))}))):[]},We.prototype.resolve=function(e,t,n){var a=W(e,t=t||this.history.current,n,this),s=this.match(a,t),i=s.redirectedFrom||s.fullPath;return{location:a,route:s,href:function(e,t,n){var a="hash"===n?"#"+t:t;return e?A(e+"/"+a):a}(this.history.base,i,this.mode),normalizedTo:a,resolved:s}},We.prototype.getRoutes=function(){return this.matcher.getRoutes()},We.prototype.addRoute=function(e,t){this.matcher.addRoute(e,t),this.history.current!==h&&this.history.transitionTo(this.history.getCurrentLocation())},We.prototype.addRoutes=function(e){this.matcher.addRoutes(e),this.history.current!==h&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(We.prototype,qe),We.install=function e(t){if(!e.installed||q!==t){e.installed=!0,q=t;var n=function(e){return void 0!==e},a=function(e,t){var a=e.$options._parentVnode;n(a)&&n(a=a.data)&&n(a=a.registerRouteInstance)&&a(e,t)};t.mixin({beforeCreate:function(){n(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),t.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,a(this,this)},destroyed:function(){a(this)}}),Object.defineProperty(t.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(t.prototype,"$route",{get:function(){return this._routerRoot._route}}),t.component("RouterView",k),t.component("RouterLink",G);var s=t.config.optionMergeStrategies;s.beforeRouteEnter=s.beforeRouteLeave=s.beforeRouteUpdate=s.created}},We.version="3.5.2",We.isNavigationFailure=xe,We.NavigationFailureType=ge,We.START_LOCATION=h,Y&&window.Vue&&window.Vue.use(We);var Ge=We,Qe=function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"min-h-screen bg-gray-100 px-4 pt-6"},[t("router-view")],1)};Qe._withStripped=!0;n(4);function Ye(e,t,n,a,s,i,r,o){var p,u="function"==typeof e?e.options:e;if(t&&(u.render=t,u.staticRenderFns=n,u._compiled=!0),a&&(u.functional=!0),i&&(u._scopeId="data-v-"+i),r?(p=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),s&&s.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(r)},u._ssrRegister=p):s&&(p=o?function(){s.call(this,(u.functional?this.parent:this).$root.$options.shadowRoot)}:s),p)if(u.functional){u._injectStyles=p;var d=u.render;u.render=function(e,t){return p.call(t),d(e,t)}}else{var l=u.beforeCreate;u.beforeCreate=l?[].concat(l,p):[p]}return{exports:e,options:u}}var Xe=Ye({},Qe,[],!1,null,null,null);Xe.options.__file="node_modules/hardhat-docgen/src/App.vue";var Ke=Xe.exports,Je=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"w-full space-y-10 md:max-w-screen-sm lg:max-w-screen-md mx-auto"},[n("HeaderBar"),e._v(" "),n("div",{staticClass:"pb-32"},[n("div",{staticClass:"space-y-4"},[n("span",{staticClass:"text-lg"},[e._v("\n        "+e._s(e.json.source)+"\n      ")]),e._v(" "),n("h1",{staticClass:"text-xl"},[e._v("\n        "+e._s(e.json.name)+"\n      ")]),e._v(" "),n("h2",{staticClass:"text-lg"},[e._v("\n        "+e._s(e.json.title)+"\n      ")]),e._v(" "),n("h2",{staticClass:"text-lg"},[e._v("\n        "+e._s(e.json.author)+"\n      ")]),e._v(" "),n("p",[e._v(e._s(e.json.notice))]),e._v(" "),n("p",[e._v(e._s(e.json.details))])]),e._v(" "),n("div",{staticClass:"mt-8"},[e.json.hasOwnProperty("constructor")?n("Member",{attrs:{json:e.json.constructor}}):e._e()],1),e._v(" "),n("div",{staticClass:"mt-8"},[e.json.receive?n("Member",{attrs:{json:e.json.receive}}):e._e()],1),e._v(" "),n("div",{staticClass:"mt-8"},[e.json.fallback?n("Member",{attrs:{json:e.json.fallback}}):e._e()],1),e._v(" "),e.json.events?n("MemberSet",{attrs:{title:"Events",json:e.json.events}}):e._e(),e._v(" "),e.json.stateVariables?n("MemberSet",{attrs:{title:"State Variables",json:e.json.stateVariables}}):e._e(),e._v(" "),e.json.methods?n("MemberSet",{attrs:{title:"Methods",json:e.json.methods}}):e._e()],1),e._v(" "),n("FooterBar")],1)};Je._withStripped=!0;var Ze=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"bg-gray-100 fixed bottom-0 right-0 w-full border-t border-dashed border-gray-300"},[n("div",{staticClass:"w-full text-center py-2 md:max-w-screen-sm lg:max-w-screen-md mx-auto"},[n("button",{staticClass:"py-1 px-2 text-gray-500",on:{click:function(t){return e.openLink(e.repository)}}},[e._v("\n      built with "+e._s(e.name)+"\n    ")])])])};Ze._withStripped=!0;var et=n(2),tt=Ye({data:function(){return{repository:et.b,name:et.a}},methods:{openLink(e){window.open(e,"_blank")}}},Ze,[],!1,null,null,null);tt.options.__file="node_modules/hardhat-docgen/src/components/FooterBar.vue";var nt=tt.exports,at=function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"w-full border-b border-dashed py-2 border-gray-300"},[t("router-link",{staticClass:"py-2 text-gray-500",attrs:{to:"/"}},[this._v("\n    <- Go back\n  ")])],1)};at._withStripped=!0;var st=Ye({},at,[],!1,null,null,null);st.options.__file="node_modules/hardhat-docgen/src/components/HeaderBar.vue";var it=st.exports,rt=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"border-2 border-gray-400 border-dashed w-full p-2"},[n("h3",{staticClass:"text-lg pb-2 mb-2 border-b-2 border-gray-400 border-dashed"},[e._v("\n    "+e._s(e.name)+" "+e._s(e.keywords)+" "+e._s(e.inputSignature)+"\n  ")]),e._v(" "),n("div",{staticClass:"space-y-3"},[n("p",[e._v(e._s(e.json.notice))]),e._v(" "),n("p",[e._v(e._s(e.json.details))]),e._v(" "),n("MemberSection",{attrs:{name:"Parameters",items:e.inputs}}),e._v(" "),n("MemberSection",{attrs:{name:"Return Values",items:e.outputs}})],1)])};rt._withStripped=!0;var ot=function(){var e=this,t=e.$createElement,n=e._self._c||t;return e.items.length>0?n("ul",[n("h4",{staticClass:"text-lg"},[e._v("\n    "+e._s(e.name)+"\n  ")]),e._v(" "),e._l(e.items,(function(t,a){return n("li",{key:a},[n("span",{staticClass:"bg-gray-300"},[e._v(e._s(t.type))]),e._v(" "),n("b",[e._v(e._s(t.name||"_"+a))]),t.desc?n("span",[e._v(": "),n("i",[e._v(e._s(t.desc))])]):e._e()])}))],2):e._e()};ot._withStripped=!0;var pt=Ye({props:{name:{type:String,default:""},items:{type:Array,default:()=>new Array}}},ot,[],!1,null,null,null);pt.options.__file="node_modules/hardhat-docgen/src/components/MemberSection.vue";var ut=Ye({components:{MemberSection:pt.exports},props:{json:{type:Object,default:()=>new Object}},computed:{name:function(){return this.json.name||this.json.type},keywords:function(){let e=[];return this.json.stateMutability&&e.push(this.json.stateMutability),"true"===this.json.anonymous&&e.push("anonymous"),e.join(" ")},params:function(){return this.json.params||{}},returns:function(){return this.json.returns||{}},inputs:function(){return(this.json.inputs||[]).map(e=>({...e,desc:this.params[e.name]}))},inputSignature:function(){return`(${this.inputs.map(e=>e.type).join(",")})`},outputs:function(){return(this.json.outputs||[]).map((e,t)=>({...e,desc:this.returns[e.name||"_"+t]}))},outputSignature:function(){return`(${this.outputs.map(e=>e.type).join(",")})`}}},rt,[],!1,null,null,null);ut.options.__file="node_modules/hardhat-docgen/src/components/Member.vue";var dt=ut.exports,lt=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"w-full mt-8"},[n("h2",{staticClass:"text-lg"},[e._v(e._s(e.title))]),e._v(" "),e._l(Object.keys(e.json),(function(t){return n("Member",{key:t,staticClass:"mt-3",attrs:{json:e.json[t]}})}))],2)};lt._withStripped=!0;var yt=Ye({components:{Member:dt},props:{title:{type:String,default:""},json:{type:Object,default:()=>new Object}}},lt,[],!1,null,null,null);yt.options.__file="node_modules/hardhat-docgen/src/components/MemberSet.vue";var ct=Ye({components:{Member:dt,MemberSet:yt.exports,HeaderBar:it,FooterBar:nt},props:{json:{type:Object,default:()=>new Object}}},Je,[],!1,null,null,null);ct.options.__file="node_modules/hardhat-docgen/src/components/Contract.vue";var mt=ct.exports,ft=function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"w-full space-y-10 md:max-w-screen-sm lg:max-w-screen-md mx-auto pb-32"},[t("Branch",{attrs:{json:this.trees,name:"Sources:"}}),this._v(" "),t("FooterBar",{staticClass:"mt-20"})],1)};ft._withStripped=!0;var ht=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[e._v("\n  "+e._s(e.name)+"\n  "),Array.isArray(e.json)?n("div",{staticClass:"pl-5"},e._l(e.json,(function(t,a){return n("div",{key:a},[n("router-link",{attrs:{to:t.source+":"+t.name}},[e._v("\n        "+e._s(t.name)+"\n      ")])],1)})),0):n("div",{staticClass:"pl-5"},e._l(Object.keys(e.json),(function(t){return n("div",{key:t},[n("Branch",{attrs:{json:e.json[t],name:t}})],1)})),0)])};ht._withStripped=!0;var bt=Ye({name:"Branch",props:{name:{type:String,default:null},json:{type:[Object,Array],default:()=>new Object}}},ht,[],!1,null,null,null);bt.options.__file="node_modules/hardhat-docgen/src/components/Branch.vue";var vt=Ye({components:{Branch:bt.exports,FooterBar:nt},props:{json:{type:Object,default:()=>new Object}},computed:{trees:function(){let e={};for(let t in this.json)t.split(/(?<=\/)/).reduce(function(e,n){if(!n.includes(":"))return e[n]=e[n]||{},e[n];{let[a]=n.split(":");e[a]=e[a]||[],e[a].push(this.json[t])}}.bind(this),e);return e}}},ft,[],!1,null,null,null);vt.options.__file="node_modules/hardhat-docgen/src/components/Index.vue";var Tt=vt.exports;a.a.use(Ge);const gt={"contracts/Migrations.sol:Migrations":{source:"contracts/Migrations.sol",name:"Migrations",constructor:{inputs:[],payable:!1,stateMutability:"nonpayable",type:"constructor"},methods:{"last_completed_migration()":{constant:!0,inputs:[],name:"last_completed_migration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"setCompleted(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"completed",type:"uint256"}],name:"setCompleted",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"upgrade(address)":{constant:!1,inputs:[{internalType:"address",name:"new_address",type:"address"}],name:"upgrade",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/fish/governance/ApprovalReceiver.sol:ApprovalReceiver":{source:"contracts/fish/governance/ApprovalReceiver.sol",name:"ApprovalReceiver",title:"Base contract for receiving approval from SOV token.",methods:{"receiveApproval(address,uint256,address,bytes)":{constant:!1,inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_token",type:"address"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"receiveApproval",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_data:"The data will be used for low level call."},notice:"Receives approval from SOV token."}}},"contracts/fish/governance/ErrorDecoder.sol:ErrorDecoder":{source:"contracts/fish/governance/ErrorDecoder.sol",name:"ErrorDecoder",title:"Base contract to properly handle returned data on failed calls",details:'On EVM if the return data length of a call is less than 68, then the transaction fails silently without a revert message! * As described in the Solidity documentation https://solidity.readthedocs.io/en/v0.5.17/control-structures.html#revert the revert reason is an ABI-encoded string consisting of: 0x08c379a0 // Function selector (method id) for "Error(string)" signature 0x0000000000000000000000000000000000000000000000000000000000000020 // Data offset 0x000000000000000000000000000000000000000000000000000000000000001a // String length 0x4e6f7420656e6f7567682045746865722070726f76696465642e000000000000 // String data * Another example, debug data from test:  0x08c379a0  0000000000000000000000000000000000000000000000000000000000000020  0000000000000000000000000000000000000000000000000000000000000034  54696d656c6f636b3a3a73657444656c61793a2044656c6179206d7573742065  7863656564206d696e696d756d2064656c61792e000000000000000000000000 * Parsed into:  Data offset: 20  Length: 34  Error message:    54696d656c6f636b3a3a73657444656c61793a2044656c6179206d7573742065    7863656564206d696e696d756d2064656c61792e000000000000000000000000'},"contracts/fish/governance/FeeSharingProxy.sol:FeeSharingProxy":{source:"contracts/fish/governance/FeeSharingProxy.sol",name:"FeeSharingProxy",title:"The FeeSharingProxy contract.",notice:"Staking is not only granting voting rights, but also access to fee sharing according to the own voting power in relation to the total. Whenever somebody decides to collect the fees from the protocol, they get transferred to a proxy contract which invests the funds in the lending pool and keeps the pool tokens. * The fee sharing proxy will be set as feesController of the protocol contract. This allows the fee sharing proxy to withdraw the fees. The fee sharing proxy holds the pool tokens and keeps track of which user owns how many tokens. In order to know how many tokens a user owns, the fee sharing proxy needs to know the user’s weighted stake in relation to the total weighted stake (aka total voting power). * Because both values are subject to change, they may be different on each fee withdrawal. To be able to calculate a user’s share of tokens when he wants to withdraw, we need checkpoints. * This contract is intended to be set as the protocol fee collector. Anybody can invoke the withdrawFees function which uses protocol.withdrawFees to obtain available fees from operations on a certain token. These fees are deposited in the corresponding loanPool. Also, the staking contract sends slashed tokens to this contract. When a user calls the withdraw function, the contract transfers the fee sharing rewards in proportion to the user’s weighted stake since the last withdrawal. * The protocol is collecting fees in all sorts of currencies and then automatically supplies them to the respective lending pools. Therefore, all fees are generating interest for the SOV holders. If one of them withdraws fees, it will get pool tokens. It is planned to add the option to convert anything to rBTC before withdrawing, but not yet implemented.",constructor:{inputs:[{internalType:"contract IProtocol",name:"_protocol",type:"address"},{internalType:"contract IStaking",name:"_staking",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"CheckpointAdded(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"CheckpointAdded",type:"event"},"FeeWithdrawn(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"FeeWithdrawn",type:"event"},"TokensTransferred(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokensTransferred",type:"event"},"UserFeeWithdrawn(address,address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"UserFeeWithdrawn",type:"event"}},methods:{"getAccumulatedFees(address,address)":{constant:!0,inputs:[{internalType:"address",name:"_user",type:"address"},{internalType:"address",name:"_loanPoolToken",type:"address"}],name:"getAccumulatedFees",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{_loanPoolToken:"Address of the pool token.",_user:"The address of the user or contract."},return:"The accumulated fee for the message sender.",notice:"Get the accumulated loan pool fee of the message sender."},"lastFeeWithdrawalTime(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lastFeeWithdrawalTime",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"numTokenCheckpoints(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"numTokenCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"processedCheckpoints(address,address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"processedCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"protocol()":{constant:!0,inputs:[],name:"protocol",outputs:[{internalType:"contract IProtocol",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"contract IStaking",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"tokenCheckpoints(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"tokenCheckpoints",outputs:[{internalType:"uint32",name:"blockNumber",type:"uint32"},{internalType:"uint32",name:"timestamp",type:"uint32"},{internalType:"uint96",name:"totalWeightedStake",type:"uint96"},{internalType:"uint96",name:"numTokens",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"transferTokens(address,uint96)":{constant:!1,inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint96",name:"_amount",type:"uint96"}],name:"transferTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"We just update amount of tokens here and write checkpoint in a separate methods in order to prevent adding checkpoints too often.",params:{_amount:"Amount to be transferred.",_token:"Address of the token."},notice:"Transfer tokens to this contract."},"unprocessedAmount(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"unprocessedAmount",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"withdraw(address,uint32,address)":{constant:!1,inputs:[{internalType:"address",name:"_loanPoolToken",type:"address"},{internalType:"uint32",name:"_maxCheckpoints",type:"uint32"},{internalType:"address",name:"_receiver",type:"address"}],name:"withdraw",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_loanPoolToken:"Address of the pool token.",_maxCheckpoints:"Maximum number of checkpoints to be processed.",_receiver:"The receiver of tokens or msg.sender"},notice:"Withdraw accumulated fee to the message sender.\t * The Sovryn protocol collects fees on every trade/swap and loan. These fees will be distributed to SOV stakers based on their voting power as a percentage of total voting power. Therefore, staking more SOV and/or staking for longer will increase your share of the fees generated, meaning you will earn more from staking."},"withdrawFees(address)":{constant:!1,inputs:[{internalType:"address",name:"_token",type:"address"}],name:"withdrawFees",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_token:"Address of the token"},notice:"Withdraw fees for the given token: lendingFee + tradingFee + borrowingFee"}}},"contracts/fish/governance/FeeSharingProxy.sol:ILoanToken":{source:"contracts/fish/governance/FeeSharingProxy.sol",name:"ILoanToken",methods:{"mint(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"depositAmount",type:"uint256"}],name:"mint",outputs:[{internalType:"uint256",name:"mintAmount",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/fish/governance/FeeSharingProxy.sol:IProtocol":{source:"contracts/fish/governance/FeeSharingProxy.sol",name:"IProtocol",methods:{"underlyingToLoanPool(address)":{constant:!1,inputs:[{internalType:"address",name:"token",type:"address"}],name:"underlyingToLoanPool",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"function"},"withdrawFees(address,address)":{constant:!1,inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"receiver",type:"address"}],name:"withdrawFees",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/fish/governance/GovernorAlpha.sol:GovernorAlpha":{source:"contracts/fish/governance/GovernorAlpha.sol",name:"GovernorAlpha",title:"Governance Contract.",notice:"This is an adapted clone of compound’s governance model. In general, the process is the same: Token holders can make (executable) proposals if they possess enough voting power, vote on proposals during a predefined voting period and in the end evaluate the outcome. If successful, the proposal will be scheduled on the timelock contract. Only after sufficient time passed, it can be executed. A minimum voting power is required for making a proposal as well as a minimum quorum. * Voting power in the Bitocracy: Stakers will receive voting power in the Bitocracy in return for their staking commitment. This voting power is weighted by how much SOV is staked and for how long the staking period is - staking more SOV over longer staking periods results in higher voting power. With this voting power, users can vote for or against any SIP in bitocracy.sovryn.app.",constructor:{inputs:[{internalType:"address",name:"timelock_",type:"address"},{internalType:"address",name:"staking_",type:"address"},{internalType:"address",name:"guardian_",type:"address"},{internalType:"uint96",name:"_quorumPercentageVotes",type:"uint96"},{internalType:"uint96",name:"_majorityPercentageVotes",type:"uint96"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"ProposalCanceled(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"}],name:"ProposalCanceled",type:"event"},"ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"address",name:"proposer",type:"address"},{indexed:!1,internalType:"address[]",name:"targets",type:"address[]"},{indexed:!1,internalType:"uint256[]",name:"values",type:"uint256[]"},{indexed:!1,internalType:"string[]",name:"signatures",type:"string[]"},{indexed:!1,internalType:"bytes[]",name:"calldatas",type:"bytes[]"},{indexed:!1,internalType:"uint256",name:"startBlock",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endBlock",type:"uint256"},{indexed:!1,internalType:"string",name:"description",type:"string"}],name:"ProposalCreated",type:"event"},"ProposalExecuted(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"}],name:"ProposalExecuted",type:"event"},"ProposalQueued(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"eta",type:"uint256"}],name:"ProposalQueued",type:"event"},"VoteCast(address,uint256,bool,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"voter",type:"address"},{indexed:!1,internalType:"uint256",name:"proposalId",type:"uint256"},{indexed:!1,internalType:"bool",name:"support",type:"bool"},{indexed:!1,internalType:"uint256",name:"votes",type:"uint256"}],name:"VoteCast",type:"event"}},methods:{"BALLOT_TYPEHASH()":{constant:!0,inputs:[],name:"BALLOT_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"DOMAIN_TYPEHASH()":{constant:!0,inputs:[],name:"DOMAIN_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"NAME()":{constant:!0,inputs:[],name:"NAME",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"__abdicate()":{constant:!1,inputs:[],name:"__abdicate",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",notice:"Sets guardian address to zero."},"__acceptAdmin()":{constant:!1,inputs:[],name:"__acceptAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Timelock wrapper w/ sender check."},"__executeSetTimelockPendingAdmin(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"newPendingAdmin",type:"address"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"__executeSetTimelockPendingAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Timelock wrapper w/ sender check."},"__queueSetTimelockPendingAdmin(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"newPendingAdmin",type:"address"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"__queueSetTimelockPendingAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Timelock wrapper w/ sender check."},"cancel(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"cancel",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{proposalId:"Proposal index to access the list proposals[] from storage."},notice:"Cancel a proposal by looping and cancelling everyone of its calls."},"castVote(uint256,bool)":{constant:!1,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"},{internalType:"bool",name:"support",type:"bool"}],name:"castVote",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{proposalId:"Proposal index to access the list proposals[] from storage.",support:"Vote value, yes or no."},notice:"Casts a vote by sender."},"castVoteBySig(uint256,bool,uint8,bytes32,bytes32)":{constant:!1,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"},{internalType:"bool",name:"support",type:"bool"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"castVoteBySig",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"The signature needs to be broken up into 3 parameters, known as v, r and s: const r = '0x' + sig.substring(2).substring(0, 64); const s = '0x' + sig.substring(2).substring(64, 128); const v = '0x' + sig.substring(2).substring(128, 130);",params:{proposalId:"Proposal index to access the list proposals[] from storage.",r:"Half of the ECDSA signature pair.",s:"Half of the ECDSA signature pair.",support:"Vote value, yes or no.",v:"The recovery byte of the signature."},notice:"Voting with EIP-712 Signatures.\t * Voting power can be delegated to any address, and then can be used to vote on proposals. A key benefit to users of by-signature functionality is that they can create a signed vote transaction for free, and have a trusted third-party spend rBTC(or ETH) on gas fees and write it to the blockchain for them.\t * The third party in this scenario, submitting the SOV-holder’s signed transaction holds a voting power that is for only a single proposal. The signatory still holds the power to vote on their own behalf in the proposal if the third party has not yet published the signed transaction that was given to them."},"execute(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"execute",outputs:[],payable:!0,stateMutability:"payable",type:"function",params:{proposalId:"Proposal index to access the list proposals[] from storage."},notice:"Execute a proposal by looping and performing everyone of its calls."},"getActions(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"getActions",outputs:[{internalType:"address[]",name:"targets",type:"address[]"},{internalType:"uint256[]",name:"values",type:"uint256[]"},{internalType:"string[]",name:"signatures",type:"string[]"},{internalType:"bytes[]",name:"calldatas",type:"bytes[]"}],payable:!1,stateMutability:"view",type:"function",params:{proposalId:"Proposal index to access the list proposals[] from storage."},return:"Arrays of the 4 call parameters: targets, values, signatures, calldatas.",notice:"Get a proposal list of its calls."},"getReceipt(uint256,address)":{constant:!0,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"},{internalType:"address",name:"voter",type:"address"}],name:"getReceipt",outputs:[{components:[{internalType:"bool",name:"hasVoted",type:"bool"},{internalType:"bool",name:"support",type:"bool"},{internalType:"uint96",name:"votes",type:"uint96"}],internalType:"struct GovernorAlpha.Receipt",name:"",type:"tuple"}],payable:!1,stateMutability:"view",type:"function",params:{proposalId:"Proposal index to access the list proposals[] from storage.",voter:"A governance stakeholder with voting power."},return:"The voter receipt of the proposal.",notice:"Get a proposal receipt."},"guardian()":{constant:!0,inputs:[],name:"guardian",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"latestProposalIds(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"latestProposalIds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"majorityPercentageVotes()":{constant:!0,inputs:[],name:"majorityPercentageVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"proposalCount()":{constant:!0,inputs:[],name:"proposalCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"proposalMaxOperations()":{constant:!0,inputs:[],name:"proposalMaxOperations",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"pure",type:"function",notice:"The maximum number of actions that can be included in a proposal."},"proposalThreshold()":{constant:!0,inputs:[],name:"proposalThreshold",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",notice:"The number of votes required in order for a voter to become a proposer."},"proposals(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"proposals",outputs:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint32",name:"startBlock",type:"uint32"},{internalType:"uint32",name:"endBlock",type:"uint32"},{internalType:"uint96",name:"forVotes",type:"uint96"},{internalType:"uint96",name:"againstVotes",type:"uint96"},{internalType:"uint96",name:"quorum",type:"uint96"},{internalType:"uint96",name:"majorityPercentage",type:"uint96"},{internalType:"uint64",name:"eta",type:"uint64"},{internalType:"uint64",name:"startTime",type:"uint64"},{internalType:"bool",name:"canceled",type:"bool"},{internalType:"bool",name:"executed",type:"bool"},{internalType:"address",name:"proposer",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"propose(address[],uint256[],string[],bytes[],string)":{constant:!1,inputs:[{internalType:"address[]",name:"targets",type:"address[]"},{internalType:"uint256[]",name:"values",type:"uint256[]"},{internalType:"string[]",name:"signatures",type:"string[]"},{internalType:"bytes[]",name:"calldatas",type:"bytes[]"},{internalType:"string",name:"description",type:"string"}],name:"propose",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{calldatas:"Array of payloads for the calls on proposal execution.",description:"Text describing the purpose of the proposal.",signatures:"Array of function signatures to call on proposal execution.",targets:"Array of contract addresses to perform proposal execution.",values:"Array of rBTC amounts to send on proposal execution."},notice:"Create a new proposal."},"queue(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"queue",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{proposalId:"Proposal index to access the list proposals[] from storage."},notice:"Enqueue a proposal and everyone of its calls."},"quorumPercentageVotes()":{constant:!0,inputs:[],name:"quorumPercentageVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"quorumVotes()":{constant:!0,inputs:[],name:"quorumVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",notice:"The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed."},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"contract IStaking",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"state(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"state",outputs:[{internalType:"enum GovernorAlpha.ProposalState",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function",params:{proposalId:"Proposal index to access the list proposals[] from storage."},return:"The state of the proposal: Canceled, Pending, Active, Defeated, Succeeded, Executed, Expired.",notice:"Get a proposal state."},"timelock()":{constant:!0,inputs:[],name:"timelock",outputs:[{internalType:"contract ITimelock",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"votingDelay()":{constant:!0,inputs:[],name:"votingDelay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"pure",type:"function",notice:"The delay before voting on a proposal may take place, once proposed."},"votingPeriod()":{constant:!0,inputs:[],name:"votingPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"pure",type:"function",notice:"The duration of voting on a proposal, in blocks."}}},"contracts/fish/governance/GovernorAlpha.sol:StakingInterface":{source:"contracts/fish/governance/GovernorAlpha.sol",name:"StakingInterface",methods:{"getPriorTotalVotingPower(uint32,uint256)":{constant:!0,inputs:[{internalType:"uint32",name:"blockNumber",type:"uint32"},{internalType:"uint256",name:"time",type:"uint256"}],name:"getPriorTotalVotingPower",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"getPriorVotes(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"date",type:"uint256"}],name:"getPriorVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/fish/governance/GovernorAlpha.sol:TimelockInterface":{source:"contracts/fish/governance/GovernorAlpha.sol",name:"TimelockInterface",methods:{"GRACE_PERIOD()":{constant:!0,inputs:[],name:"GRACE_PERIOD",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"acceptAdmin()":{constant:!1,inputs:[],name:"acceptAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"cancelTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"cancelTransaction",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"delay()":{constant:!0,inputs:[],name:"delay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"executeTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"executeTransaction",outputs:[{internalType:"bytes",name:"",type:"bytes"}],payable:!0,stateMutability:"payable",type:"function"},"queueTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"queueTransaction",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"nonpayable",type:"function"},"queuedTransactions(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"hash",type:"bytes32"}],name:"queuedTransactions",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/fish/governance/GovernorVault.sol:GovernorVault":{source:"contracts/fish/governance/GovernorVault.sol",name:"GovernorVault",title:"Governance Vault.",notice:"This contract stores tokens and rBTC only transfereble by owner, i.e. Sovryn governance.",fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"Deposited(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Deposited",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"RbtcTransferred(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"RbtcTransferred",type:"event"},"TokensTransferred(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokensTransferred",type:"event"}},methods:{"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"transferRbtc(address,uint256)":{constant:!1,inputs:[{internalType:"address payable",name:"_receiver",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferRbtc",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to be transferred.",_receiver:"The receiver of RBTC."},notice:"Transfer RBTC."},"transferTokens(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_receiver",type:"address"},{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to be transferred.",_receiver:"The receiver of tokens.",_token:"The address of token contract."},notice:"Transfer tokens."}}},"contracts/fish/governance/IFeeSharingProxy.sol:IFeeSharingProxy":{source:"contracts/fish/governance/IFeeSharingProxy.sol",name:"IFeeSharingProxy",title:"Interface for contract governance/FeeSharingProxy.sol",details:"Interfaces are used to cast a contract address into a callable instance.",methods:{"transferTokens(address,uint96)":{constant:!1,inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint96",name:"_amount",type:"uint96"}],name:"transferTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"withdraw(address,uint32,address)":{constant:!1,inputs:[{internalType:"address",name:"_loanPoolToken",type:"address"},{internalType:"uint32",name:"_maxCheckpoints",type:"uint32"},{internalType:"address",name:"_receiver",type:"address"}],name:"withdraw",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"withdrawFees(address)":{constant:!1,inputs:[{internalType:"address",name:"_token",type:"address"}],name:"withdrawFees",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/fish/governance/Staking/Checkpoints.sol:Checkpoints":{source:"contracts/fish/governance/Staking/Checkpoints.sol",name:"Checkpoints",title:"Checkpoints contract.",notice:"Increases and decreases storage values for users, delegatees and total daily stake.",events:{"DelegateChanged(address,uint256,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegator",type:"address"},{indexed:!1,internalType:"uint256",name:"lockedUntil",type:"uint256"},{indexed:!0,internalType:"address",name:"fromDelegate",type:"address"},{indexed:!0,internalType:"address",name:"toDelegate",type:"address"}],name:"DelegateChanged",type:"event"},"DelegateStakeChanged(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegate",type:"address"},{indexed:!1,internalType:"uint256",name:"lockedUntil",type:"uint256"},{indexed:!1,internalType:"uint256",name:"previousBalance",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newBalance",type:"uint256"}],name:"DelegateStakeChanged",type:"event"},"ExtendedStakingDuration(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"previousDate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDate",type:"uint256"}],name:"ExtendedStakingDuration",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"TokensStaked(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lockedUntil",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalStaked",type:"uint256"}],name:"TokensStaked",type:"event"},"TokensUnlocked(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokensUnlocked",type:"event"},"TokensWithdrawn(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokensWithdrawn",type:"event"},"VestingTokensWithdrawn(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"vesting",type:"address"},{indexed:!1,internalType:"address",name:"receiver",type:"address"}],name:"VestingTokensWithdrawn",type:"event"}},methods:{"DELEGATION_TYPEHASH()":{constant:!0,inputs:[],name:"DELEGATION_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"DOMAIN_TYPEHASH()":{constant:!0,inputs:[],name:"DOMAIN_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"MAX_DURATION()":{constant:!0,inputs:[],name:"MAX_DURATION",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"MAX_VOTING_WEIGHT()":{constant:!0,inputs:[],name:"MAX_VOTING_WEIGHT",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"SOVToken()":{constant:!0,inputs:[],name:"SOVToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"WEIGHT_FACTOR()":{constant:!0,inputs:[],name:"WEIGHT_FACTOR",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"allUnlocked()":{constant:!0,inputs:[],name:"allUnlocked",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"delegateStakingCheckpoints(address,uint256,uint32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"delegateStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"delegates(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"delegates",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"feeSharing()":{constant:!0,inputs:[],name:"feeSharing",outputs:[{internalType:"contract IFeeSharingProxy",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"kickoffTS()":{constant:!0,inputs:[],name:"kickoffTS",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"newStakingContract()":{constant:!0,inputs:[],name:"newStakingContract",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"nonces(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"numDelegateStakingCheckpoints(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"numDelegateStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numTotalStakingCheckpoints(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"numTotalStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numUserStakingCheckpoints(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"numUserStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"totalStakingCheckpoints(uint256,uint32)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"totalStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"userStakingCheckpoints(address,uint256,uint32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"userStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"vestingWhitelist(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"vestingWhitelist",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"weightScaling()":{constant:!0,inputs:[],name:"weightScaling",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/fish/governance/Staking/IStaking.sol:IStaking":{source:"contracts/fish/governance/Staking/IStaking.sol",name:"IStaking",title:"Interface for contract governance/Staking/Staking.sol",details:"Interfaces are used to cast a contract address into a callable instance.",methods:{"getPriorTotalVotingPower(uint32,uint256)":{constant:!0,inputs:[{internalType:"uint32",name:"blockNumber",type:"uint32"},{internalType:"uint256",name:"time",type:"uint256"}],name:"getPriorTotalVotingPower",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"getPriorVotes(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"date",type:"uint256"}],name:"getPriorVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"getPriorWeightedStake(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"date",type:"uint256"}],name:"getPriorWeightedStake",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"stake(uint96,uint256,address,address)":{constant:!1,inputs:[{internalType:"uint96",name:"amount",type:"uint96"},{internalType:"uint256",name:"until",type:"uint256"},{internalType:"address",name:"stakeFor",type:"address"},{internalType:"address",name:"delegatee",type:"address"}],name:"stake",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"stakesBySchedule(uint256,uint256,uint256,uint256,address,address)":{constant:!1,inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"cliff",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"uint256",name:"intervalLength",type:"uint256"},{internalType:"address",name:"stakeFor",type:"address"},{internalType:"address",name:"delegatee",type:"address"}],name:"stakesBySchedule",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"timestampToLockDate(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"timestamp",type:"uint256"}],name:"timestampToLockDate",outputs:[{internalType:"uint256",name:"lockDate",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/fish/governance/Staking/SafeMath96.sol:SafeMath96":{source:"contracts/fish/governance/Staking/SafeMath96.sol",name:"SafeMath96",title:"SafeMath96 contract.",details:"SafeMath96 uses uint96, unsigned integers of 96 bits length, so every integer from 0 to 2^96-1 can be operated. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. SafeMath restores this intuition by reverting the transaction when an operation overflows. * Using this contract instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",notice:"Improved Solidity's arithmetic operations with added overflow checks."},"contracts/fish/governance/Staking/Staking.sol:Staking":{source:"contracts/fish/governance/Staking/Staking.sol",name:"Staking",title:"Staking contract.",notice:"Pay-in and pay-out function for staking and withdrawing tokens. Staking is delegated and vested: To gain voting power, SOV holders must stake their SOV for a given period of time. Aside from Bitocracy participation, there's a financially-rewarding reason for staking SOV. Tokenholders who stake their SOV receive staking rewards, a pro-rata share of the revenue that the platform generates from various transaction fees plus revenues from stakers who have a portion of their SOV slashed for early unstaking.",events:{"DelegateChanged(address,uint256,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegator",type:"address"},{indexed:!1,internalType:"uint256",name:"lockedUntil",type:"uint256"},{indexed:!0,internalType:"address",name:"fromDelegate",type:"address"},{indexed:!0,internalType:"address",name:"toDelegate",type:"address"}],name:"DelegateChanged",type:"event"},"DelegateStakeChanged(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegate",type:"address"},{indexed:!1,internalType:"uint256",name:"lockedUntil",type:"uint256"},{indexed:!1,internalType:"uint256",name:"previousBalance",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newBalance",type:"uint256"}],name:"DelegateStakeChanged",type:"event"},"ExtendedStakingDuration(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"previousDate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDate",type:"uint256"}],name:"ExtendedStakingDuration",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"TokensStaked(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lockedUntil",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalStaked",type:"uint256"}],name:"TokensStaked",type:"event"},"TokensUnlocked(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokensUnlocked",type:"event"},"TokensWithdrawn(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokensWithdrawn",type:"event"},"VestingTokensWithdrawn(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"vesting",type:"address"},{indexed:!1,internalType:"address",name:"receiver",type:"address"}],name:"VestingTokensWithdrawn",type:"event"}},methods:{"DELEGATION_TYPEHASH()":{constant:!0,inputs:[],name:"DELEGATION_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"DOMAIN_TYPEHASH()":{constant:!0,inputs:[],name:"DOMAIN_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"MAX_DURATION()":{constant:!0,inputs:[],name:"MAX_DURATION",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"MAX_VOTING_WEIGHT()":{constant:!0,inputs:[],name:"MAX_VOTING_WEIGHT",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"SOVToken()":{constant:!0,inputs:[],name:"SOVToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"WEIGHT_FACTOR()":{constant:!0,inputs:[],name:"WEIGHT_FACTOR",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"allUnlocked()":{constant:!0,inputs:[],name:"allUnlocked",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint96",name:"balance",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"Iterate checkpoints adding up stakes.",params:{account:"The address of the account to get the balance of."},return:"The number of tokens held.",notice:"Get the number of staked tokens held by the user account."},"computeWeightByDate(uint256,uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"startDate",type:"uint256"}],name:"computeWeightByDate",outputs:[{internalType:"uint96",name:"weight",type:"uint96"}],payable:!1,stateMutability:"pure",type:"function",params:{date:"The unlocking date.",startDate:"We compute the weight for the tokens staked until 'date' on 'startDate'."},notice:"Compute the weight for a specific date."},"delegate(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"delegatee",type:"address"},{internalType:"uint256",name:"lockDate",type:"uint256"}],name:"delegate",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{delegatee:"The address to delegate votes to.",lockDate:"the date if the position to delegate."},notice:"Delegate votes from `msg.sender` which are locked until lockDate to `delegatee`."},"delegateBySig(address,uint256,uint256,uint256,uint8,bytes32,bytes32)":{constant:!1,inputs:[{internalType:"address",name:"delegatee",type:"address"},{internalType:"uint256",name:"lockDate",type:"uint256"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"delegateBySig",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"The signature needs to be broken up into 3 parameters, known as v, r and s: const r = '0x' + sig.substring(2).substring(0, 64); const s = '0x' + sig.substring(2).substring(64, 128); const v = '0x' + sig.substring(2).substring(128, 130);",params:{delegatee:"The address to delegate votes to.",expiry:"The time at which to expire the signature.",lockDate:"The date until which the position is locked.",nonce:"The contract state required to match the signature.",r:"Half of the ECDSA signature pair.",s:"Half of the ECDSA signature pair.",v:"The recovery byte of the signature."},notice:"Delegates votes from signatory to a delegatee account. Voting with EIP-712 Signatures.\t * Voting power can be delegated to any address, and then can be used to vote on proposals. A key benefit to users of by-signature functionality is that they can create a signed vote transaction for free, and have a trusted third-party spend rBTC(or ETH) on gas fees and write it to the blockchain for them.\t * The third party in this scenario, submitting the SOV-holder’s signed transaction holds a voting power that is for only a single proposal. The signatory still holds the power to vote on their own behalf in the proposal if the third party has not yet published the signed transaction that was given to them."},"delegateStakingCheckpoints(address,uint256,uint32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"delegateStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"delegates(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"delegates",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"extendStakingDuration(uint256,uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"previousLock",type:"uint256"},{internalType:"uint256",name:"until",type:"uint256"}],name:"extendStakingDuration",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{previousLock:"The old unlocking timestamp.",until:"The new unlocking timestamp in seconds."},notice:"Extend the staking duration until the specified date."},"feeSharing()":{constant:!0,inputs:[],name:"feeSharing",outputs:[{internalType:"contract IFeeSharingProxy",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getCurrentStakedUntil(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"lockedTS",type:"uint256"}],name:"getCurrentStakedUntil",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",params:{lockedTS:"The timestamp to get the staked tokens for."},notice:"Get the current number of tokens staked for a day."},"getCurrentVotes(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"getCurrentVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"This is a wrapper to simplify arguments. The actual computation is performed on WeightedStaking parent contract.",params:{account:"The address to get votes balance."},return:"The number of current votes for a user account.",notice:"Get the current votes balance for a user account."},"getPriorStakeByDateForDelegatee(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPriorStakeByDateForDelegatee",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation. TODO: WeightedStaking::getPriorStakeByDateForDelegatee should probably better be internal instead of a public function.",params:{account:"The address of the account to check.",blockNumber:"The block number to get the vote balance at."},return:"The number of votes the account had as of the given block.",notice:"Determine the prior number of stake for an account as of a block number."},"getPriorTotalStakesForDate(uint256,uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPriorTotalStakesForDate",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation. TODO: WeightedStaking::getPriorTotalStakesForDate should probably better be internal instead of a public function.",params:{blockNumber:"The block number to get the vote balance at.",date:"The date to check the stakes for."},return:"The number of votes the account had as of the given block.",notice:"Determine the prior number of stake for an unlocking date as of a block number."},"getPriorTotalVotingPower(uint32,uint256)":{constant:!0,inputs:[{internalType:"uint32",name:"blockNumber",type:"uint32"},{internalType:"uint256",name:"time",type:"uint256"}],name:"getPriorTotalVotingPower",outputs:[{internalType:"uint96",name:"totalVotingPower",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",params:{time:"The timestamp for which to calculate the total voting power."},return:"The total voting power at the given time.",notice:"Compute the total voting power at a given time."},"getPriorUserStakeByDate(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPriorUserStakeByDate",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation.",params:{account:"The address of the account to check.",blockNumber:"The block number to get the vote balance at.",date:"The lock date."},return:"The number of votes the account had as of the given block.",notice:"Determine the prior number of stake for an account until a certain lock date as of a block number."},"getPriorVotes(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"date",type:"uint256"}],name:"getPriorVotes",outputs:[{internalType:"uint96",name:"votes",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation.     Used for Voting, not for fee sharing.",params:{account:"The address of the account to check.",blockNumber:"The block number to get the vote balance at."},return:"The number of votes the delegatee had as of the given block.",notice:"Determine the prior number of votes for a delegatee as of a block number. Iterate through checkpoints adding up voting power."},"getPriorWeightedStake(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"date",type:"uint256"}],name:"getPriorWeightedStake",outputs:[{internalType:"uint96",name:"votes",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:'Block number must be a finalized block or else this function will revert to prevent misinformation.     Used for fee sharing, not voting. TODO: WeightedStaking::getPriorWeightedStake is using the variable name "votes" to add up token stake, and that could be misleading.',params:{account:"The address of the account to check.",blockNumber:"The block number to get the vote balance at."},return:"The weighted stake the account had as of the given block.",notice:"Determine the prior weighted stake for an account as of a block number. Iterate through checkpoints adding up voting power."},"getStakes(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"getStakes",outputs:[{internalType:"uint256[]",name:"dates",type:"uint256[]"},{internalType:"uint96[]",name:"stakes",type:"uint96[]"}],payable:!1,stateMutability:"view",type:"function",params:{account:"The address to get stakes."},return:"The arrays of dates and stakes.",notice:"Get list of stakes for a user account."},"getWithdrawAmounts(uint96,uint256)":{constant:!0,inputs:[{internalType:"uint96",name:"amount",type:"uint96"},{internalType:"uint256",name:"until",type:"uint256"}],name:"getWithdrawAmounts",outputs:[{internalType:"uint96",name:"",type:"uint96"},{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",params:{amount:"The number of tokens to withdraw.",until:"The date until which the tokens were staked."},notice:"Get available and punished amount for withdrawing."},"governanceWithdraw(uint96,uint256,address)":{constant:!1,inputs:[{internalType:"uint96",name:"amount",type:"uint96"},{internalType:"uint256",name:"until",type:"uint256"},{internalType:"address",name:"receiver",type:"address"}],name:"governanceWithdraw",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Can be invoked only by whitelisted contract passed to governanceWithdrawVesting",params:{amount:"The number of tokens to withdraw.",receiver:"The receiver of the tokens. If not specified, send to the msg.sender",until:"The date until which the tokens were staked."},notice:"Withdraw the given amount of tokens."},"governanceWithdrawVesting(address,address)":{constant:!1,inputs:[{internalType:"address",name:"vesting",type:"address"},{internalType:"address",name:"receiver",type:"address"}],name:"governanceWithdrawVesting",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Can be invoked only by whitelisted contract passed to governanceWithdrawVesting.",params:{receiver:"The receiver of the tokens. If not specified, send to the msg.sender",vesting:"The address of Vesting contract."},notice:"Withdraw tokens for vesting contract."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"kickoffTS()":{constant:!0,inputs:[],name:"kickoffTS",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"migrateToNewStakingContract()":{constant:!1,inputs:[],name:"migrateToNewStakingContract",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Staking contract needs to be set before by the owner. Currently not implemented, just needed for the interface.     In case it's needed at some point in the future,     the implementation needs to be changed first.",notice:"Allow a staker to migrate his positions to the new staking contract."},"newStakingContract()":{constant:!0,inputs:[],name:"newStakingContract",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"nonces(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"numDelegateStakingCheckpoints(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"numDelegateStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numTotalStakingCheckpoints(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"numTotalStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numUserStakingCheckpoints(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"numUserStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"receiveApproval(address,uint256,address,bytes)":{constant:!1,inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_token",type:"address"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"receiveApproval",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_data:"The data will be used for low level call."},notice:"Receives approval from SOV token."},"renounceOwnership()":{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setFeeSharing(address)":{constant:!1,inputs:[{internalType:"address",name:"_feeSharing",type:"address"}],name:"setFeeSharing",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_feeSharing:"The address of FeeSharingProxy contract."},notice:"Allow the owner to set a fee sharing proxy contract. We need it for unstaking with slashing."},"setNewStakingContract(address)":{constant:!1,inputs:[{internalType:"address",name:"_newStakingContract",type:"address"}],name:"setNewStakingContract",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Doesn't have any influence as long as migrateToNewStakingContract is not implemented.",params:{_newStakingContract:"The address of the new staking contract."},notice:"Allow the owner to set a new staking contract. As a consequence it allows the stakers to migrate their positions to the new contract."},"setWeightScaling(uint96)":{constant:!1,inputs:[{internalType:"uint96",name:"_weightScaling",type:"uint96"}],name:"setWeightScaling",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_weightScaling:"The weight scaling."},notice:"Allow the owner to set weight scaling. We need it for unstaking with slashing."},"stake(uint96,uint256,address,address)":{constant:!1,inputs:[{internalType:"uint96",name:"amount",type:"uint96"},{internalType:"uint256",name:"until",type:"uint256"},{internalType:"address",name:"stakeFor",type:"address"},{internalType:"address",name:"delegatee",type:"address"}],name:"stake",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{amount:"The number of tokens to stake.",delegatee:"The address of the delegatee or 0x0 if there is none.",stakeFor:"The address to stake the tokens for or 0x0 if staking for oneself.",until:"Timestamp indicating the date until which to stake."},notice:"Stake the given amount for the given duration of time."},"stakeWithApproval(address,uint96,uint256,address,address)":{constant:!1,inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"uint96",name:"amount",type:"uint96"},{internalType:"uint256",name:"until",type:"uint256"},{internalType:"address",name:"stakeFor",type:"address"},{internalType:"address",name:"delegatee",type:"address"}],name:"stakeWithApproval",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"This function will be invoked from receiveApprovalSOV.approveAndCall -> this.receiveApproval -> this.stakeWithApproval",params:{amount:"The number of tokens to stake.",delegatee:"The address of the delegatee or 0x0 if there is none.",sender:"The sender of SOV.approveAndCall",stakeFor:"The address to stake the tokens for or 0x0 if staking for oneself.",until:"Timestamp indicating the date until which to stake."},notice:"Stake the given amount for the given duration of time."},"stakesBySchedule(uint256,uint256,uint256,uint256,address,address)":{constant:!1,inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"cliff",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"uint256",name:"intervalLength",type:"uint256"},{internalType:"address",name:"stakeFor",type:"address"},{internalType:"address",name:"delegatee",type:"address"}],name:"stakesBySchedule",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{amount:"The amount of tokens to stake.",cliff:"The time interval to the first withdraw.",delegatee:"The address of the delegatee or 0x0 if there is none.",duration:"The staking duration.",intervalLength:"The length of each staking interval when cliff passed.",stakeFor:"The address to stake the tokens for or 0x0 if staking for oneself."},notice:"Stake tokens according to the vesting schedule."},"timestampToLockDate(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"timestamp",type:"uint256"}],name:"timestampToLockDate",outputs:[{internalType:"uint256",name:"lockDate",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{timestamp:"The unlocking timestamp."},return:"The actual unlocking date (might be up to 2 weeks shorter than intended).",notice:"Unstaking is possible every 2 weeks only. This means, to calculate the key value for the staking checkpoints, we need to map the intended timestamp to the closest available date."},"totalStakingCheckpoints(uint256,uint32)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"totalStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unlockAllTokens()":{constant:!1,inputs:[],name:"unlockAllTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Last resort.",notice:"Allow the owner to unlock all tokens in case the staking contract is going to be replaced Note: Not reversible on purpose. once unlocked, everything is unlocked. The owner should not be able to just quickly unlock to withdraw his own tokens and lock again."},"userStakingCheckpoints(address,uint256,uint32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"userStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"vestingWhitelist(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"vestingWhitelist",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"weightScaling()":{constant:!0,inputs:[],name:"weightScaling",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"weightedStakeByDate(address,uint256,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"startDate",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"weightedStakeByDate",outputs:[{internalType:"uint96",name:"power",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",params:{blockNumber:"The block number, needed for checkpointing.",date:"The staking date to compute the power for.",startDate:"The date for which we need to know the power of the stake."},notice:"Compute the voting power for a specific date. Power = stake * weight TODO: WeightedStaking::weightedStakeByDate should probably better be internal instead of a public function."},"withdraw(uint96,uint256,address)":{constant:!1,inputs:[{internalType:"uint96",name:"amount",type:"uint96"},{internalType:"uint256",name:"until",type:"uint256"},{internalType:"address",name:"receiver",type:"address"}],name:"withdraw",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{amount:"The number of tokens to withdraw.",receiver:"The receiver of the tokens. If not specified, send to the msg.sender",until:"The date until which the tokens were staked."},notice:"Withdraw the given amount of tokens if they are unlocked."}}},"contracts/fish/governance/Staking/StakingProxy.sol:StakingProxy":{source:"contracts/fish/governance/Staking/StakingProxy.sol",name:"StakingProxy",title:"Staking Proxy contract.",details:"Staking contract should be upgradable, use UpgradableProxy. StakingStorage is deployed with the upgradable functionality by using this contract instead, that inherits from UpgradableProxy the possibility of being enhanced and re-deployed.",constructor:{inputs:[{internalType:"address",name:"SOV",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"ImplementationChanged(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldImplementation",type:"address"},{indexed:!0,internalType:"address",name:"_newImplementation",type:"address"}],name:"ImplementationChanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldOwner",type:"address"},{indexed:!0,internalType:"address",name:"_newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"DELEGATION_TYPEHASH()":{constant:!0,inputs:[],name:"DELEGATION_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"DOMAIN_TYPEHASH()":{constant:!0,inputs:[],name:"DOMAIN_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"MAX_DURATION()":{constant:!0,inputs:[],name:"MAX_DURATION",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"MAX_VOTING_WEIGHT()":{constant:!0,inputs:[],name:"MAX_VOTING_WEIGHT",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"SOVToken()":{constant:!0,inputs:[],name:"SOVToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"WEIGHT_FACTOR()":{constant:!0,inputs:[],name:"WEIGHT_FACTOR",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"allUnlocked()":{constant:!0,inputs:[],name:"allUnlocked",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"delegateStakingCheckpoints(address,uint256,uint32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"delegateStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"delegates(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"delegates",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"feeSharing()":{constant:!0,inputs:[],name:"feeSharing",outputs:[{internalType:"contract IFeeSharingProxy",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getImplementation()":{constant:!0,inputs:[],name:"getImplementation",outputs:[{internalType:"address",name:"_implementation",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the implementation.",notice:"Return address of the implementation."},"getProxyOwner()":{constant:!0,inputs:[],name:"getProxyOwner",outputs:[{internalType:"address",name:"_owner",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the owner.",notice:"Return address of the owner."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"kickoffTS()":{constant:!0,inputs:[],name:"kickoffTS",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"newStakingContract()":{constant:!0,inputs:[],name:"newStakingContract",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"nonces(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"numDelegateStakingCheckpoints(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"numDelegateStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numTotalStakingCheckpoints(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"numTotalStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numUserStakingCheckpoints(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"numUserStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setImplementation(address)":{constant:!1,inputs:[{internalType:"address",name:"_implementation",type:"address"}],name:"setImplementation",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Wrapper for _setImplementation that exposes the function as public for owner to be able to set a new version of the contract as current pointing implementation.",params:{_implementation:"Address of the implementation."},notice:"Set address of the implementation."},"setProxyOwner(address)":{constant:!1,inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"setProxyOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_owner:"Address of the owner."},notice:"Set address of the owner."},"totalStakingCheckpoints(uint256,uint32)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"totalStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"userStakingCheckpoints(address,uint256,uint32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"userStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"vestingWhitelist(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"vestingWhitelist",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"weightScaling()":{constant:!0,inputs:[],name:"weightScaling",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/fish/governance/Staking/StakingStorage.sol:StakingStorage":{source:"contracts/fish/governance/Staking/StakingStorage.sol",name:"StakingStorage",title:"Staking Storage contact.",notice:"Just the storage part of stacking contract, no functions, only constant, variables and required structures (mappings). Used by StackingProxy and Checkpoints contracts. * What is SOV staking? The purpose of the SOV token is to provide a pseudonymous, censorship-resistant mechanism for governing the parameters of the Sovryn protocol, while aligning the incentives of protocol governors with the long-term success of the protocol. Any SOV token holder can choose to stake (lock up) their tokens for a fixed period of time in return for voting rights in the Bitocracy. Stakers are further incentivised through fee and slashing rewards.",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"DELEGATION_TYPEHASH()":{constant:!0,inputs:[],name:"DELEGATION_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"DOMAIN_TYPEHASH()":{constant:!0,inputs:[],name:"DOMAIN_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"MAX_DURATION()":{constant:!0,inputs:[],name:"MAX_DURATION",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"MAX_VOTING_WEIGHT()":{constant:!0,inputs:[],name:"MAX_VOTING_WEIGHT",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"SOVToken()":{constant:!0,inputs:[],name:"SOVToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"WEIGHT_FACTOR()":{constant:!0,inputs:[],name:"WEIGHT_FACTOR",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"allUnlocked()":{constant:!0,inputs:[],name:"allUnlocked",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"delegateStakingCheckpoints(address,uint256,uint32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"delegateStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"delegates(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"delegates",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"feeSharing()":{constant:!0,inputs:[],name:"feeSharing",outputs:[{internalType:"contract IFeeSharingProxy",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"kickoffTS()":{constant:!0,inputs:[],name:"kickoffTS",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"newStakingContract()":{constant:!0,inputs:[],name:"newStakingContract",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"nonces(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"numDelegateStakingCheckpoints(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"numDelegateStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numTotalStakingCheckpoints(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"numTotalStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numUserStakingCheckpoints(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"numUserStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"totalStakingCheckpoints(uint256,uint32)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"totalStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"userStakingCheckpoints(address,uint256,uint32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"userStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"vestingWhitelist(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"vestingWhitelist",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"weightScaling()":{constant:!0,inputs:[],name:"weightScaling",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/fish/governance/Staking/WeightedStaking.sol:WeightedStaking":{source:"contracts/fish/governance/Staking/WeightedStaking.sol",name:"WeightedStaking",title:"Weighted Staking contract.",notice:"Computation of power and votes used by FeeSharingProxy and GovernorAlpha and Staking contracts w/ mainly 3 public functions:  + getPriorTotalVotingPower => Total voting power.  + getPriorVotes  => Delegatee voting power.  + getPriorWeightedStake  => User Weighted Stake. Staking contract inherits WeightedStaking. FeeSharingProxy and GovernorAlpha invoke Staking instance functions.",events:{"DelegateChanged(address,uint256,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegator",type:"address"},{indexed:!1,internalType:"uint256",name:"lockedUntil",type:"uint256"},{indexed:!0,internalType:"address",name:"fromDelegate",type:"address"},{indexed:!0,internalType:"address",name:"toDelegate",type:"address"}],name:"DelegateChanged",type:"event"},"DelegateStakeChanged(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"delegate",type:"address"},{indexed:!1,internalType:"uint256",name:"lockedUntil",type:"uint256"},{indexed:!1,internalType:"uint256",name:"previousBalance",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newBalance",type:"uint256"}],name:"DelegateStakeChanged",type:"event"},"ExtendedStakingDuration(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"previousDate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newDate",type:"uint256"}],name:"ExtendedStakingDuration",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"TokensStaked(address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lockedUntil",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalStaked",type:"uint256"}],name:"TokensStaked",type:"event"},"TokensUnlocked(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokensUnlocked",type:"event"},"TokensWithdrawn(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"staker",type:"address"},{indexed:!1,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokensWithdrawn",type:"event"},"VestingTokensWithdrawn(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"vesting",type:"address"},{indexed:!1,internalType:"address",name:"receiver",type:"address"}],name:"VestingTokensWithdrawn",type:"event"}},methods:{"DELEGATION_TYPEHASH()":{constant:!0,inputs:[],name:"DELEGATION_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"DOMAIN_TYPEHASH()":{constant:!0,inputs:[],name:"DOMAIN_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"MAX_DURATION()":{constant:!0,inputs:[],name:"MAX_DURATION",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"MAX_VOTING_WEIGHT()":{constant:!0,inputs:[],name:"MAX_VOTING_WEIGHT",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"SOVToken()":{constant:!0,inputs:[],name:"SOVToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"WEIGHT_FACTOR()":{constant:!0,inputs:[],name:"WEIGHT_FACTOR",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"allUnlocked()":{constant:!0,inputs:[],name:"allUnlocked",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"computeWeightByDate(uint256,uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"startDate",type:"uint256"}],name:"computeWeightByDate",outputs:[{internalType:"uint96",name:"weight",type:"uint96"}],payable:!1,stateMutability:"pure",type:"function",params:{date:"The unlocking date.",startDate:"We compute the weight for the tokens staked until 'date' on 'startDate'."},notice:"Compute the weight for a specific date."},"delegateStakingCheckpoints(address,uint256,uint32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"delegateStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"delegates(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"delegates",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"feeSharing()":{constant:!0,inputs:[],name:"feeSharing",outputs:[{internalType:"contract IFeeSharingProxy",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getPriorStakeByDateForDelegatee(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPriorStakeByDateForDelegatee",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation. TODO: WeightedStaking::getPriorStakeByDateForDelegatee should probably better be internal instead of a public function.",params:{account:"The address of the account to check.",blockNumber:"The block number to get the vote balance at."},return:"The number of votes the account had as of the given block.",notice:"Determine the prior number of stake for an account as of a block number."},"getPriorTotalStakesForDate(uint256,uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPriorTotalStakesForDate",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation. TODO: WeightedStaking::getPriorTotalStakesForDate should probably better be internal instead of a public function.",params:{blockNumber:"The block number to get the vote balance at.",date:"The date to check the stakes for."},return:"The number of votes the account had as of the given block.",notice:"Determine the prior number of stake for an unlocking date as of a block number."},"getPriorTotalVotingPower(uint32,uint256)":{constant:!0,inputs:[{internalType:"uint32",name:"blockNumber",type:"uint32"},{internalType:"uint256",name:"time",type:"uint256"}],name:"getPriorTotalVotingPower",outputs:[{internalType:"uint96",name:"totalVotingPower",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",params:{time:"The timestamp for which to calculate the total voting power."},return:"The total voting power at the given time.",notice:"Compute the total voting power at a given time."},"getPriorUserStakeByDate(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPriorUserStakeByDate",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation.",params:{account:"The address of the account to check.",blockNumber:"The block number to get the vote balance at.",date:"The lock date."},return:"The number of votes the account had as of the given block.",notice:"Determine the prior number of stake for an account until a certain lock date as of a block number."},"getPriorVotes(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"date",type:"uint256"}],name:"getPriorVotes",outputs:[{internalType:"uint96",name:"votes",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:"Block number must be a finalized block or else this function will revert to prevent misinformation.     Used for Voting, not for fee sharing.",params:{account:"The address of the account to check.",blockNumber:"The block number to get the vote balance at."},return:"The number of votes the delegatee had as of the given block.",notice:"Determine the prior number of votes for a delegatee as of a block number. Iterate through checkpoints adding up voting power."},"getPriorWeightedStake(address,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"uint256",name:"date",type:"uint256"}],name:"getPriorWeightedStake",outputs:[{internalType:"uint96",name:"votes",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",details:'Block number must be a finalized block or else this function will revert to prevent misinformation.     Used for fee sharing, not voting. TODO: WeightedStaking::getPriorWeightedStake is using the variable name "votes" to add up token stake, and that could be misleading.',params:{account:"The address of the account to check.",blockNumber:"The block number to get the vote balance at."},return:"The weighted stake the account had as of the given block.",notice:"Determine the prior weighted stake for an account as of a block number. Iterate through checkpoints adding up voting power."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"kickoffTS()":{constant:!0,inputs:[],name:"kickoffTS",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"newStakingContract()":{constant:!0,inputs:[],name:"newStakingContract",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"nonces(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"numDelegateStakingCheckpoints(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"numDelegateStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numTotalStakingCheckpoints(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"numTotalStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"numUserStakingCheckpoints(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"numUserStakingCheckpoints",outputs:[{internalType:"uint32",name:"",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"timestampToLockDate(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"timestamp",type:"uint256"}],name:"timestampToLockDate",outputs:[{internalType:"uint256",name:"lockDate",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{timestamp:"The unlocking timestamp."},return:"The actual unlocking date (might be up to 2 weeks shorter than intended).",notice:"Unstaking is possible every 2 weeks only. This means, to calculate the key value for the staking checkpoints, we need to map the intended timestamp to the closest available date."},"totalStakingCheckpoints(uint256,uint32)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"totalStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"userStakingCheckpoints(address,uint256,uint32)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint32",name:"",type:"uint32"}],name:"userStakingCheckpoints",outputs:[{internalType:"uint32",name:"fromBlock",type:"uint32"},{internalType:"uint96",name:"stake",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"vestingWhitelist(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"vestingWhitelist",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"weightScaling()":{constant:!0,inputs:[],name:"weightScaling",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"weightedStakeByDate(address,uint256,uint256,uint256)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"date",type:"uint256"},{internalType:"uint256",name:"startDate",type:"uint256"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"weightedStakeByDate",outputs:[{internalType:"uint96",name:"power",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",params:{blockNumber:"The block number, needed for checkpointing.",date:"The staking date to compute the power for.",startDate:"The date for which we need to know the power of the stake."},notice:"Compute the voting power for a specific date. Power = stake * weight TODO: WeightedStaking::weightedStakeByDate should probably better be internal instead of a public function."}}},"contracts/fish/governance/Timelock.sol:ITimelock":{source:"contracts/fish/governance/Timelock.sol",name:"ITimelock",methods:{"GRACE_PERIOD()":{constant:!0,inputs:[],name:"GRACE_PERIOD",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"acceptAdmin()":{constant:!1,inputs:[],name:"acceptAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"cancelTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"cancelTransaction",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"delay()":{constant:!0,inputs:[],name:"delay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"executeTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"executeTransaction",outputs:[{internalType:"bytes",name:"",type:"bytes"}],payable:!0,stateMutability:"payable",type:"function"},"queueTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"queueTransaction",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"nonpayable",type:"function"},"queuedTransactions(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"hash",type:"bytes32"}],name:"queuedTransactions",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/fish/governance/Timelock.sol:Timelock":{source:"contracts/fish/governance/Timelock.sol",name:"Timelock",title:"Sovryn Protocol Timelock contract, based on Compound system.",notice:"This contract lets Sovryn governance system set up its own Time Lock instance to execute transactions proposed through the GovernorAlpha contract instance. * The Timelock contract allows its admin (Sovryn governance on GovernorAlpha contract) to add arbitrary function calls to a queue. This contract can only execute a function call if the function call has been in the queue for at least 3 hours. * Anytime the Timelock contract makes a function call, it must be the case that the function call was first made public by having been publicly added to the queue at least 3 hours prior. * The intention is to provide GovernorAlpha contract the functionality to queue proposal actions. This would mean that any changes made by Sovryn governance of any contract would necessarily come with at least an advanced warning. This makes the Sovryn system follow a “time-delayed, opt-out” upgrade pattern (rather than an “instant, forced” upgrade pattern). * Time-delaying admin actions gives users a chance to exit system if its admins become malicious or compromised (or make a change that the users do not like). Downside is that honest admins would be unable to lock down functionality to protect users if a critical bug was found. * Delayed transactions reduce the amount of trust required by users of Sovryn and the overall risk for contracts building on top of it, as GovernorAlpha.",constructor:{inputs:[{internalType:"address",name:"admin_",type:"address"},{internalType:"uint256",name:"delay_",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"CancelTransaction(bytes32,address,uint256,string,bytes,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"txHash",type:"bytes32"},{indexed:!0,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"},{indexed:!1,internalType:"string",name:"signature",type:"string"},{indexed:!1,internalType:"bytes",name:"data",type:"bytes"},{indexed:!1,internalType:"uint256",name:"eta",type:"uint256"}],name:"CancelTransaction",type:"event"},"ExecuteTransaction(bytes32,address,uint256,string,bytes,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"txHash",type:"bytes32"},{indexed:!0,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"},{indexed:!1,internalType:"string",name:"signature",type:"string"},{indexed:!1,internalType:"bytes",name:"data",type:"bytes"},{indexed:!1,internalType:"uint256",name:"eta",type:"uint256"}],name:"ExecuteTransaction",type:"event"},"NewAdmin(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newAdmin",type:"address"}],name:"NewAdmin",type:"event"},"NewDelay(uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"newDelay",type:"uint256"}],name:"NewDelay",type:"event"},"NewPendingAdmin(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newPendingAdmin",type:"address"}],name:"NewPendingAdmin",type:"event"},"QueueTransaction(bytes32,address,uint256,string,bytes,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"txHash",type:"bytes32"},{indexed:!0,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"},{indexed:!1,internalType:"string",name:"signature",type:"string"},{indexed:!1,internalType:"bytes",name:"data",type:"bytes"},{indexed:!1,internalType:"uint256",name:"eta",type:"uint256"}],name:"QueueTransaction",type:"event"}},methods:{"GRACE_PERIOD()":{constant:!0,inputs:[],name:"GRACE_PERIOD",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"MAXIMUM_DELAY()":{constant:!0,inputs:[],name:"MAXIMUM_DELAY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"MINIMUM_DELAY()":{constant:!0,inputs:[],name:"MINIMUM_DELAY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"acceptAdmin()":{constant:!1,inputs:[],name:"acceptAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",notice:"Accept a new admin for the timelock."},"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"cancelTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"cancelTransaction",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{data:"The ethereum transaction input data payload.",eta:"Estimated Time of Accomplishment. The timestamp that the proposal will be available for execution, set once the vote succeeds.",signature:"The stanndard representation of the function called.",target:"The contract to call.",value:"The amount to send in the transaction."},notice:"Cancel a transaction."},"delay()":{constant:!0,inputs:[],name:"delay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"executeTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"executeTransaction",outputs:[{internalType:"bytes",name:"",type:"bytes"}],payable:!0,stateMutability:"payable",type:"function",params:{data:"The ethereum transaction input data payload.",eta:"Estimated Time of Accomplishment. The timestamp that the proposal will be available for execution, set once the vote succeeds.",signature:"The stanndard representation of the function called.",target:"The contract to call.",value:"The amount to send in the transaction."},notice:"Executes a previously queued transaction from the governance."},"pendingAdmin()":{constant:!0,inputs:[],name:"pendingAdmin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"queueTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"queueTransaction",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{data:"The ethereum transaction input data payload.",eta:"Estimated Time of Accomplishment. The timestamp that the proposal will be available for execution, set once the vote succeeds.",signature:"The stanndard representation of the function called.",target:"The contract to call.",value:"The amount to send in the transaction."},notice:"Queue a new transaction from the governance contract."},"queuedTransactions(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"queuedTransactions",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"setDelay(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"delay_",type:"uint256"}],name:"setDelay",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{delay_:"The amount of time to wait until execution."},notice:"Set a new delay when executing the contract calls."},"setPendingAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"pendingAdmin_",type:"address"}],name:"setPendingAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{pendingAdmin_:"The new pending admin address."},notice:"Set a new pending admin for the timelock."}}},"contracts/fish/governance/Vesting/DevelopmentFund.sol:DevelopmentFund":{source:"contracts/fish/governance/Vesting/DevelopmentFund.sol",name:"DevelopmentFund",title:"A holding contract for Sovryn Development Fund.",author:"Franklin Richards",notice:"You can use this contract for timed token release from Dev Fund.",constructor:{inputs:[{internalType:"address",name:"_SOV",type:"address"},{internalType:"address",name:"_lockedTokenOwner",type:"address"},{internalType:"address",name:"_safeVault",type:"address"},{internalType:"address",name:"_unlockedTokenOwner",type:"address"},{internalType:"uint256",name:"_lastReleaseTime",type:"uint256"},{internalType:"uint256[]",name:"_releaseDuration",type:"uint256[]"},{internalType:"uint256[]",name:"_releaseTokenAmount",type:"uint256[]"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"DevelopmentFundActivated()":{anonymous:!1,inputs:[],name:"DevelopmentFundActivated",type:"event"},"DevelopmentFundExpired()":{anonymous:!1,inputs:[],name:"DevelopmentFundExpired",type:"event"},"LockedTokenTransferByLockedOwner(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"LockedTokenTransferByLockedOwner",type:"event"},"LockedTokenTransferByUnlockedOwner(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"LockedTokenTransferByUnlockedOwner",type:"event"},"NewLockedOwnerAdded(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_newLockedOwner",type:"address"}],name:"NewLockedOwnerAdded",type:"event"},"NewLockedOwnerApproved(address,address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_oldLockedOwner",type:"address"},{indexed:!0,internalType:"address",name:"_newLockedOwner",type:"address"}],name:"NewLockedOwnerApproved",type:"event"},"TokenDeposit(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"TokenDeposit",type:"event"},"TokenReleaseChanged(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_releaseCount",type:"uint256"}],name:"TokenReleaseChanged",type:"event"},"UnlockedOwnerUpdated(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!0,internalType:"address",name:"_newUnlockedOwner",type:"address"}],name:"UnlockedOwnerUpdated",type:"event"},"UnlockedTokenWithdrawalByUnlockedOwner(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_initiator",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_releaseCount",type:"uint256"}],name:"UnlockedTokenWithdrawalByUnlockedOwner",type:"event"}},methods:{"SOV()":{constant:!0,inputs:[],name:"SOV",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"approveLockedTokenOwner()":{constant:!1,inputs:[],name:"approveLockedTokenOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"This approval is an added security to avoid development fund takeover by a compromised locked token owner.",notice:"Approve Locked Token Owner."},"changeTokenReleaseSchedule(uint256,uint256[],uint256[])":{constant:!1,inputs:[{internalType:"uint256",name:"_newLastReleaseTime",type:"uint256"},{internalType:"uint256[]",name:"_releaseDuration",type:"uint256[]"},{internalType:"uint256[]",name:"_releaseTokenAmount",type:"uint256[]"}],name:"changeTokenReleaseSchedule",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"_releaseDuration and _releaseTokenAmount should be specified in reverse order of release.",params:{_newLastReleaseTime:"If the last release time is to be changed, zero if no change required.",_releaseDuration:"The time duration between each release calculated from `lastReleaseTime` in seconds.",_releaseTokenAmount:"The amount of token to be released in each duration/interval."},notice:"Change the Token release schedule. It creates a completely new schedule, and does not append on the previous one."},"depositTokens(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"depositTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"These tokens can be withdrawn/transferred any time by the lockedTokenOwner.",params:{_amount:"the amount of tokens deposited."},notice:"Deposit tokens to this contract."},"getReleaseDuration()":{constant:!0,inputs:[],name:"getReleaseDuration",outputs:[{internalType:"uint256[]",name:"_releaseTokenDuration",type:"uint256[]"}],payable:!1,stateMutability:"view",type:"function",return:"_currentReleaseDuration The current release duration.",notice:"Function to read the current token release duration."},"getReleaseTokenAmount()":{constant:!0,inputs:[],name:"getReleaseTokenAmount",outputs:[{internalType:"uint256[]",name:"_currentReleaseTokenAmount",type:"uint256[]"}],payable:!1,stateMutability:"view",type:"function",return:"_currentReleaseTokenAmount The current release token amount.",notice:"Function to read the current token release amount."},"init()":{constant:!1,inputs:[],name:"init",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Without calling this function, the contract will not work.",notice:"This function is called once after deployment for token transfer based on schedule."},"lastReleaseTime()":{constant:!0,inputs:[],name:"lastReleaseTime",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"lockedTokenOwner()":{constant:!0,inputs:[],name:"lockedTokenOwner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"newLockedTokenOwner()":{constant:!0,inputs:[],name:"newLockedTokenOwner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"releaseDuration(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"releaseDuration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"releaseTokenAmount(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"releaseTokenAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"safeVault()":{constant:!0,inputs:[],name:"safeVault",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"status()":{constant:!0,inputs:[],name:"status",outputs:[{internalType:"enum DevelopmentFund.Status",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},"transferTokensByLockedTokenOwner(address)":{constant:!1,inputs:[{internalType:"address",name:"_receiver",type:"address"}],name:"transferTokensByLockedTokenOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"This could be called when the current development fund has to be upgraded.",params:{_receiver:"The address which receives this token transfer."},notice:"Transfers all of the remaining tokens by the owner maybe for an upgrade."},"transferTokensByUnlockedTokenOwner()":{constant:!1,inputs:[],name:"transferTokensByUnlockedTokenOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"This could be called when governance or development fund might be compromised.",notice:"Transfers all of the remaining tokens in an emergency situation."},"unlockedTokenOwner()":{constant:!0,inputs:[],name:"unlockedTokenOwner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"updateLockedTokenOwner(address)":{constant:!1,inputs:[{internalType:"address",name:"_newLockedTokenOwner",type:"address"}],name:"updateLockedTokenOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_newLockedTokenOwner:"The owner of the locked tokens & contract."},notice:"Update Locked Token Owner."},"updateUnlockedTokenOwner(address)":{constant:!1,inputs:[{internalType:"address",name:"_newUnlockedTokenOwner",type:"address"}],name:"updateUnlockedTokenOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_newUnlockedTokenOwner:"The new unlocked token owner."},notice:"Update Unlocked Token Owner."},"withdrawTokensByUnlockedTokenOwner(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"withdrawTokensByUnlockedTokenOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to be withdrawn."},notice:"Withdraws all unlocked/released token."}}},"contracts/fish/governance/Vesting/ITeamVesting.sol:ITeamVesting":{source:"contracts/fish/governance/Vesting/ITeamVesting.sol",name:"ITeamVesting",title:"Interface for TeamVesting contract.",details:"Interfaces are used to cast a contract address into a callable instance. This interface is used by Staking contract to call governanceWithdrawTokens function having the vesting contract instance address.",methods:{"governanceWithdrawTokens(address)":{constant:!1,inputs:[{internalType:"address",name:"receiver",type:"address"}],name:"governanceWithdrawTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/fish/governance/Vesting/IVesting.sol:IVesting":{source:"contracts/fish/governance/Vesting/IVesting.sol",name:"IVesting",title:"Interface for Vesting contract.",details:"Interfaces are used to cast a contract address into a callable instance. This interface is used by VestingLogic contract to implement stakeTokens function and on VestingRegistry contract to call IVesting(vesting).stakeTokens function at a vesting instance.",methods:{"duration()":{constant:!1,inputs:[],name:"duration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function"},"endDate()":{constant:!1,inputs:[],name:"endDate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function"},"stakeTokens(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"stakeTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/fish/governance/Vesting/IVestingFactory.sol:IVestingFactory":{source:"contracts/fish/governance/Vesting/IVestingFactory.sol",name:"IVestingFactory",title:"Interface for Vesting Factory contract.",details:"Interfaces are used to cast a contract address into a callable instance. This interface is used by VestingFactory contract to override empty implemention of deployVesting and deployTeamVesting functions and on VestingRegistry contract to use an instance of VestingFactory.",methods:{"deployTeamVesting(address,address,address,uint256,uint256,address,address)":{constant:!1,inputs:[{internalType:"address",name:"_SOV",type:"address"},{internalType:"address",name:"_staking",type:"address"},{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"},{internalType:"address",name:"_feeSharing",type:"address"},{internalType:"address",name:"_owner",type:"address"}],name:"deployTeamVesting",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"function"},"deployVesting(address,address,address,uint256,uint256,address,address)":{constant:!1,inputs:[{internalType:"address",name:"_SOV",type:"address"},{internalType:"address",name:"_staking",type:"address"},{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"},{internalType:"address",name:"_feeSharing",type:"address"},{internalType:"address",name:"_owner",type:"address"}],name:"deployVesting",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/fish/governance/Vesting/OriginInvestorsClaim.sol:OriginInvestorsClaim":{source:"contracts/fish/governance/Vesting/OriginInvestorsClaim.sol",name:"OriginInvestorsClaim",title:"Origin investors claim vested cSOV tokens.",notice:"// TODO: fund this contract with a total amount of SOV needed to distribute.",constructor:{inputs:[{internalType:"address",name:"vestingRegistryAddress",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"AdminAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminAdded",type:"event"},"AdminRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminRemoved",type:"event"},"ClaimTransferred(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"investor",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"ClaimTransferred",type:"event"},"ClaimVested(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"investor",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"ClaimVested",type:"event"},"InvestorsAmountsListAppended(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"qty",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"InvestorsAmountsListAppended",type:"event"},"InvestorsAmountsListInitialized(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"qty",type:"uint256"},{indexed:!1,internalType:"uint256",name:"totalAmount",type:"uint256"}],name:"InvestorsAmountsListInitialized",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"SOVToken()":{constant:!0,inputs:[],name:"SOVToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"SOV_VESTING_CLIFF()":{constant:!0,inputs:[],name:"SOV_VESTING_CLIFF",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"addAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"addAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The addresses of the account to grant permissions."},notice:"Add account to ACL."},"admins(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"admins",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"appendInvestorsAmountsList(address[],uint256[])":{constant:!1,inputs:[{internalType:"address[]",name:"investors",type:"address[]"},{internalType:"uint256[]",name:"claimAmounts",type:"uint256[]"}],name:"appendInvestorsAmountsList",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{claimAmounts:"The list of amounts for investors investors[i] will receive claimAmounts[i] of SOV.",investors:"The list of investors addresses to add to the list. Duplicates will be skipped."},notice:"The contract should be approved or transferred necessary amount of SOV prior to calling the function."},"authorizedBalanceWithdraw(address)":{constant:!1,inputs:[{internalType:"address",name:"toAddress",type:"address"}],name:"authorizedBalanceWithdraw",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{toAddress:"The recipient address of all this contract tokens."},notice:"In case we have unclaimed tokens or in emergency case this function transfers all SOV tokens to a given address."},"claim()":{constant:!1,inputs:[],name:"claim",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",notice:"Claim tokens from this contract. If vestingTerm is not yet achieved a vesting is created. Otherwise tokens are tranferred."},"investorsAmountsList(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"investorsAmountsList",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"investorsListInitialized()":{constant:!0,inputs:[],name:"investorsListInitialized",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"investorsQty()":{constant:!0,inputs:[],name:"investorsQty",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"kickoffTS()":{constant:!0,inputs:[],name:"kickoffTS",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"removeAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"removeAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The addresses of the account to revoke permissions."},notice:"Remove account from ACL."},"renounceOwnership()":{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setInvestorsAmountsListInitialized()":{constant:!1,inputs:[],name:"setInvestorsAmountsListInitialized",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",notice:"Should be called after the investors list setup completed. This function checks whether the SOV token balance of the contract is enough and sets status list to initialized."},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"contract Staking",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"totalAmount()":{constant:!0,inputs:[],name:"totalAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"vestingRegistry()":{constant:!0,inputs:[],name:"vestingRegistry",outputs:[{internalType:"contract VestingRegistry",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"vestingTerm()":{constant:!0,inputs:[],name:"vestingTerm",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/fish/governance/Vesting/OrigingVestingCreator.sol:OrigingVestingCreator":{source:"contracts/fish/governance/Vesting/OrigingVestingCreator.sol",name:"OrigingVestingCreator",title:"Temp contract for checking address, creating and staking tokens.",notice:"It casts an instance of vestingRegistry and by using createVesting function it creates a vesting, gets it and stakes some tokens w/ this vesting.",constructor:{inputs:[{internalType:"address",name:"_vestingRegistry",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"createVesting(address,uint256,uint256,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"}],name:"createVesting",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of tokens to be vested.",_cliff:"The time interval to the first withdraw in seconds.",_duration:"The total duration in seconds.",_tokenOwner:"The owner of the tokens."},notice:"Create a vesting, get it and stake some tokens w/ this vesting."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"vestingRegistry()":{constant:!0,inputs:[],name:"vestingRegistry",outputs:[{internalType:"contract VestingRegistry",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/fish/governance/Vesting/SVR.sol:SVR":{source:"contracts/fish/governance/Vesting/SVR.sol",name:"SVR",title:"Sovryn Reward Token.",notice:"The RSOV token (Sovryn Vesting Reward Token) goal is to allow users to get rewards through the generation of protocol fees. The mint function accepts SOV tokens and mints the same amount of RSOV tokens. When burning RSOV tokens, the user gets 1/14th of the tokens sent back to him and the rest get staked in the user’s behalf with a schedule of 4 weeks cliff and period 1 year duration.",constructor:{inputs:[{internalType:"address",name:"_SOV",type:"address"},{internalType:"address",name:"_staking",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Burn(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Burn",type:"event"},"Mint(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"Mint",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"SOV()":{constant:!0,inputs:[],name:"SOV",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"burn(uint96)":{constant:!1,inputs:[{internalType:"uint96",name:"_amount",type:"uint96"}],name:"burn",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"the amount of tokens to be burnt"},notice:"burns SVR tokens and stakes the respective amount SOV tokens in the user's behalf"},"decimals()":{constant:!0,inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"mint(uint96)":{constant:!1,inputs:[{internalType:"uint96",name:"_amount",type:"uint96"}],name:"mint",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of tokens to be mint."},notice:"Hold SOV tokens and mint the respective amount of SVR tokens."},"mintWithApproval(address,uint96)":{constant:!1,inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"uint96",name:"_amount",type:"uint96"}],name:"mintWithApproval",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"This function will be invoked from receiveApproval.SOV.approveAndCall -> this.receiveApproval -> this.mintWithApproval",params:{_amount:"The amount of tokens to be mint.",_sender:"The sender of SOV.approveAndCall"},notice:"Hold SOV tokens and mint the respective amount of SVR tokens."},"name()":{constant:!0,inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the name of the token."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"receiveApproval(address,uint256,address,bytes)":{constant:!1,inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_token",type:"address"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"receiveApproval",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_data:"The data will be used for low level call."},notice:"Receives approval from SOV token."},"renounceOwnership()":{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"contract IStaking",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"symbol()":{constant:!0,inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/fish/governance/Vesting/TeamVesting.sol:TeamVesting":{source:"contracts/fish/governance/Vesting/TeamVesting.sol",name:"TeamVesting",title:"Team Vesting Contract.",details:"Vesting contracts shouldn't be upgradable, use Proxy instead of UpgradableProxy.",notice:"A regular vesting contract, but the owner (governance) is able to withdraw earlier without a slashing.",constructor:{inputs:[{internalType:"address",name:"_logic",type:"address"},{internalType:"address",name:"_SOV",type:"address"},{internalType:"address",name:"_stakingAddress",type:"address"},{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"},{internalType:"address",name:"_feeSharingProxy",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"ImplementationChanged(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldImplementation",type:"address"},{indexed:!0,internalType:"address",name:"_newImplementation",type:"address"}],name:"ImplementationChanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldOwner",type:"address"},{indexed:!0,internalType:"address",name:"_newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"SOV()":{constant:!0,inputs:[],name:"SOV",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"cliff()":{constant:!0,inputs:[],name:"cliff",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"duration()":{constant:!0,inputs:[],name:"duration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"endDate()":{constant:!0,inputs:[],name:"endDate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"feeSharingProxy()":{constant:!0,inputs:[],name:"feeSharingProxy",outputs:[{internalType:"contract IFeeSharingProxy",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getImplementation()":{constant:!0,inputs:[],name:"getImplementation",outputs:[{internalType:"address",name:"_implementation",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the implementation.",notice:"Return address of the implementation."},"getProxyOwner()":{constant:!0,inputs:[],name:"getProxyOwner",outputs:[{internalType:"address",name:"_owner",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the owner.",notice:"Return address of the owner."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"contract Staking",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"startDate()":{constant:!0,inputs:[],name:"startDate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tokenOwner()":{constant:!0,inputs:[],name:"tokenOwner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/fish/governance/Vesting/TokenSender.sol:TokenSender":{source:"contracts/fish/governance/Vesting/TokenSender.sol",name:"TokenSender",title:"SOV Token sender contract.",details:"TODO: Maybe this token transfer functionality should be included in the SOV token contract, because other contracts are requiring it too: VestingRegistry.sol and VestingRegistry2.sol",notice:"This contract includes functions to transfer SOV tokens to a recipient or to several recipients in a list. There is an ACL control check by modifier.",constructor:{inputs:[{internalType:"address",name:"_SOV",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"AdminAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminAdded",type:"event"},"AdminRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminRemoved",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SOVTransferred(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"SOVTransferred",type:"event"}},methods:{"SOV()":{constant:!0,inputs:[],name:"SOV",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"addAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"addAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The addresses of the account to grant permissions."},notice:"Add account to ACL."},"admins(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"admins",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"removeAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"removeAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The addresses of the account to revoke permissions."},notice:"Remove account from ACL."},"renounceOwnership()":{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"transferSOV(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferSOV",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to be transferred.",_receiver:"The address of the SOV receiver."},notice:"Transfer SOV tokens to given address."},"transferSOVusingList(address[],uint256[])":{constant:!1,inputs:[{internalType:"address[]",name:"_receivers",type:"address[]"},{internalType:"uint256[]",name:"_amounts",type:"uint256[]"}],name:"transferSOVusingList",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amounts:"The amounts to be transferred.",_receivers:"The addresses of the SOV receivers."},notice:"Transfer given amounts of SOV to the given addresses."}}},"contracts/fish/governance/Vesting/Vesting.sol:Vesting":{source:"contracts/fish/governance/Vesting/Vesting.sol",name:"Vesting",title:"Vesting Contract.",details:"TODO add tests for governanceWithdrawTokens.",notice:"Team tokens and investor tokens are vested. Therefore, a smart contract needs to be developed to enforce the vesting schedule.",constructor:{inputs:[{internalType:"address",name:"_logic",type:"address"},{internalType:"address",name:"_SOV",type:"address"},{internalType:"address",name:"_stakingAddress",type:"address"},{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"},{internalType:"address",name:"_feeSharingProxy",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"ImplementationChanged(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldImplementation",type:"address"},{indexed:!0,internalType:"address",name:"_newImplementation",type:"address"}],name:"ImplementationChanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldOwner",type:"address"},{indexed:!0,internalType:"address",name:"_newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"SOV()":{constant:!0,inputs:[],name:"SOV",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"cliff()":{constant:!0,inputs:[],name:"cliff",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"duration()":{constant:!0,inputs:[],name:"duration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"endDate()":{constant:!0,inputs:[],name:"endDate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"feeSharingProxy()":{constant:!0,inputs:[],name:"feeSharingProxy",outputs:[{internalType:"contract IFeeSharingProxy",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getImplementation()":{constant:!0,inputs:[],name:"getImplementation",outputs:[{internalType:"address",name:"_implementation",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the implementation.",notice:"Return address of the implementation."},"getProxyOwner()":{constant:!0,inputs:[],name:"getProxyOwner",outputs:[{internalType:"address",name:"_owner",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the owner.",notice:"Return address of the owner."},"governanceWithdrawTokens(address)":{constant:!1,inputs:[{internalType:"address",name:"receiver",type:"address"}],name:"governanceWithdrawTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"We need to add this implementation to prevent proxy call VestingLogic.governanceWithdrawTokens",params:{receiver:"The receiver of the token withdrawal."}},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"contract Staking",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"startDate()":{constant:!0,inputs:[],name:"startDate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tokenOwner()":{constant:!0,inputs:[],name:"tokenOwner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/fish/governance/Vesting/VestingFactory.sol:VestingFactory":{source:"contracts/fish/governance/Vesting/VestingFactory.sol",name:"VestingFactory",title:"Vesting Factory: Contract to deploy vesting contracts of two types: vesting (TokenHolder) and team vesting (Multisig).",notice:"Factory pattern allows to create multiple instances of the same contract and keep track of them easier.",constructor:{inputs:[{internalType:"address",name:"_vestingLogic",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"deployTeamVesting(address,address,address,uint256,uint256,address,address)":{constant:!1,inputs:[{internalType:"address",name:"_SOV",type:"address"},{internalType:"address",name:"_staking",type:"address"},{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"},{internalType:"address",name:"_feeSharing",type:"address"},{internalType:"address",name:"_vestingOwner",type:"address"}],name:"deployTeamVesting",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{_SOV:"The address of SOV token.",_cliff:"The time interval to the first withdraw in seconds.",_duration:"The total duration in seconds.",_feeSharing:"The address of fee sharing contract.",_staking:"The address of staking contract.",_tokenOwner:"The owner of the tokens.",_vestingOwner:"The address of an owner of vesting contract."},return:"The vesting contract address.",notice:"Deploys Team Vesting contract."},"deployVesting(address,address,address,uint256,uint256,address,address)":{constant:!1,inputs:[{internalType:"address",name:"_SOV",type:"address"},{internalType:"address",name:"_staking",type:"address"},{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"},{internalType:"address",name:"_feeSharing",type:"address"},{internalType:"address",name:"_vestingOwner",type:"address"}],name:"deployVesting",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{_SOV:"the address of SOV token.",_cliff:"The time interval to the first withdraw in seconds.",_duration:"The total duration in seconds.",_feeSharing:"The address of fee sharing contract.",_staking:"The address of staking contract.",_tokenOwner:"The owner of the tokens.",_vestingOwner:"The address of an owner of vesting contract."},return:"The vesting contract address.",notice:"Deploys Vesting contract."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"vestingLogic()":{constant:!0,inputs:[],name:"vestingLogic",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/fish/governance/Vesting/VestingLogic.sol:VestingLogic":{source:"contracts/fish/governance/Vesting/VestingLogic.sol",name:"VestingLogic",title:"Vesting Logic contract.",details:"Deployed by a VestingFactory contract.",notice:"Staking, delegating and withdrawal functionality.",events:{"DividendsCollected(address,address,address,uint32)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!1,internalType:"address",name:"loanPoolToken",type:"address"},{indexed:!1,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint32",name:"maxCheckpoints",type:"uint32"}],name:"DividendsCollected",type:"event"},"MigratedToNewStakingContract(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!1,internalType:"address",name:"newStakingContract",type:"address"}],name:"MigratedToNewStakingContract",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"TokensStaked(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokensStaked",type:"event"},"TokensWithdrawn(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!1,internalType:"address",name:"receiver",type:"address"}],name:"TokensWithdrawn",type:"event"},"VotesDelegated(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!1,internalType:"address",name:"delegatee",type:"address"}],name:"VotesDelegated",type:"event"}},methods:{"SOV()":{constant:!0,inputs:[],name:"SOV",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"cliff()":{constant:!0,inputs:[],name:"cliff",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"collectDividends(address,uint32,address)":{constant:!1,inputs:[{internalType:"address",name:"_loanPoolToken",type:"address"},{internalType:"uint32",name:"_maxCheckpoints",type:"uint32"},{internalType:"address",name:"_receiver",type:"address"}],name:"collectDividends",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_loanPoolToken:"The loan pool token address.",_maxCheckpoints:"Maximum number of checkpoints to be processed.",_receiver:"The receiver of tokens or msg.sender"},notice:"Collect dividends from fee sharing proxy."},"delegate(address)":{constant:!1,inputs:[{internalType:"address",name:"_delegatee",type:"address"}],name:"delegate",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_delegatee:"The address to delegate votes to."},notice:"Delegate votes from `msg.sender` which are locked until lockDate to `delegatee`."},"duration()":{constant:!0,inputs:[],name:"duration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"endDate()":{constant:!0,inputs:[],name:"endDate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"feeSharingProxy()":{constant:!0,inputs:[],name:"feeSharingProxy",outputs:[{internalType:"contract IFeeSharingProxy",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"governanceWithdrawTokens(address)":{constant:!1,inputs:[{internalType:"address",name:"receiver",type:"address"}],name:"governanceWithdrawTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Can be called only by owner.",params:{receiver:"The receiving address."},notice:"Withdraws all tokens from the staking contract and forwards them to an address specified by the token owner."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"migrateToNewStakingContract()":{constant:!1,inputs:[],name:"migrateToNewStakingContract",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",notice:"Allows the owners to migrate the positions to a new staking contract."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"receiveApproval(address,uint256,address,bytes)":{constant:!1,inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_token",type:"address"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"receiveApproval",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_data:"The data will be used for low level call."},notice:"Receives approval from SOV token."},"renounceOwnership()":{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"stakeTokens(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"stakeTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of tokens to stake."},notice:"Stakes tokens according to the vesting schedule."},"stakeTokensWithApproval(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"stakeTokensWithApproval",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"This function will be invoked from receiveApproval.SOV.approveAndCall -> this.receiveApproval -> this.stakeTokensWithApproval",params:{_amount:"The amount of tokens to stake.",_sender:"The sender of SOV.approveAndCall"},notice:"Stakes tokens according to the vesting schedule."},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"contract Staking",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"startDate()":{constant:!0,inputs:[],name:"startDate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tokenOwner()":{constant:!0,inputs:[],name:"tokenOwner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"withdrawTokens(address)":{constant:!1,inputs:[{internalType:"address",name:"receiver",type:"address"}],name:"withdrawTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{receiver:"The receiving address."},notice:"Withdraws unlocked tokens from the staking contract and forwards them to an address specified by the token owner."}}},"contracts/fish/governance/Vesting/VestingRegistry.sol:VestingRegistry":{source:"contracts/fish/governance/Vesting/VestingRegistry.sol",name:"VestingRegistry",title:"Vesting Registry contract.",notice:"On January 25, 2020, Sovryn launched the Genesis Reservation system. Sovryn community members who controlled a special NFT were granted access to stake BTC or rBTC for cSOV tokens at a rate of 2500 satoshis per cSOV. Per SIP-0003, up to 2,000,000 cSOV were made available in the Genesis event, which will be redeemable on a 1:1 basis for cSOV, subject to approval by existing SOV holders. * On 15 Feb 2021 Sovryn is taking another step in its journey to decentralized financial sovereignty with the vote on SIP 0005. This proposal will enable participants of the Genesis Reservation system to redeem their reserved cSOV tokens for SOV. They will also have the choice to redeem cSOV for rBTC if they decide to exit the system. * This contract deals with the vesting and redemption of cSOV tokens.",constructor:{inputs:[{internalType:"address",name:"_vestingFactory",type:"address"},{internalType:"address",name:"_SOV",type:"address"},{internalType:"address[]",name:"_CSOVtokens",type:"address[]"},{internalType:"uint256",name:"_priceSats",type:"uint256"},{internalType:"address",name:"_staking",type:"address"},{internalType:"address",name:"_feeSharingProxy",type:"address"},{internalType:"address",name:"_vestingOwner",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"AdminAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminAdded",type:"event"},"AdminRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminRemoved",type:"event"},"CSOVReImburse(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"from",type:"address"},{indexed:!1,internalType:"uint256",name:"CSOVamount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"reImburseAmount",type:"uint256"}],name:"CSOVReImburse",type:"event"},"CSOVTokensExchanged(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"caller",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"CSOVTokensExchanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SOVTransferred(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"SOVTransferred",type:"event"},"TeamVestingCreated(address,address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenOwner",type:"address"},{indexed:!1,internalType:"address",name:"vesting",type:"address"},{indexed:!1,internalType:"uint256",name:"cliff",type:"uint256"},{indexed:!1,internalType:"uint256",name:"duration",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TeamVestingCreated",type:"event"},"TokensStaked(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"vesting",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokensStaked",type:"event"},"VestingCreated(address,address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenOwner",type:"address"},{indexed:!1,internalType:"address",name:"vesting",type:"address"},{indexed:!1,internalType:"uint256",name:"cliff",type:"uint256"},{indexed:!1,internalType:"uint256",name:"duration",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"VestingCreated",type:"event"}},methods:{"CSOV_VESTING_CLIFF()":{constant:!0,inputs:[],name:"CSOV_VESTING_CLIFF",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"CSOV_VESTING_DURATION()":{constant:!0,inputs:[],name:"CSOV_VESTING_DURATION",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"CSOVtokens(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"CSOVtokens",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"FOUR_WEEKS()":{constant:!0,inputs:[],name:"FOUR_WEEKS",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"SOV()":{constant:!0,inputs:[],name:"SOV",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"addAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"addAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The addresses of the account to grant permissions."},notice:"Add account to ACL."},"admins(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"admins",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"blacklist(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"blacklist",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"budget()":{constant:!0,inputs:[],name:"budget",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",return:"The token balance of the contract.",notice:"Get contract balance."},"createTeamVesting(address,uint256,uint256,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"}],name:"createTeamVesting",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to be staked.",_cliff:"The time interval to the first withdraw in seconds.",_duration:"The total duration in seconds.",_tokenOwner:"The owner of the tokens."},notice:"Create Team Vesting contract."},"createVesting(address,uint256,uint256,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"}],name:"createVesting",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount to be staked.",_cliff:"The time interval to the first withdraw in seconds.",_duration:"The total duration in seconds.",_tokenOwner:"The owner of the tokens."},notice:"Create Vesting contract."},"deposit()":{constant:!1,inputs:[],name:"deposit",outputs:[],payable:!0,stateMutability:"payable",type:"function",notice:"Deposit function to receiving value (rBTC)."},"exchangeAllCSOV()":{constant:!1,inputs:[],name:"exchangeAllCSOV",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",notice:"Exchange cSOV to SOV with 1:1 rate"},"feeSharingProxy()":{constant:!0,inputs:[],name:"feeSharingProxy",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getTeamVesting(address)":{constant:!0,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"}],name:"getTeamVesting",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",params:{_tokenOwner:"The owner of the tokens."},return:"The team vesting contract address for the given token owner.",notice:"Query the team vesting contract for an account."},"getVesting(address)":{constant:!0,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"}],name:"getVesting",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",params:{_tokenOwner:"The owner of the tokens."},return:"The vesting contract address for the given token owner.",notice:"Query the vesting contract for an account."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"lockedAmount(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"lockedAmount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"priceSats()":{constant:!0,inputs:[],name:"priceSats",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"processedList(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"processedList",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"reImburse()":{constant:!1,inputs:[],name:"reImburse",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",notice:"cSOV payout to sender with rBTC currency. 1.- Check holder cSOV balance by adding up every cSOV token balance. 2.- ReImburse rBTC if funds available. 3.- And store holder address in processedList."},"removeAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"removeAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_admin:"The addresses of the account to revoke permissions."},notice:"Remove account from ACL."},"renounceOwnership()":{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setBlacklistFlag(address,bool)":{constant:!1,inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"bool",name:"_blacklisted",type:"bool"}],name:"setBlacklistFlag",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_account:"The address to be blacklisted.",_blacklisted:"The flag to add/remove to/from a blacklist."},notice:"Set blacklist flag (true/false)."},"setCSOVtokens(address[])":{constant:!1,inputs:[{internalType:"address[]",name:"_CSOVtokens",type:"address[]"}],name:"setCSOVtokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_CSOVtokens:"The array of cSOV tokens."},notice:"Sets cSOV tokens array. High level endpoint."},"setLockedAmount(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"setLockedAmount",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_account:"The address with locked amount.",_amount:"The amount to be locked."},notice:"Set amount to be subtracted from user token balance."},"setVestingFactory(address)":{constant:!1,inputs:[{internalType:"address",name:"_vestingFactory",type:"address"}],name:"setVestingFactory",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Splitting code on two functions: high level and low level is a pattern that makes easy to extend functionality in a readable way, without accidentally breaking the actual action being performed. For example, checks should be done on high level endpoint, while core functionality should be coded on the low level function.",params:{_vestingFactory:"The address of vesting factory contract."},notice:"Sets vesting factory address. High level endpoint."},"stakeTokens(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_vesting",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"stakeTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of tokens to stake.",_vesting:"The address of Vesting contract."},notice:"Stake tokens according to the vesting schedule."},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"transferSOV(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferSOV",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"This is a wrapper for ERC-20 transfer function w/ additional checks and triggering an event.",params:{_amount:"The amount to be transferred.",_receiver:"The address of the SOV receiver."},notice:"Transfer SOV tokens to given address."},"vestingContracts(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"vestingContracts",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"vestingFactory()":{constant:!0,inputs:[],name:"vestingFactory",outputs:[{internalType:"contract IVestingFactory",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"vestingOwner()":{constant:!0,inputs:[],name:"vestingOwner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"withdrawAll(address)":{constant:!1,inputs:[{internalType:"address payable",name:"to",type:"address"}],name:"withdrawAll",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{to:"The account address to send the balance to."},notice:"Send all contract balance to an account."}}},"contracts/fish/governance/Vesting/VestingRegistry3.sol:VestingRegistry3":{source:"contracts/fish/governance/Vesting/VestingRegistry3.sol",name:"VestingRegistry3",constructor:{inputs:[{internalType:"address",name:"_vestingFactory",type:"address"},{internalType:"address",name:"_SOV",type:"address"},{internalType:"address",name:"_staking",type:"address"},{internalType:"address",name:"_feeSharingProxy",type:"address"},{internalType:"address",name:"_vestingOwner",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"AdminAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminAdded",type:"event"},"AdminRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"admin",type:"address"}],name:"AdminRemoved",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"SOVTransferred(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"receiver",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"SOVTransferred",type:"event"},"TeamVestingCreated(address,address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenOwner",type:"address"},{indexed:!1,internalType:"address",name:"vesting",type:"address"},{indexed:!1,internalType:"uint256",name:"cliff",type:"uint256"},{indexed:!1,internalType:"uint256",name:"duration",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TeamVestingCreated",type:"event"},"TokensStaked(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"vesting",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TokensStaked",type:"event"},"VestingCreated(address,address,uint256,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"tokenOwner",type:"address"},{indexed:!1,internalType:"address",name:"vesting",type:"address"},{indexed:!1,internalType:"uint256",name:"cliff",type:"uint256"},{indexed:!1,internalType:"uint256",name:"duration",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"VestingCreated",type:"event"}},methods:{"SOV()":{constant:!0,inputs:[],name:"SOV",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"addAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"addAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"admins(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"admins",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"createTeamVesting(address,uint256,uint256,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"}],name:"createTeamVesting",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"the amount to be staked",_cliff:"the cliff in seconds",_duration:"the total duration in seconds",_tokenOwner:"the owner of the tokens"},notice:"creates Team Vesting contract"},"createVesting(address,uint256,uint256,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_cliff",type:"uint256"},{internalType:"uint256",name:"_duration",type:"uint256"}],name:"createVesting",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"the amount to be staked",_cliff:"the cliff in seconds",_duration:"the total duration in seconds",_tokenOwner:"the owner of the tokens"},notice:"creates Vesting contract"},"feeSharingProxy()":{constant:!0,inputs:[],name:"feeSharingProxy",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getTeamVesting(address)":{constant:!0,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"}],name:"getTeamVesting",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",params:{_tokenOwner:"the owner of the tokens"},notice:"returns team vesting contract address for the given token owner"},"getVesting(address)":{constant:!0,inputs:[{internalType:"address",name:"_tokenOwner",type:"address"}],name:"getVesting",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",params:{_tokenOwner:"the owner of the tokens"},notice:"returns vesting contract address for the given token owner"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"removeAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"_admin",type:"address"}],name:"removeAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"renounceOwnership()":{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setVestingFactory(address)":{constant:!1,inputs:[{internalType:"address",name:"_vestingFactory",type:"address"}],name:"setVestingFactory",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_vestingFactory:"the address of vesting factory contract"},notice:"sets vesting factory address"},"stakeTokens(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_vesting",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"stakeTokens",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"the amount of tokens to stake",_vesting:"the address of Vesting contract"},notice:"stakes tokens according to the vesting schedule"},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"transferSOV(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_receiver",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferSOV",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"the amount to be transferred",_receiver:"the address of the SOV receiver"},notice:"transfers SOV tokens to given address"},"vestingContracts(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"vestingContracts",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"vestingFactory()":{constant:!0,inputs:[],name:"vestingFactory",outputs:[{internalType:"contract IVestingFactory",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"vestingOwner()":{constant:!0,inputs:[],name:"vestingOwner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/fish/governance/Vesting/VestingStorage.sol:VestingStorage":{source:"contracts/fish/governance/Vesting/VestingStorage.sol",name:"VestingStorage",title:"Vesting Storage Contract.",details:"Use Ownable as a parent to align storage structure for Logic and Proxy contracts.",notice:"This contract is just the storage required for vesting. It is parent of VestingLogic and TeamVesting.",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"SOV()":{constant:!0,inputs:[],name:"SOV",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"cliff()":{constant:!0,inputs:[],name:"cliff",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"duration()":{constant:!0,inputs:[],name:"duration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"endDate()":{constant:!0,inputs:[],name:"endDate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"feeSharingProxy()":{constant:!0,inputs:[],name:"feeSharingProxy",outputs:[{internalType:"contract IFeeSharingProxy",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"contract Staking",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"startDate()":{constant:!0,inputs:[],name:"startDate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"tokenOwner()":{constant:!0,inputs:[],name:"tokenOwner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/fish/governance/mocks/GovernorAlphaMock.sol:GovernorAlphaMock":{source:"contracts/fish/governance/mocks/GovernorAlphaMock.sol",name:"GovernorAlphaMock",details:"This contract is a copy of `GovernorAlpha.sol` with changed value of votingPeriod for tests purposes",constructor:{inputs:[{internalType:"address",name:"timelock_",type:"address"},{internalType:"address",name:"staking_",type:"address"},{internalType:"address",name:"guardian_",type:"address"},{internalType:"uint96",name:"_quorumPercentageVotes",type:"uint96"},{internalType:"uint96",name:"_majorityPercentageVotes",type:"uint96"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"ProposalCanceled(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"}],name:"ProposalCanceled",type:"event"},"ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"address",name:"proposer",type:"address"},{indexed:!1,internalType:"address[]",name:"targets",type:"address[]"},{indexed:!1,internalType:"uint256[]",name:"values",type:"uint256[]"},{indexed:!1,internalType:"string[]",name:"signatures",type:"string[]"},{indexed:!1,internalType:"bytes[]",name:"calldatas",type:"bytes[]"},{indexed:!1,internalType:"uint256",name:"startBlock",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endBlock",type:"uint256"},{indexed:!1,internalType:"string",name:"description",type:"string"}],name:"ProposalCreated",type:"event"},"ProposalExecuted(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"}],name:"ProposalExecuted",type:"event"},"ProposalQueued(uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"id",type:"uint256"},{indexed:!1,internalType:"uint256",name:"eta",type:"uint256"}],name:"ProposalQueued",type:"event"},"VoteCast(address,uint256,bool,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"voter",type:"address"},{indexed:!1,internalType:"uint256",name:"proposalId",type:"uint256"},{indexed:!1,internalType:"bool",name:"support",type:"bool"},{indexed:!1,internalType:"uint256",name:"votes",type:"uint256"}],name:"VoteCast",type:"event"}},methods:{"BALLOT_TYPEHASH()":{constant:!0,inputs:[],name:"BALLOT_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"DOMAIN_TYPEHASH()":{constant:!0,inputs:[],name:"DOMAIN_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"NAME()":{constant:!0,inputs:[],name:"NAME",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"__abdicate()":{constant:!1,inputs:[],name:"__abdicate",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",notice:"Sets guardian address to zero."},"__acceptAdmin()":{constant:!1,inputs:[],name:"__acceptAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Timelock wrapper w/ sender check."},"__executeSetTimelockPendingAdmin(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"newPendingAdmin",type:"address"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"__executeSetTimelockPendingAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Timelock wrapper w/ sender check."},"__queueSetTimelockPendingAdmin(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"newPendingAdmin",type:"address"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"__queueSetTimelockPendingAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Timelock wrapper w/ sender check."},"cancel(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"cancel",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{proposalId:"Proposal index to access the list proposals[] from storage."},notice:"Cancel a proposal by looping and cancelling everyone of its calls."},"castVote(uint256,bool)":{constant:!1,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"},{internalType:"bool",name:"support",type:"bool"}],name:"castVote",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{proposalId:"Proposal index to access the list proposals[] from storage.",support:"Vote value, yes or no."},notice:"Casts a vote by sender."},"castVoteBySig(uint256,bool,uint8,bytes32,bytes32)":{constant:!1,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"},{internalType:"bool",name:"support",type:"bool"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"castVoteBySig",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"The signature needs to be broken up into 3 parameters, known as v, r and s: const r = '0x' + sig.substring(2).substring(0, 64); const s = '0x' + sig.substring(2).substring(64, 128); const v = '0x' + sig.substring(2).substring(128, 130);",params:{proposalId:"Proposal index to access the list proposals[] from storage.",r:"Half of the ECDSA signature pair.",s:"Half of the ECDSA signature pair.",support:"Vote value, yes or no.",v:"The recovery byte of the signature."},notice:"Voting with EIP-712 Signatures.\t * Voting power can be delegated to any address, and then can be used to vote on proposals. A key benefit to users of by-signature functionality is that they can create a signed vote transaction for free, and have a trusted third-party spend rBTC(or ETH) on gas fees and write it to the blockchain for them.\t * The third party in this scenario, submitting the SOV-holder’s signed transaction holds a voting power that is for only a single proposal. The signatory still holds the power to vote on their own behalf in the proposal if the third party has not yet published the signed transaction that was given to them."},"execute(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"execute",outputs:[],payable:!0,stateMutability:"payable",type:"function",params:{proposalId:"Proposal index to access the list proposals[] from storage."},notice:"Execute a proposal by looping and performing everyone of its calls."},"getActions(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"getActions",outputs:[{internalType:"address[]",name:"targets",type:"address[]"},{internalType:"uint256[]",name:"values",type:"uint256[]"},{internalType:"string[]",name:"signatures",type:"string[]"},{internalType:"bytes[]",name:"calldatas",type:"bytes[]"}],payable:!1,stateMutability:"view",type:"function",params:{proposalId:"Proposal index to access the list proposals[] from storage."},return:"Arrays of the 4 call parameters: targets, values, signatures, calldatas.",notice:"Get a proposal list of its calls."},"getReceipt(uint256,address)":{constant:!0,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"},{internalType:"address",name:"voter",type:"address"}],name:"getReceipt",outputs:[{components:[{internalType:"bool",name:"hasVoted",type:"bool"},{internalType:"bool",name:"support",type:"bool"},{internalType:"uint96",name:"votes",type:"uint96"}],internalType:"struct GovernorAlphaMock.Receipt",name:"",type:"tuple"}],payable:!1,stateMutability:"view",type:"function",params:{proposalId:"Proposal index to access the list proposals[] from storage.",voter:"A governance stakeholder with voting power."},return:"The voter receipt of the proposal.",notice:"Get a proposal receipt."},"guardian()":{constant:!0,inputs:[],name:"guardian",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"latestProposalIds(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"latestProposalIds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"majorityPercentageVotes()":{constant:!0,inputs:[],name:"majorityPercentageVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"proposalCount()":{constant:!0,inputs:[],name:"proposalCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"proposalMaxOperations()":{constant:!0,inputs:[],name:"proposalMaxOperations",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"pure",type:"function",notice:"The maximum number of actions that can be included in a proposal."},"proposalThreshold()":{constant:!0,inputs:[],name:"proposalThreshold",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",notice:"The number of votes required in order for a voter to become a proposer."},"proposals(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"proposals",outputs:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint32",name:"startBlock",type:"uint32"},{internalType:"uint32",name:"endBlock",type:"uint32"},{internalType:"uint96",name:"forVotes",type:"uint96"},{internalType:"uint96",name:"againstVotes",type:"uint96"},{internalType:"uint96",name:"quorum",type:"uint96"},{internalType:"uint96",name:"majorityPercentage",type:"uint96"},{internalType:"uint64",name:"eta",type:"uint64"},{internalType:"uint64",name:"startTime",type:"uint64"},{internalType:"bool",name:"canceled",type:"bool"},{internalType:"bool",name:"executed",type:"bool"},{internalType:"address",name:"proposer",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"propose(address[],uint256[],string[],bytes[],string)":{constant:!1,inputs:[{internalType:"address[]",name:"targets",type:"address[]"},{internalType:"uint256[]",name:"values",type:"uint256[]"},{internalType:"string[]",name:"signatures",type:"string[]"},{internalType:"bytes[]",name:"calldatas",type:"bytes[]"},{internalType:"string",name:"description",type:"string"}],name:"propose",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{calldatas:"Array of payloads for the calls on proposal execution.",description:"Text describing the purpose of the proposal.",signatures:"Array of function signatures to call on proposal execution.",targets:"Array of contract addresses to perform proposal execution.",values:"Array of rBTC amounts to send on proposal execution."},notice:"Create a new proposal."},"queue(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"queue",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{proposalId:"Proposal index to access the list proposals[] from storage."},notice:"Enqueue a proposal and everyone of its calls."},"quorumPercentageVotes()":{constant:!0,inputs:[],name:"quorumPercentageVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function"},"quorumVotes()":{constant:!0,inputs:[],name:"quorumVotes",outputs:[{internalType:"uint96",name:"",type:"uint96"}],payable:!1,stateMutability:"view",type:"function",notice:"The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed."},"staking()":{constant:!0,inputs:[],name:"staking",outputs:[{internalType:"contract IStaking",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"state(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"proposalId",type:"uint256"}],name:"state",outputs:[{internalType:"enum GovernorAlphaMock.ProposalState",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function",params:{proposalId:"Proposal index to access the list proposals[] from storage."},return:"The state of the proposal: Canceled, Pending, Active, Defeated, Succeeded, Executed, Expired.",notice:"Get a proposal state."},"timelock()":{constant:!0,inputs:[],name:"timelock",outputs:[{internalType:"contract ITimelock",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"votingDelay()":{constant:!0,inputs:[],name:"votingDelay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"pure",type:"function",notice:"The delay before voting on a proposal may take place, once proposed."},"votingPeriod()":{constant:!0,inputs:[],name:"votingPeriod",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"pure",type:"function",notice:"The duration of voting on a proposal, in blocks."}}},"contracts/fish/governance/mocks/TimelockMock.sol:TimelockMock":{source:"contracts/fish/governance/mocks/TimelockMock.sol",name:"TimelockMock",details:"This contract is a copy of `Timelock.sol` with changed value of MINIMUM_DELAY for tests purposes",constructor:{inputs:[{internalType:"address",name:"admin_",type:"address"},{internalType:"uint256",name:"delay_",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"CancelTransaction(bytes32,address,uint256,string,bytes,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"txHash",type:"bytes32"},{indexed:!0,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"},{indexed:!1,internalType:"string",name:"signature",type:"string"},{indexed:!1,internalType:"bytes",name:"data",type:"bytes"},{indexed:!1,internalType:"uint256",name:"eta",type:"uint256"}],name:"CancelTransaction",type:"event"},"ExecuteTransaction(bytes32,address,uint256,string,bytes,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"txHash",type:"bytes32"},{indexed:!0,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"},{indexed:!1,internalType:"string",name:"signature",type:"string"},{indexed:!1,internalType:"bytes",name:"data",type:"bytes"},{indexed:!1,internalType:"uint256",name:"eta",type:"uint256"}],name:"ExecuteTransaction",type:"event"},"NewAdmin(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newAdmin",type:"address"}],name:"NewAdmin",type:"event"},"NewDelay(uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"newDelay",type:"uint256"}],name:"NewDelay",type:"event"},"NewPendingAdmin(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newPendingAdmin",type:"address"}],name:"NewPendingAdmin",type:"event"},"QueueTransaction(bytes32,address,uint256,string,bytes,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"txHash",type:"bytes32"},{indexed:!0,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"},{indexed:!1,internalType:"string",name:"signature",type:"string"},{indexed:!1,internalType:"bytes",name:"data",type:"bytes"},{indexed:!1,internalType:"uint256",name:"eta",type:"uint256"}],name:"QueueTransaction",type:"event"}},methods:{"GRACE_PERIOD()":{constant:!0,inputs:[],name:"GRACE_PERIOD",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"MAXIMUM_DELAY()":{constant:!0,inputs:[],name:"MAXIMUM_DELAY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"MINIMUM_DELAY()":{constant:!0,inputs:[],name:"MINIMUM_DELAY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"acceptAdmin()":{constant:!1,inputs:[],name:"acceptAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",notice:"Accept a new admin for the timelock."},"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"cancelTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"cancelTransaction",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{data:"The ethereum transaction input data payload.",eta:"Estimated Time of Accomplishment. The timestamp that the proposal will be available for execution, set once the vote succeeds.",signature:"The stanndard representation of the function called.",target:"The contract to call.",value:"The amount to send in the transaction."},notice:"Cancel a transaction."},"delay()":{constant:!0,inputs:[],name:"delay",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"executeTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"executeTransaction",outputs:[{internalType:"bytes",name:"",type:"bytes"}],payable:!0,stateMutability:"payable",type:"function",params:{data:"The ethereum transaction input data payload.",eta:"Estimated Time of Accomplishment. The timestamp that the proposal will be available for execution, set once the vote succeeds.",signature:"The stanndard representation of the function called.",target:"The contract to call.",value:"The amount to send in the transaction."},notice:"Executes a previously queued transaction from the governance."},"pendingAdmin()":{constant:!0,inputs:[],name:"pendingAdmin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"queueTransaction(address,uint256,string,bytes,uint256)":{constant:!1,inputs:[{internalType:"address",name:"target",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"string",name:"signature",type:"string"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"uint256",name:"eta",type:"uint256"}],name:"queueTransaction",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{data:"The ethereum transaction input data payload.",eta:"Estimated Time of Accomplishment. The timestamp that the proposal will be available for execution, set once the vote succeeds.",signature:"The stanndard representation of the function called.",target:"The contract to call.",value:"The amount to send in the transaction."},notice:"Queue a new transaction from the governance contract."},"queuedTransactions(bytes32)":{constant:!0,inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"queuedTransactions",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"setDelay(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"delay_",type:"uint256"}],name:"setDelay",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{delay_:"The amount of time to wait until execution."},notice:"Set a new delay when executing the contract calls."},"setPendingAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"pendingAdmin_",type:"address"}],name:"setPendingAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{pendingAdmin_:"The new pending admin address."},notice:"Set a new pending admin for the timelock."}}},"contracts/fish/governance/proxy/Proxy.sol:Proxy":{source:"contracts/fish/governance/proxy/Proxy.sol",name:"Proxy",title:"Base Proxy contract.",details:"UpgradableProxy is the contract that inherits Proxy and wraps these functions.",notice:"The proxy performs delegated calls to the contract implementation it is pointing to. This way upgradable contracts are possible on blockchain. * Delegating proxy contracts are widely used for both upgradeability and gas savings. These proxies rely on a logic contract (also known as implementation contract or master copy) that is called using delegatecall. This allows proxies to keep a persistent state (storage and balance) while the code is delegated to the logic contract. * Proxy contract is meant to be inherited and its internal functions _setImplementation and _setProxyOwner to be called when upgrades become neccessary. * The loan token (iToken) contract as well as the protocol contract act as proxies, delegating all calls to underlying contracts. Therefore, if you want to interact with them using web3, you need to use the ABIs from the contracts containing the actual logic or the interface contract.  ABI for LoanToken contracts: LoanTokenLogicStandard  ABI for Protocol contract: ISovryn",constructor:{inputs:[],payable:!1,stateMutability:"nonpayable",type:"constructor"},fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"ImplementationChanged(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldImplementation",type:"address"},{indexed:!0,internalType:"address",name:"_newImplementation",type:"address"}],name:"ImplementationChanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldOwner",type:"address"},{indexed:!0,internalType:"address",name:"_newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"getImplementation()":{constant:!0,inputs:[],name:"getImplementation",outputs:[{internalType:"address",name:"_implementation",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the implementation.",notice:"Return address of the implementation."},"getProxyOwner()":{constant:!0,inputs:[],name:"getProxyOwner",outputs:[{internalType:"address",name:"_owner",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the owner.",notice:"Return address of the owner."}}},"contracts/fish/governance/proxy/UpgradableProxy.sol:UpgradableProxy":{source:"contracts/fish/governance/proxy/UpgradableProxy.sol",name:"UpgradableProxy",title:"Upgradable Proxy contract.",notice:"A disadvantage of the immutable ledger is that nobody can change the source code of a smart contract after it’s been deployed. In order to fix bugs or introduce new features, smart contracts need to be upgradable somehow. * Although it is not possible to upgrade the code of an already deployed smart contract, it is possible to set-up a proxy contract architecture that will allow to use new deployed contracts as if the main logic had been upgraded. * A proxy architecture pattern is such that all message calls go through a Proxy contract that will redirect them to the latest deployed contract logic. To upgrade, a new version of the contract is deployed, and the Proxy is updated to reference the new contract address.",fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"ImplementationChanged(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldImplementation",type:"address"},{indexed:!0,internalType:"address",name:"_newImplementation",type:"address"}],name:"ImplementationChanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_oldOwner",type:"address"},{indexed:!0,internalType:"address",name:"_newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"getImplementation()":{constant:!0,inputs:[],name:"getImplementation",outputs:[{internalType:"address",name:"_implementation",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the implementation.",notice:"Return address of the implementation."},"getProxyOwner()":{constant:!0,inputs:[],name:"getProxyOwner",outputs:[{internalType:"address",name:"_owner",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"Address of the owner.",notice:"Return address of the owner."},"setImplementation(address)":{constant:!1,inputs:[{internalType:"address",name:"_implementation",type:"address"}],name:"setImplementation",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Wrapper for _setImplementation that exposes the function as public for owner to be able to set a new version of the contract as current pointing implementation.",params:{_implementation:"Address of the implementation."},notice:"Set address of the implementation."},"setProxyOwner(address)":{constant:!1,inputs:[{internalType:"address",name:"_owner",type:"address"}],name:"setProxyOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_owner:"Address of the owner."},notice:"Set address of the owner."}}},"contracts/fish/interfaces/IChai.sol:IChai":{source:"contracts/fish/interfaces/IChai.sol",name:"IChai",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"address",name:"_spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"_who",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"decimals()":{constant:!0,inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},"draw(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"src",type:"address"},{internalType:"uint256",name:"wad",type:"uint256"}],name:"draw",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"exit(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"src",type:"address"},{internalType:"uint256",name:"wad",type:"uint256"}],name:"exit",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"join(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"dst",type:"address"},{internalType:"uint256",name:"wad",type:"uint256"}],name:"join",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"move(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"src",type:"address"},{internalType:"address",name:"dst",type:"address"},{internalType:"uint256",name:"wad",type:"uint256"}],name:"move",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},"name()":{constant:!0,inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"symbol()":{constant:!0,inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transfer(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},"transferFrom(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_from",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/fish/interfaces/IChai.sol:IPot":{source:"contracts/fish/interfaces/IChai.sol",name:"IPot",methods:{"chi()":{constant:!0,inputs:[],name:"chi",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"dsr()":{constant:!0,inputs:[],name:"dsr",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"rho()":{constant:!0,inputs:[],name:"rho",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/fish/interfaces/IERC20.sol:IERC20":{source:"contracts/fish/interfaces/IERC20.sol",name:"IERC20",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"address",name:"_spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"_who",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"decimals()":{constant:!0,inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},"name()":{constant:!0,inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"symbol()":{constant:!0,inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transfer(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},"transferFrom(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_from",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/fish/interfaces/IWrbtc.sol:IWrbtc":{source:"contracts/fish/interfaces/IWrbtc.sol",name:"IWrbtc",methods:{"deposit()":{constant:!1,inputs:[],name:"deposit",outputs:[],payable:!0,stateMutability:"payable",type:"function"},"withdraw(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"wad",type:"uint256"}],name:"withdraw",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/fish/interfaces/IWrbtcERC20.sol:IWrbtcERC20":{source:"contracts/fish/interfaces/IWrbtcERC20.sol",name:"IWrbtcERC20",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"address",name:"_spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"_who",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"decimals()":{constant:!0,inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},"deposit()":{constant:!1,inputs:[],name:"deposit",outputs:[],payable:!0,stateMutability:"payable",type:"function"},"name()":{constant:!0,inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"symbol()":{constant:!0,inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transfer(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},"transferFrom(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_from",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_value",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},"withdraw(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"wad",type:"uint256"}],name:"withdraw",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/fish/multisig/MultiSigWallet.sol:MultiSigWallet":{source:"contracts/fish/multisig/MultiSigWallet.sol",name:"MultiSigWallet",title:"Multisignature wallet - Allows multiple parties to agree on  transactions before execution.",author:"Stefan George - <stefan.george@consensys.net>",constructor:{inputs:[{internalType:"address[]",name:"_owners",type:"address[]"},{internalType:"uint256",name:"_required",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"Confirmation(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"uint256",name:"transactionId",type:"uint256"}],name:"Confirmation",type:"event"},"Deposit(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Deposit",type:"event"},"Execution(uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"transactionId",type:"uint256"}],name:"Execution",type:"event"},"ExecutionFailure(uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"transactionId",type:"uint256"}],name:"ExecutionFailure",type:"event"},"OwnerAddition(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"}],name:"OwnerAddition",type:"event"},"OwnerRemoval(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"}],name:"OwnerRemoval",type:"event"},"RequirementChange(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"required",type:"uint256"}],name:"RequirementChange",type:"event"},"Revocation(address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!0,internalType:"uint256",name:"transactionId",type:"uint256"}],name:"Revocation",type:"event"},"Submission(uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"transactionId",type:"uint256"}],name:"Submission",type:"event"}},methods:{"MAX_OWNER_COUNT()":{constant:!0,inputs:[],name:"MAX_OWNER_COUNT",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"addOwner(address)":{constant:!1,inputs:[{internalType:"address",name:"owner",type:"address"}],name:"addOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{owner:"Address of new owner."},notice:"Allows to add a new owner. Transaction has to be sent by wallet."},"changeRequirement(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_required",type:"uint256"}],name:"changeRequirement",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_required:"Number of required confirmations."},notice:"Allows to change the number of required confirmations. Transaction has to be sent by wallet."},"confirmTransaction(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"transactionId",type:"uint256"}],name:"confirmTransaction",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{transactionId:"Transaction ID."},notice:"Allows an owner to confirm a transaction."},"confirmations(uint256,address)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"address",name:"",type:"address"}],name:"confirmations",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"executeTransaction(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"transactionId",type:"uint256"}],name:"executeTransaction",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{transactionId:"Transaction ID."},notice:"Allows anyone to execute a confirmed transaction."},"getConfirmationCount(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"transactionId",type:"uint256"}],name:"getConfirmationCount",outputs:[{internalType:"uint256",name:"count",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{transactionId:"Transaction ID."},return:"Number of confirmations.",notice:"Get the number of confirmations of a transaction."},"getConfirmations(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"transactionId",type:"uint256"}],name:"getConfirmations",outputs:[{internalType:"address[]",name:"_confirmations",type:"address[]"}],payable:!1,stateMutability:"view",type:"function",params:{transactionId:"Transaction ID."},return:"Returns array of owner addresses.",notice:"Get the array with owner addresses, which confirmed transaction."},"getOwners()":{constant:!0,inputs:[],name:"getOwners",outputs:[{internalType:"address[]",name:"",type:"address[]"}],payable:!1,stateMutability:"view",type:"function",return:"List of owner addresses.",notice:"Get the list of owners."},"getTransactionCount(bool,bool)":{constant:!0,inputs:[{internalType:"bool",name:"pending",type:"bool"},{internalType:"bool",name:"executed",type:"bool"}],name:"getTransactionCount",outputs:[{internalType:"uint256",name:"count",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",params:{executed:"Include executed transactions.",pending:"Include pending transactions."},return:"Total number of transactions after filters are applied.",notice:"Get the total number of transactions after filers are applied."},"getTransactionIds(uint256,uint256,bool,bool)":{constant:!0,inputs:[{internalType:"uint256",name:"from",type:"uint256"},{internalType:"uint256",name:"to",type:"uint256"},{internalType:"bool",name:"pending",type:"bool"},{internalType:"bool",name:"executed",type:"bool"}],name:"getTransactionIds",outputs:[{internalType:"uint256[]",name:"_transactionIds",type:"uint256[]"}],payable:!1,stateMutability:"view",type:"function",params:{executed:"Include executed transactions.",from:"Index start position of transaction array.",pending:"Include pending transactions.",to:"Index end position of transaction array."},return:"Returns array of transaction IDs.",notice:"Get the list of transaction IDs in defined range."},"isConfirmed(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"transactionId",type:"uint256"}],name:"isConfirmed",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",params:{transactionId:"Transaction ID."},return:"Confirmation status.",notice:"Returns the confirmation status of a transaction."},"isOwner(address)":{constant:!0,inputs:[{internalType:"address",name:"",type:"address"}],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"owners(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"owners",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"removeOwner(address)":{constant:!1,inputs:[{internalType:"address",name:"owner",type:"address"}],name:"removeOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{owner:"Address of owner."},notice:"Allows to remove an owner. Transaction has to be sent by wallet."},"replaceOwner(address,address)":{constant:!1,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"newOwner",type:"address"}],name:"replaceOwner",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{newOwner:"Address of new owner.",owner:"Address of owner to be replaced."},notice:"Allows to replace an owner with a new owner. Transaction has  to be sent by wallet."},"required()":{constant:!0,inputs:[],name:"required",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"revokeConfirmation(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"transactionId",type:"uint256"}],name:"revokeConfirmation",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{transactionId:"Transaction ID."},notice:"Allows an owner to revoke a confirmation for a transaction."},"submitTransaction(address,uint256,bytes)":{constant:!1,inputs:[{internalType:"address",name:"destination",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"submitTransaction",outputs:[{internalType:"uint256",name:"transactionId",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{data:"Transaction data payload.",destination:"Transaction target address.",value:"Transaction ether value."},return:"Returns transaction ID.",notice:"Allows an owner to submit and confirm a transaction."},"transactionCount()":{constant:!0,inputs:[],name:"transactionCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"transactions(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"transactions",outputs:[{internalType:"address",name:"destination",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"bool",name:"executed",type:"bool"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/fish/rsk/RSKAddrValidator.sol:RSKAddrValidator":{source:"contracts/fish/rsk/RSKAddrValidator.sol",name:"RSKAddrValidator"},"contracts/fish/token/Fish.sol:Fish":{source:"contracts/fish/token/Fish.sol",name:"Fish",title:"Fish Token: FSH is an ERC-20 token contract for BabelFish governance.",details:"This contract represents a token with dynamic supply.  The owner of the token contract can mint/burn tokens to/from any account  based upon previous governance voting and approval.",notice:"This contract accounts for all holders' balances.",constructor:{inputs:[{internalType:"uint256",name:"_initialAmount",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."},"approveAndCall(address,uint256,bytes)":{constant:!1,inputs:[{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"approveAndCall",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of tokens to be sent.",_data:"Parameters for the contract call, such as endpoint signature.",_spender:"The contract address to spend the tokens."},notice:"Approves and then calls the receiving contract. Useful to encapsulate sending tokens to a contract in one call. Solidity has no native way to send tokens to contracts. ERC-20 tokens require approval to be spent by third parties, such as a contract in this case."},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"decimals()":{constant:!0,inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"mint(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mint",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Don't create more than 2^96/10 tokens before updating the governance first.",params:{_account:"The recipient address to get the minted tokens.",_amount:"The amount of tokens to be minted."},notice:"Creates new tokens and sends them to the recipient."},"name()":{constant:!0,inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the name of the token."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"symbol()":{constant:!0,inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/fish/token/IApproveAndCall.sol:IApproveAndCall":{source:"contracts/fish/token/IApproveAndCall.sol",name:"IApproveAndCall",title:"Interface for contract governance/ApprovalReceiver.sol",details:"Interfaces are used to cast a contract address into a callable instance.",methods:{"receiveApproval(address,uint256,address,bytes)":{constant:!1,inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_token",type:"address"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"receiveApproval",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount was approved.",_data:"The data will be used for low level call.",_sender:"The sender of Fish.approveAndCall function.",_token:"The address of token."},notice:"Receives approval from Fish token."}}},"contracts/helpers/BaseAdminUpgradeabilityProxy.sol:BaseAdminUpgradeabilityProxy":{source:"contracts/helpers/BaseAdminUpgradeabilityProxy.sol",name:"BaseAdminUpgradeabilityProxy",title:"BaseAdminUpgradeabilityProxy",details:"This contract combines an upgradeability proxy with an authorization mechanism for administrative tasks. All external functions in this contract must be guarded by the `ifAdmin` modifier. See ethereum/solidity#3864 for a Solidity feature proposal that would enable this to be done automatically.",fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"AdminChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"previousAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"AdminChanged",type:"event"},"Upgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"implementation",type:"address"}],name:"Upgraded",type:"event"}},methods:{"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"The address of the proxy admin."},"changeAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"changeAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Changes the admin of the proxy. Only the current admin can call this function.",params:{newAdmin:"Address to transfer proxy administration to."}},"implementation()":{constant:!0,inputs:[],name:"implementation",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"The address of the implementation."},"upgradeTo(address)":{constant:!1,inputs:[{internalType:"address",name:"newImplementation",type:"address"}],name:"upgradeTo",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Upgrade the backing implementation of the proxy. Only the admin can call this function.",params:{newImplementation:"Address of the new implementation."}},"upgradeToAndCall(address,bytes)":{constant:!1,inputs:[{internalType:"address",name:"newImplementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"upgradeToAndCall",outputs:[],payable:!0,stateMutability:"payable",type:"function",details:"Upgrade the backing implementation of the proxy and call a function on the new implementation. This is useful to initialize the proxied contract.",params:{data:"Data to send as msg.data in the low level call. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.",newImplementation:"Address of the new implementation."}}}},"contracts/helpers/InitializableAdminUpgradeabilityProxy.sol:InitializableAdminUpgradeabilityProxy":{source:"contracts/helpers/InitializableAdminUpgradeabilityProxy.sol",name:"InitializableAdminUpgradeabilityProxy",title:"InitializableAdminUpgradeabilityProxy",details:"Extends from BaseAdminUpgradeabilityProxy with an initializer for initializing the implementation, admin, and init data.",fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"AdminChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"previousAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"AdminChanged",type:"event"},"Upgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"implementation",type:"address"}],name:"Upgraded",type:"event"}},methods:{"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"The address of the proxy admin."},"changeAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"changeAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Changes the admin of the proxy. Only the current admin can call this function.",params:{newAdmin:"Address to transfer proxy administration to."}},"implementation()":{constant:!0,inputs:[],name:"implementation",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"The address of the implementation."},"initialize(address,address,bytes)":{constant:!1,inputs:[{internalType:"address",name:"_logic",type:"address"},{internalType:"address",name:"_admin",type:"address"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"initialize",outputs:[],payable:!0,stateMutability:"payable",type:"function",params:{_admin:"Address of the proxy administrator.",_data:"Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.",_logic:"Address of the initial implementation."},notice:"Contract initializer."},"initialize(address,bytes)":{constant:!1,inputs:[{internalType:"address",name:"_logic",type:"address"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"initialize",outputs:[],payable:!0,stateMutability:"payable",type:"function",details:"Contract initializer.",params:{_data:"Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.",_logic:"Address of the initial implementation."}},"upgradeTo(address)":{constant:!1,inputs:[{internalType:"address",name:"newImplementation",type:"address"}],name:"upgradeTo",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Upgrade the backing implementation of the proxy. Only the admin can call this function.",params:{newImplementation:"Address of the new implementation."}},"upgradeToAndCall(address,bytes)":{constant:!1,inputs:[{internalType:"address",name:"newImplementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"upgradeToAndCall",outputs:[],payable:!0,stateMutability:"payable",type:"function",details:"Upgrade the backing implementation of the proxy and call a function on the new implementation. This is useful to initialize the proxied contract.",params:{data:"Data to send as msg.data in the low level call. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.",newImplementation:"Address of the new implementation."}}}},"contracts/helpers/InitializableOwnable.sol:InitializableOwnable":{source:"contracts/helpers/InitializableOwnable.sol",name:"InitializableOwnable",details:"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/helpers/InitializableReentrancyGuard.sol:InitializableReentrancyGuard":{source:"contracts/helpers/InitializableReentrancyGuard.sol",name:"InitializableReentrancyGuard",details:"Contract module that helps prevent reentrant calls to a function. * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. * Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. * TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]. * _Since v2.5.0:_ this module is now much more gas efficient, given net gas metering changes introduced in the Istanbul hardfork."},"contracts/interfaces/IApproveAndCall.sol:IApproveAndCall":{source:"contracts/interfaces/IApproveAndCall.sol",name:"IApproveAndCall",title:"Interface for contract governance/ApprovalReceiver.sol",details:"Interfaces are used to cast a contract address into a callable instance.",methods:{"receiveApproval(address,uint256,address,bytes)":{constant:!1,inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_token",type:"address"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"receiveApproval",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount was approved.",_data:"The data will be used for low level call.",_sender:"The sender of SOV.approveAndCall function.",_token:"The address of token."},notice:"Receives approval from SOV token."}}},"contracts/interfaces/IERC20Permit.sol:IERC20Permit":{source:"contracts/interfaces/IERC20Permit.sol",name:"IERC20Permit",details:"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",methods:{"DOMAIN_SEPARATOR()":{constant:!0,inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"nonces(address)":{constant:!0,inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}.     * Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{constant:!1,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval.     * IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here.     * Emits an {Approval} event.     * Requirements:     * - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}).     * For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."}}},"contracts/interfaces/IProxy.sol:IProxy":{source:"contracts/interfaces/IProxy.sol",name:"IProxy",methods:{"implementation()":{constant:!0,inputs:[],name:"implementation",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/masset/BasketManagerV3.sol:BasketManagerV3":{source:"contracts/masset/BasketManagerV3.sol",name:"BasketManagerV3",title:"BasketManagerV3",details:"Contract is responsible for mAsset and bAsset exchange process and managing basket with bAsset tokens. Allows to add and/or remove bAsset, calculate balances, converts tokens quantity to adjust precisions or set/get parameters: bridge, factor, range and paused.",events:{"BassetAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"basset",type:"address"}],name:"BassetAdded",type:"event"},"BassetRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"basset",type:"address"}],name:"BassetRemoved",type:"event"},"BridgeChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"basset",type:"address"},{indexed:!1,internalType:"address",name:"bridge",type:"address"}],name:"BridgeChanged",type:"event"},"FactorChanged(address,int256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"basset",type:"address"},{indexed:!1,internalType:"int256",name:"factor",type:"int256"}],name:"FactorChanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"PausedChanged(address,bool)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"basset",type:"address"},{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedChanged",type:"event"},"RangeChanged(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"basset",type:"address"},{indexed:!1,internalType:"uint256",name:"min",type:"uint256"},{indexed:!1,internalType:"uint256",name:"max",type:"uint256"}],name:"RangeChanged",type:"event"}},methods:{"addBasset(address,int256,address,uint256,uint256,bool)":{constant:!1,inputs:[{internalType:"address",name:"_basset",type:"address"},{internalType:"int256",name:"_factor",type:"int256"},{internalType:"address",name:"_bridge",type:"address"},{internalType:"uint256",name:"_min",type:"uint256"},{internalType:"uint256",name:"_max",type:"uint256"},{internalType:"bool",name:"_paused",type:"bool"}],name:"addBasset",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Adds a new bAsset.",params:{_basset:"Address of bAsset.",_bridge:"Address of bridge.",_factor:"Factor amount.",_max:"Maximum ratio in basket.",_min:"Minimum ratio in basket.",_paused:"Flag to determine if basset should be paused."}},"addBassets(address[],int256[],address[],uint256[],uint256[],bool[])":{constant:!1,inputs:[{internalType:"address[]",name:"_bassets",type:"address[]"},{internalType:"int256[]",name:"_factors",type:"int256[]"},{internalType:"address[]",name:"_bridges",type:"address[]"},{internalType:"uint256[]",name:"_mins",type:"uint256[]"},{internalType:"uint256[]",name:"_maxs",type:"uint256[]"},{internalType:"bool[]",name:"_pausedFlags",type:"bool[]"}],name:"addBassets",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Adds multiple bAssets.",notice:"All parameters must be arrays with proper order and equal length."},"checkBasketBalanceForDeposit(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"_basset",type:"address"},{internalType:"uint256",name:"_bassetQuantity",type:"uint256"}],name:"checkBasketBalanceForDeposit",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Checks if ratio of bAssets in basket is within limits to make a deposit of specific asset.",params:{_basset:"Address of bAsset to deposit.",_bassetQuantity:"Amount of bAssets to deposit."},return:"Flag indicating whether a deposit can be made."},"checkBasketBalanceForWithdrawal(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"_basset",type:"address"},{internalType:"uint256",name:"_bassetQuantity",type:"uint256"}],name:"checkBasketBalanceForWithdrawal",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Checks if ratio of bAssets in basket is within limits to make a withdrawal of specific asset.",params:{_basset:"Address of bAsset to redeem.",_bassetQuantity:"Amount of bAssets to redeem."},return:"Flag indicating whether a withdrawal can be made."},"convertBassetToMassetQuantity(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"_basset",type:"address"},{internalType:"uint256",name:"_bassetQuantity",type:"uint256"}],name:"convertBassetToMassetQuantity",outputs:[{internalType:"uint256",name:"massetQuantity",type:"uint256"},{internalType:"uint256",name:"bassetQuantity",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Converts bAsset to mAsset quantity. This is used to adjust precision.     Despite bAssets and mAssets having 1:1 ratio, they may have diffrent decimal factors.     Since the ratio may cause fractions, the bAsset is adjusted to match nearest non fraction amount and returned.",params:{_basset:"Address of bAsset.",_bassetQuantity:"Amount of bAssets to check."},return:"Calculated amount of mAssets and Adjusted amount of bAssets."},"convertMassetToBassetQuantity(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"_basset",type:"address"},{internalType:"uint256",name:"_massetQuantity",type:"uint256"}],name:"convertMassetToBassetQuantity",outputs:[{internalType:"uint256",name:"bassetQuantity",type:"uint256"},{internalType:"uint256",name:"massetQuantity",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Converts mAsset to bAsset quantity. This is used to adjust precisions.     Despite bAssets and mAssets having 1:1 ratio, they may have diffrent decimal factors.     Since the ratio may cause fractions, the mAsset is adjusted to match nearest non fraction amount and returned.",params:{_basset:"Address of bAsset.",_massetQuantity:"Amount of mAssets to check."},return:"Calculated amount of bAssets and Adjusted amount of mAssets."},"getBassetBalance(address)":{constant:!0,inputs:[{internalType:"address",name:"_basset",type:"address"}],name:"getBassetBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"getBassets()":{constant:!0,inputs:[],name:"getBassets",outputs:[{internalType:"address[]",name:"",type:"address[]"}],payable:!1,stateMutability:"view",type:"function"},"getBridge(address)":{constant:!0,inputs:[{internalType:"address",name:"_basset",type:"address"}],name:"getBridge",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getFactor(address)":{constant:!0,inputs:[{internalType:"address",name:"_basset",type:"address"}],name:"getFactor",outputs:[{internalType:"int256",name:"",type:"int256"}],payable:!1,stateMutability:"view",type:"function"},"getPaused(address)":{constant:!0,inputs:[{internalType:"address",name:"_basset",type:"address"}],name:"getPaused",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"getRange(address)":{constant:!0,inputs:[{internalType:"address",name:"_basset",type:"address"}],name:"getRange",outputs:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"getTotalMassetBalance()":{constant:!0,inputs:[],name:"getTotalMassetBalance",outputs:[{internalType:"uint256",name:"total",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Calculates total mAsset balance.",return:"Calculated total balance."},"getVersion()":{constant:!0,inputs:[],name:"getVersion",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"initialize(address)":{constant:!1,inputs:[{internalType:"address",name:"_masset",type:"address"}],name:"initialize",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Contract initializer.",params:{_masset:"Address of the mAsset contract."}},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"isPowerOfTen(int256)":{constant:!0,inputs:[{internalType:"int256",name:"x",type:"int256"}],name:"isPowerOfTen",outputs:[{internalType:"bool",name:"result",type:"bool"}],payable:!1,stateMutability:"pure",type:"function",details:"Returns true if the number is power of ten.",params:{x:"Number to be checked."},return:"Is the number power of ten."},"isValidBasset(address)":{constant:!0,inputs:[{internalType:"address",name:"_basset",type:"address"}],name:"isValidBasset",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Checks if bAasset is valid by checking its presence in the bAssets factors list."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"removeBasset(address)":{constant:!1,inputs:[{internalType:"address",name:"_basset",type:"address"}],name:"removeBasset",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Removes bAsset",params:{_basset:"Address of bAsset to remove."}},"renounceOwnership()":{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setBridge(address,address)":{constant:!1,inputs:[{internalType:"address",name:"_basset",type:"address"},{internalType:"address",name:"_bridge",type:"address"}],name:"setBridge",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setFactor(address,int256)":{constant:!1,inputs:[{internalType:"address",name:"_basset",type:"address"},{internalType:"int256",name:"_factor",type:"int256"}],name:"setFactor",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setPaused(address,bool)":{constant:!1,inputs:[{internalType:"address",name:"_basset",type:"address"},{internalType:"bool",name:"_flag",type:"bool"}],name:"setPaused",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setRange(address,uint256,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_basset",type:"address"},{internalType:"uint256",name:"_min",type:"uint256"},{internalType:"uint256",name:"_max",type:"uint256"}],name:"setRange",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/masset/FeesManager.sol:FeesManager":{source:"contracts/masset/FeesManager.sol",name:"FeesManager",title:"FeesManager",details:"Contract is responsible for fees calculations.",events:{"DepositBridgeFeeChanged(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"depositBridgeFee",type:"uint256"}],name:"DepositBridgeFeeChanged",type:"event"},"DepositFeeChanged(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"depositFee",type:"uint256"}],name:"DepositFeeChanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"WithdrawalBridgeFeeChanged(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"withdrawalBridgeFee",type:"uint256"}],name:"WithdrawalBridgeFeeChanged",type:"event"},"WithdrawalFeeChanged(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"withdrawalFee",type:"uint256"}],name:"WithdrawalFeeChanged",type:"event"}},methods:{"PRECISION()":{constant:!0,inputs:[],name:"PRECISION",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"calculateDepositBridgeFee(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"_massetAmount",type:"uint256"}],name:"calculateDepositBridgeFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Calculate and return fee for deposit through bridge.",params:{_massetAmount:"Amount of masset to deposit."},return:"fee           Calculated fee amount."},"calculateDepositFee(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"_massetAmount",type:"uint256"}],name:"calculateDepositFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Calculate and return deposit fee amount based on massetAmount.",params:{_massetAmount:"Amount of masset to deposit."},return:"fee           Calculated fee amount."},"calculateRedeemBridgeFee(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"_massetAmount",type:"uint256"}],name:"calculateRedeemBridgeFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Calculate and return fee for redeem through bridge.",params:{_massetAmount:"Amount of masset."},return:"fee           Calculated fee amount."},"calculateRedeemFee(uint256)":{constant:!0,inputs:[{internalType:"uint256",name:"_massetAmount",type:"uint256"}],name:"calculateRedeemFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Calculate and return redeem fee amount based on massetAmount.",params:{_massetAmount:"Amount of masset."},return:"fee           Calculated fee amount."},"getDepositBridgeFee()":{constant:!0,inputs:[],name:"getDepositBridgeFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"getDepositFee()":{constant:!0,inputs:[],name:"getDepositFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"getWithdrawalBridgeFee()":{constant:!0,inputs:[],name:"getWithdrawalBridgeFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"getWithdrawalFee()":{constant:!0,inputs:[],name:"getWithdrawalFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"initialize(uint256,uint256,uint256,uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_depositFee",type:"uint256"},{internalType:"uint256",name:"_depositBridgeFee",type:"uint256"},{internalType:"uint256",name:"_withdrawalFee",type:"uint256"},{internalType:"uint256",name:"_withdrawalBridgeFee",type:"uint256"}],name:"initialize",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Contract initializer.",params:{_depositBridgeFee:"Amount of deposit through bridge fee in promils.",_depositFee:"Amount of deposit fee in promils.",_withdrawalBridgeFee:"Amount of redeem through bridge fee in promils.",_withdrawalFee:"Amount of redeem fee in promils."}},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setDepositBridgeFee(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"setDepositBridgeFee",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setDepositFee(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"setDepositFee",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setWithdrawalBridgeFee(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"setWithdrawalBridgeFee",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setWithdrawalFee(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"_amount",type:"uint256"}],name:"setWithdrawalFee",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/masset/IBridge.sol:IBridge":{source:"contracts/masset/IBridge.sol",name:"IBridge",title:"IBridge",details:"Interface of the bridge. Bridge is used to exchange basset tokens from another blockchains.",events:{"AcceptedCrossTransfer(address,address,uint256,uint8,uint256,uint256,uint8,uint256,bytes)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_tokenAddress",type:"address"},{indexed:!0,internalType:"address",name:"_to",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"},{indexed:!1,internalType:"uint8",name:"_decimals",type:"uint8"},{indexed:!1,internalType:"uint256",name:"_granularity",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_formattedAmount",type:"uint256"},{indexed:!1,internalType:"uint8",name:"_calculatedDecimals",type:"uint8"},{indexed:!1,internalType:"uint256",name:"_calculatedGranularity",type:"uint256"},{indexed:!1,internalType:"bytes",name:"_userData",type:"bytes"}],name:"AcceptedCrossTransfer",type:"event"},"Cross(address,address,uint256,string,bytes,uint8,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_tokenAddress",type:"address"},{indexed:!0,internalType:"address",name:"_to",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"},{indexed:!1,internalType:"string",name:"_symbol",type:"string"},{indexed:!1,internalType:"bytes",name:"_userData",type:"bytes"},{indexed:!1,internalType:"uint8",name:"_decimals",type:"uint8"},{indexed:!1,internalType:"uint256",name:"_granularity",type:"uint256"}],name:"Cross",type:"event"},"ErrorTokenReceiver(bytes)":{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes",name:"_errorData",type:"bytes"}],name:"ErrorTokenReceiver",type:"event"},"FeePercentageChanged(uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"}],name:"FeePercentageChanged",type:"event"},"NewSideToken(address,address,string,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_newSideTokenAddress",type:"address"},{indexed:!0,internalType:"address",name:"_originalTokenAddress",type:"address"},{indexed:!1,internalType:"string",name:"_newSymbol",type:"string"},{indexed:!1,internalType:"uint256",name:"_granularity",type:"uint256"}],name:"NewSideToken",type:"event"}},methods:{"acceptTransfer(address,address,uint256,string,bytes32,bytes32,uint32,uint8,uint256)":{constant:!1,inputs:[{internalType:"address",name:"originalTokenAddress",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"string",name:"symbol",type:"string"},{internalType:"bytes32",name:"blockHash",type:"bytes32"},{internalType:"bytes32",name:"transactionHash",type:"bytes32"},{internalType:"uint32",name:"logIndex",type:"uint32"},{internalType:"uint8",name:"decimals",type:"uint8"},{internalType:"uint256",name:"granularity",type:"uint256"}],name:"acceptTransfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Accepts the transaction from the other chain that was voted and sent by the federation contract.",return:"Returns a boolean value indicating whether transfer was accepted."},"acceptTransferAt(address,address,uint256,string,bytes32,bytes32,uint32,uint8,uint256,bytes)":{constant:!1,inputs:[{internalType:"address",name:"originalTokenAddress",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"string",name:"symbol",type:"string"},{internalType:"bytes32",name:"blockHash",type:"bytes32"},{internalType:"bytes32",name:"transactionHash",type:"bytes32"},{internalType:"uint32",name:"logIndex",type:"uint32"},{internalType:"uint8",name:"decimals",type:"uint8"},{internalType:"uint256",name:"granularity",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"acceptTransferAt",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Accepts the transaction from the other chain that was voted and sent by the federation contract.",return:"Returns a boolean value indicating whether transfer was accepted."},"calcMaxWithdraw()":{constant:!0,inputs:[],name:"calcMaxWithdraw",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Calculates maximal withdraw."},"getFeePercentage()":{constant:!0,inputs:[],name:"getFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the fee percentage."},"receiveTokens(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"tokenToUse",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"receiveTokens",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"ERC-20 tokens approve and transferFrom pattern See https://eips.ethereum.org/EIPS/eip-20#transferfrom for details."},"receiveTokensAt(address,uint256,address,bytes)":{constant:!1,inputs:[{internalType:"address",name:"tokenToUse",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"receiver",type:"address"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"receiveTokensAt",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"ERC-20 tokens approve and transferFrom pattern See https://eips.ethereum.org/EIPS/eip-20#transferfrom for details."},"tokensReceived(address,address,address,uint256,bytes,bytes)":{constant:!1,inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bytes",name:"operatorData",type:"bytes"}],name:"tokensReceived",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"ERC-777 tokensReceived hook allows to send tokens to a contract and notify it in a single transaction See https://eips.ethereum.org/EIPS/eip-777#motivation for details."},"version()":{constant:!0,inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"pure",type:"function",details:"Returns the version."}}},"contracts/masset/MassetV3.sol:MassetV3":{source:"contracts/masset/MassetV3.sol",name:"MassetV3",title:"MassetV3",details:"Contract is responsible for managing mAsset and bAsset. Used for minting and burning tokens, calculating fees and calling the bridge if transaction based on token from another blockchain.",events:{"Minted(address,address,uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"minter",type:"address"},{indexed:!0,internalType:"address",name:"recipient",type:"address"},{indexed:!1,internalType:"uint256",name:"massetQuantity",type:"uint256"},{indexed:!1,internalType:"address",name:"bAsset",type:"address"},{indexed:!1,internalType:"uint256",name:"bassetQuantity",type:"uint256"}],name:"Minted",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Redeemed(address,address,uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"redeemer",type:"address"},{indexed:!0,internalType:"address",name:"recipient",type:"address"},{indexed:!1,internalType:"uint256",name:"massetQuantity",type:"uint256"},{indexed:!1,internalType:"address",name:"bAsset",type:"address"},{indexed:!1,internalType:"uint256",name:"bassetQuantity",type:"uint256"}],name:"Redeemed",type:"event"},"onTokensMintedCalled(address,uint256,address,bytes)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"orderAmount",type:"uint256"},{indexed:!1,internalType:"address",name:"tokenAddress",type:"address"},{indexed:!1,internalType:"bytes",name:"userData",type:"bytes"}],name:"onTokensMintedCalled",type:"event"},"onTokensReceivedCalled(address,address,address,uint256,bytes,bytes)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"address",name:"from",type:"address"},{indexed:!1,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"bytes",name:"userData",type:"bytes"},{indexed:!1,internalType:"bytes",name:"operatorData",type:"bytes"}],name:"onTokensReceivedCalled",type:"event"}},methods:{"getBasketManager()":{constant:!0,inputs:[],name:"getBasketManager",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getFeesManager()":{constant:!0,inputs:[],name:"getFeesManager",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getFeesVault()":{constant:!0,inputs:[],name:"getFeesVault",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getToken()":{constant:!0,inputs:[],name:"getToken",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getVersion()":{constant:!0,inputs:[],name:"getVersion",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"initialize(address,address,bool)":{constant:!1,inputs:[{internalType:"address",name:"_basketManagerAddress",type:"address"},{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"bool",name:"_registerAsERC777RecipientFlag",type:"bool"}],name:"initialize",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Contract initializer.",params:{_basketManagerAddress:"Address of the basket manager.",_registerAsERC777RecipientFlag:"Bool determine if contract should be register as ERC777 recipient.",_tokenAddress:"Address of the mAsset token."}},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"mint(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_bAsset",type:"address"},{internalType:"uint256",name:"_bAssetQuantity",type:"uint256"}],name:"mint",outputs:[{internalType:"uint256",name:"massetMinted",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Mint a single mAsset, at a 1:1 ratio with the bAsset. This contract     must have approval to spend the senders bAsset.",params:{_bAsset:"Address of the bAsset.",_bAssetQuantity:"Quantity in bAsset units."},return:"massetMinted   Number of newly minted mAssets."},"mintTo(address,uint256,address)":{constant:!1,inputs:[{internalType:"address",name:"_bAsset",type:"address"},{internalType:"uint256",name:"_bAssetQuantity",type:"uint256"},{internalType:"address",name:"_recipient",type:"address"}],name:"mintTo",outputs:[{internalType:"uint256",name:"massetMinted",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Mint a single mAsset to recipient address, at a 1:1 ratio with the bAsset.     This contract must have approval to spend the senders bAsset.",params:{_bAsset:"Address of the bAsset.",_bAssetQuantity:"Quantity in bAsset units.",_recipient:"Receipient of the newly minted mAsset tokens."},return:"massetMinted   Number of newly minted mAssets."},"onTokensMinted(uint256,address,bytes)":{constant:!1,inputs:[{internalType:"uint256",name:"_orderAmount",type:"uint256"},{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"bytes",name:"_userData",type:"bytes"}],name:"onTokensMinted",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"This is called by the bridge to let us know the user has sent tokens through it and     into the mAsset.",params:{_orderAmount:"Units of the mAsset to redeem.",_tokenAddress:"Address of the bAsset to redeem.",_userData:"Address of the final recipient as ABI encoded bytes."}},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"redeem(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_bAsset",type:"address"},{internalType:"uint256",name:"_massetQuantity",type:"uint256"}],name:"redeem",outputs:[{internalType:"uint256",name:"massetRedeemed",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Credits the sender with a certain quantity of selected bAsset, in exchange for burning the     relative mAsset quantity from the sender. Sender also incurs a small mAsset fee, if any.",params:{_bAsset:"Address of the bAsset to redeem.",_massetQuantity:"Units of the masset to redeem."},return:"massetRedeemed   Relative number of mAsset units burned to pay for the bAssets."},"redeemByBridge(address,uint256,address)":{constant:!1,inputs:[{internalType:"address",name:"_basset",type:"address"},{internalType:"uint256",name:"_massetQuantity",type:"uint256"},{internalType:"address",name:"_recipient",type:"address"}],name:"redeemByBridge",outputs:[{internalType:"uint256",name:"massetRedeemed",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Credits a recipient with a certain quantity of selected bAsset, in exchange for burning the     relative mAsset quantity from the sender. Sender also incurs a small fee, if any.     This function is designed to be called by the bridge in order to have diffrent fees.",params:{_basset:"Address of the bAsset to redeem.",_massetQuantity:"Units of the mAsset to redeem.",_recipient:"Address to credit with withdrawn bAssets."},return:"massetMinted     Relative number of mAsset units burned to pay for the bAssets."},"redeemTo(address,uint256,address)":{constant:!1,inputs:[{internalType:"address",name:"_bAsset",type:"address"},{internalType:"uint256",name:"_massetQuantity",type:"uint256"},{internalType:"address",name:"_recipient",type:"address"}],name:"redeemTo",outputs:[{internalType:"uint256",name:"massetRedeemed",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Credits a recipient with a certain quantity of selected bAsset, in exchange for burning the     relative mAsset quantity from the sender. Sender also incurs a small fee, if any.",params:{_bAsset:"Address of the bAsset to redeem.",_massetQuantity:"Units of the masset to redeem.",_recipient:"Address to credit with withdrawn bAssets."},return:"massetRedeemed   Relative number of mAsset units burned to pay for the bAssets."},"redeemToBridge(address,uint256,address,address)":{constant:!1,inputs:[{internalType:"address",name:"_basset",type:"address"},{internalType:"uint256",name:"_massetQuantity",type:"uint256"},{internalType:"address",name:"_recipient",type:"address"},{internalType:"address",name:"_bridgeAddress",type:"address"}],name:"redeemToBridge",outputs:[{internalType:"uint256",name:"massetRedeemed",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Credits a recipient with a certain quantity of selected bAsset, in exchange for burning the     relative mAsset quantity from the sender. Sender also incurs a small fee, if any.     This function is designed to also call the bridge in order to have the basset tokens sent to     another blockchain.",params:{_basset:"Address of the bAsset to redeem.",_bridgeAddress:"This is ignored and is left here for backward compatibility with the FE.",_massetQuantity:"Units of the mAsset to redeem.",_recipient:"Address to credit with withdrawn bAssets."},return:"massetRedeemed   Relative number of mAsset units burned to pay for the bAssets."},"redeemToBridge(address,uint256,address)":{constant:!1,inputs:[{internalType:"address",name:"_basset",type:"address"},{internalType:"uint256",name:"_massetQuantity",type:"uint256"},{internalType:"address",name:"_recipient",type:"address"}],name:"redeemToBridge",outputs:[{internalType:"uint256",name:"massetRedeemed",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Credits a recipient with a certain quantity of selected bAsset, in exchange for burning the     relative mAsset quantity from the sender. Sender also incurs a small fee, if any.     This function is designed to also call the bridge in order to have the basset tokens sent to     another blockchain.",params:{_basset:"Address of the bAsset to redeem.",_massetQuantity:"Units of the mAsset to redeem.",_recipient:"Address to credit with withdrawn bAssets."},return:"massetRedeemed   Relative number of mAsset units burned to pay for the bAssets."},"renounceOwnership()":{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"tokensReceived(address,address,address,uint256,bytes,bytes)":{constant:!1,inputs:[{internalType:"address",name:"_operator",type:"address"},{internalType:"address",name:"_from",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"bytes",name:"_userData",type:"bytes"},{internalType:"bytes",name:"_operatorData",type:"bytes"}],name:"tokensReceived",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"This is called by the bridge to let us know tokens have been received.",params:{_amount:"uint256 amount of tokens to transfer.",_from:"Address token holder address.",_operator:"Address operator requesting the transfer.",_operatorData:"Bytes extra information provided by the operator (if any).",_to:"Address recipient address.",_userData:"Bytes extra information provided by the token holder (if any)."}},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgradeToV3(address,address,address,address)":{constant:!1,inputs:[{internalType:"address",name:"_basketManagerAddress",type:"address"},{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"address",name:"_feesVaultAddress",type:"address"},{internalType:"address",name:"_feesManagerAddress",type:"address"}],name:"upgradeToV3",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Migration to V3 version.",params:{_basketManagerAddress:"Address of new BasketManagerV3.",_feesManagerAddress:"Adress of FeesManager contract.",_feesVaultAddress:"Address of FeesVault contract.",_tokenAddress:"Address of mAsset token."}}}},"contracts/masset/Token.sol:Token":{source:"contracts/masset/Token.sol",name:"Token",title:"Token",details:"Implementation of masset Token. Inherits from ERC20 and ERC20Detailed with implemented mint and burn functions.",constructor:{inputs:[{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"},{internalType:"uint8",name:"_decimals",type:"uint8"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"burn(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"burn",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_account:"The recipient address to get the minted tokens.",_amount:"The amount of tokens to be minted."},notice:"Burns tokens for the given account."},"decimals()":{constant:!0,inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"mint(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mint",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_account:"The recipient address to get the minted tokens.",_amount:"The amount of tokens to be minted."},notice:"Creates new tokens and sends them to the recipient."},"name()":{constant:!0,inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the name of the token."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"symbol()":{constant:!0,inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/masset/versions/BasketManager.sol:BasketManager":{source:"contracts/masset/versions/BasketManager.sol",name:"BasketManager",constructor:{inputs:[{internalType:"address[]",name:"_bassets",type:"address[]"},{internalType:"int256[]",name:"_factors",type:"int256[]"},{internalType:"address[]",name:"_bridges",type:"address[]"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},methods:{"checkBasketBalanceForDeposit(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"_basset",type:"address"},{internalType:"uint256",name:"_bassetQuantity",type:"uint256"}],name:"checkBasketBalanceForDeposit",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"checkBasketBalanceForWithdrawal(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"_basset",type:"address"},{internalType:"uint256",name:"_bassetQuantity",type:"uint256"}],name:"checkBasketBalanceForWithdrawal",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"convertBassetToMassetQuantity(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"_basset",type:"address"},{internalType:"uint256",name:"_bassetQuantity",type:"uint256"}],name:"convertBassetToMassetQuantity",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"convertMassetToBassetQuantity(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"_basset",type:"address"},{internalType:"uint256",name:"_massetQuantity",type:"uint256"}],name:"convertMassetToBassetQuantity",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"getBridge(address)":{constant:!0,inputs:[{internalType:"address",name:"_basset",type:"address"}],name:"getBridge",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getVersion()":{constant:!0,inputs:[],name:"getVersion",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"pure",type:"function"},"isValidBasset(address)":{constant:!0,inputs:[{internalType:"address",name:"_basset",type:"address"}],name:"isValidBasset",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/masset/versions/Masset.sol:Masset":{source:"contracts/masset/versions/Masset.sol",name:"Masset",events:{"Minted(address,address,uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"minter",type:"address"},{indexed:!0,internalType:"address",name:"recipient",type:"address"},{indexed:!1,internalType:"uint256",name:"massetQuantity",type:"uint256"},{indexed:!1,internalType:"address",name:"bAsset",type:"address"},{indexed:!1,internalType:"uint256",name:"bassetQuantity",type:"uint256"}],name:"Minted",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Redeemed(address,address,uint256,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"redeemer",type:"address"},{indexed:!0,internalType:"address",name:"recipient",type:"address"},{indexed:!1,internalType:"uint256",name:"massetQuantity",type:"uint256"},{indexed:!1,internalType:"address",name:"bAsset",type:"address"},{indexed:!1,internalType:"uint256",name:"bassetQuantity",type:"uint256"}],name:"Redeemed",type:"event"},"onTokensMintedCalled(address,uint256,address,bytes)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"orderAmount",type:"uint256"},{indexed:!1,internalType:"address",name:"tokenAddress",type:"address"},{indexed:!1,internalType:"bytes",name:"userData",type:"bytes"}],name:"onTokensMintedCalled",type:"event"},"onTokensReceivedCalled(address,address,address,uint256,bytes,bytes)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"address",name:"from",type:"address"},{indexed:!1,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"bytes",name:"userData",type:"bytes"},{indexed:!1,internalType:"bytes",name:"operatorData",type:"bytes"}],name:"onTokensReceivedCalled",type:"event"}},methods:{"getBasketManager()":{constant:!0,inputs:[],name:"getBasketManager",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getToken()":{constant:!0,inputs:[],name:"getToken",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getVersion()":{constant:!0,inputs:[],name:"getVersion",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"initialize(address,address,bool)":{constant:!1,inputs:[{internalType:"address",name:"_basketManagerAddress",type:"address"},{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"bool",name:"_registerAsERC777RecipientFlag",type:"bool"}],name:"initialize",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"mint(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_bAsset",type:"address"},{internalType:"uint256",name:"_bAssetQuantity",type:"uint256"}],name:"mint",outputs:[{internalType:"uint256",name:"massetMinted",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Mint a single bAsset, at a 1:1 ratio with the bAsset. This contract     must have approval to spend the senders bAsset",params:{_bAsset:"Address of the bAsset to mint",_bAssetQuantity:"Quantity in bAsset units"},return:"massetMinted   Number of newly minted mAssets"},"mintTo(address,uint256,address)":{constant:!1,inputs:[{internalType:"address",name:"_bAsset",type:"address"},{internalType:"uint256",name:"_bAssetQuantity",type:"uint256"},{internalType:"address",name:"_recipient",type:"address"}],name:"mintTo",outputs:[{internalType:"uint256",name:"massetMinted",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Mint a single bAsset, at a 1:1 ratio with the bAsset. This contract     must have approval to spend the senders bAsset",params:{_bAsset:"Address of the bAsset to mint",_bAssetQuantity:"Quantity in bAsset units",_recipient:"receipient of the newly minted mAsset tokens"},return:"massetMinted   Number of newly minted mAssets"},"onTokensMinted(uint256,address,bytes)":{constant:!1,inputs:[{internalType:"uint256",name:"_orderAmount",type:"uint256"},{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"bytes",name:"_userData",type:"bytes"}],name:"onTokensMinted",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"This is called by the bridge to let us know the user has sent tokens through it and     into the masset.",params:{_orderAmount:"Units of the masset to redeem",_tokenAddress:"Address of the bAsset to redeem",_userData:"Address of the final recipient as ABI encoded bytes"}},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"redeem(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_bAsset",type:"address"},{internalType:"uint256",name:"_massetQuantity",type:"uint256"}],name:"redeem",outputs:[{internalType:"uint256",name:"massetRedeemed",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Credits the sender with a certain quantity of selected bAsset, in exchange for burning the     relative mAsset quantity from the sender. Sender also incurs a small mAsset fee, if any.",params:{_bAsset:"Address of the bAsset to redeem",_massetQuantity:"Units of the masset to redeem"},return:"massetMinted     Relative number of mAsset units burned to pay for the bAssets"},"redeemTo(address,uint256,address)":{constant:!1,inputs:[{internalType:"address",name:"_bAsset",type:"address"},{internalType:"uint256",name:"_massetQuantity",type:"uint256"},{internalType:"address",name:"_recipient",type:"address"}],name:"redeemTo",outputs:[{internalType:"uint256",name:"massetRedeemed",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Credits a recipient with a certain quantity of selected bAsset, in exchange for burning the     relative Masset quantity from the sender. Sender also incurs a small fee, if any.",params:{_bAsset:"Address of the bAsset to redeem",_massetQuantity:"Units of the masset to redeem",_recipient:"Address to credit with withdrawn bAssets"},return:"massetMinted     Relative number of mAsset units burned to pay for the bAssets"},"redeemToBridge(address,uint256,address,address)":{constant:!1,inputs:[{internalType:"address",name:"_basset",type:"address"},{internalType:"uint256",name:"_massetQuantity",type:"uint256"},{internalType:"address",name:"_recipient",type:"address"},{internalType:"address",name:"_bridgeAddress",type:"address"}],name:"redeemToBridge",outputs:[{internalType:"uint256",name:"massetRedeemed",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Credits a recipient with a certain quantity of selected bAsset, in exchange for burning the     relative Masset quantity from the sender. Sender also incurs a small fee, if any.     This function is designed to also call the bridge in order to have the basset tokens sent to     another blockchain.",params:{_basset:"Address of the bAsset to redeem",_bridgeAddress:"This is ignored and is left here for backward compatibility with the FE",_massetQuantity:"Units of the masset to redeem",_recipient:"Address to credit with withdrawn bAssets"},return:"massetMinted     Relative number of mAsset units burned to pay for the bAssets"},"redeemToBridge(address,uint256,address)":{constant:!1,inputs:[{internalType:"address",name:"_basset",type:"address"},{internalType:"uint256",name:"_massetQuantity",type:"uint256"},{internalType:"address",name:"_recipient",type:"address"}],name:"redeemToBridge",outputs:[{internalType:"uint256",name:"massetRedeemed",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Credits a recipient with a certain quantity of selected bAsset, in exchange for burning the     relative Masset quantity from the sender. Sender also incurs a small fee, if any.     This function is designed to also call the bridge in order to have the basset tokens sent to     another blockchain.",params:{_basset:"Address of the bAsset to redeem",_massetQuantity:"Units of the masset to redeem",_recipient:"Address to credit with withdrawn bAssets"},return:"massetMinted     Relative number of mAsset units burned to pay for the bAssets"},"renounceOwnership()":{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"tokensReceived(address,address,address,uint256,bytes,bytes)":{constant:!1,inputs:[{internalType:"address",name:"_operator",type:"address"},{internalType:"address",name:"_from",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"bytes",name:"_userData",type:"bytes"},{internalType:"bytes",name:"_operatorData",type:"bytes"}],name:"tokensReceived",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/meta-asset-token/MetaAssetToken.sol:MetaAssetToken":{source:"contracts/meta-asset-token/MetaAssetToken.sol",name:"MetaAssetToken",title:"Token",details:"Implementation of staking Token. Inherits from ERC20 and ERC20Detailed with implemented mint and burn functions.",constructor:{inputs:[{internalType:"string",name:"_tokenName",type:"string"},{internalType:"string",name:"_symbol",type:"string"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"AssetProxyChanged(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_newAssetProxy",type:"address"}],name:"AssetProxyChanged",type:"event"},"BasketManagerProxyChanged(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_newBasketManagerProxy",type:"address"}],name:"BasketManagerProxyChanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"DOMAIN_SEPARATOR()":{constant:!0,inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"PERMIT_TYPEHASH()":{constant:!0,inputs:[],name:"PERMIT_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."},"approveAndCall(address,uint256,bytes)":{constant:!1,inputs:[{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"approveAndCall",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of tokens to be sent.",_data:"Parameters for the contract call, such as endpoint signature.",_spender:"The contract address to spend the tokens."},notice:"Approves and then calls the receiving contract. Useful to encapsulate sending tokens to a contract in one call. Solidity has no native way to send tokens to contracts. ERC-20 tokens require approval to be spent by third parties, such as a contract in this case."},"assetImplementation()":{constant:!0,inputs:[],name:"assetImplementation",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"getter function of asset implementation address",return:"asset implementation address"},"assetProxy()":{constant:!0,inputs:[],name:"assetProxy",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"basketManagerImplementation()":{constant:!0,inputs:[],name:"basketManagerImplementation",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"getter function of basket manager implementation address",return:"basket manager implementation address"},"basketManagerProxy()":{constant:!0,inputs:[],name:"basketManagerProxy",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"burn(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"burn",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_account:"The recipient address to get the minted tokens.",_amount:"The amount of tokens to be minted."},notice:"Burns tokens for the given account.Can be burned only by the mAsset proxy contract."},"decimals()":{constant:!0,inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"getChainID()":{constant:!0,inputs:[],name:"getChainID",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"pure",type:"function"},"increaseAllowance(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"mint(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mint",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_account:"The recipient address to get the minted tokens.",_amount:"The amount of tokens to be minted."},notice:"Creates new tokens and sends them to the recipient.Can be minted only by the mAsset proxy contract."},"name()":{constant:!0,inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the name of the token."},"nonces(address)":{constant:!0,inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20Permit-nonces}."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{constant:!1,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20Permit-permit}."},"renounceOwnership()":{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setAssetProxy(address)":{constant:!1,inputs:[{internalType:"address",name:"_assetProxy",type:"address"}],name:"setAssetProxy",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_assetProxy:"The address of the mAsset proxy contract"},notice:"setAssetConfig sets the mAsset proxy address"},"setBasketManagerProxy(address)":{constant:!1,inputs:[{internalType:"address",name:"_basketManagerProxy",type:"address"}],name:"setBasketManagerProxy",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_basketManagerProxy:"The address of the Basket Manager proxy contract"},notice:"setBasketManagerConfig sets the Basket Manager proxy address"},"symbol()":{constant:!0,inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_recipient",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of token that will be transferred.",_recipient:"Recipient of the token."},return:"true / false.",notice:"Only owner who can transfer the token.destination cannot be: - Zero address. - DDLR contract address. - Sovryn mAsset proxy & implementation address. - Sovryn Basket Manager proxy & implementation address."},"transferFrom(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_from",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of token that will be transferred.",_from:"Sender of the token.",_to:"Recipient of the token."},return:"true / false.",notice:"Only owner who can transfer the token.destination cannot be: - Zero address. - DDLR contract address. - Sovryn mAsset proxy & implementation address. - Sovryn Basket Manager proxy & implementation address."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"transferWithPermit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{constant:!1,inputs:[{internalType:"address",name:"_from",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_deadline",type:"uint256"},{internalType:"uint8",name:"_v",type:"uint8"},{internalType:"bytes32",name:"_r",type:"bytes32"},{internalType:"bytes32",name:"_s",type:"bytes32"}],name:"transferWithPermit",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"By calling this function, the allowance will be overwritten by the total amount.",params:{_amount:"The amount of the token that will be transferred.",_deadline:"Expiration time of the signature.",_from:"Sender of the token.",_r:"First 32 bytes of ECDSA signature.",_s:"32 bytes after _r in ECDSA signature.",_to:"Recipient of the token.",_v:"Last 1 byte of ECDSA signature."},notice:"transfer utilizing EIP-2612, to reduce the additional sending transaction for doing the approval to the spender.destination cannot be: - Zero address. - DDLR contract address. - Sovryn mAsset proxy & implementation address. - Sovryn Basket Manager proxy & implementation address."}}},"contracts/mocks/helpers/InitializableOwnableWrapper.sol:InitializableOwnableWrapper":{source:"contracts/mocks/helpers/InitializableOwnableWrapper.sol",name:"InitializableOwnableWrapper",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"initialize()":{constant:!1,inputs:[],name:"initialize",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/mocks/helpers/InitializableReentrancyGuardMock.sol:IReentrantMock":{source:"contracts/mocks/helpers/InitializableReentrancyGuardMock.sol",name:"IReentrantMock",methods:{"clientMethod()":{constant:!1,inputs:[],name:"clientMethod",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/mocks/helpers/InitializableReentrancyGuardMock.sol:InitializableReentrancyMock":{source:"contracts/mocks/helpers/InitializableReentrancyGuardMock.sol",name:"InitializableReentrancyMock",methods:{"initialize()":{constant:!1,inputs:[],name:"initialize",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"runClientMethod(address)":{constant:!1,inputs:[{internalType:"address",name:"reentrantMockAddress",type:"address"}],name:"runClientMethod",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/mocks/helpers/InitializableReentrancyGuardMock.sol:NonReentrantMock":{source:"contracts/mocks/helpers/InitializableReentrancyGuardMock.sol",name:"NonReentrantMock",methods:{"clientMethod()":{constant:!1,inputs:[],name:"clientMethod",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/mocks/helpers/InitializableReentrancyGuardMock.sol:ReentrantMock":{source:"contracts/mocks/helpers/InitializableReentrancyGuardMock.sol",name:"ReentrantMock",constructor:{inputs:[{internalType:"address",name:"_contractAddress",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},methods:{"clientMethod()":{constant:!1,inputs:[],name:"clientMethod",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/mocks/masset/MockBasketManager.sol:MockBasketManager":{source:"contracts/mocks/masset/MockBasketManager.sol",name:"MockBasketManager",events:{"BassetAdded(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"basset",type:"address"}],name:"BassetAdded",type:"event"},"BassetRemoved(address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"basset",type:"address"}],name:"BassetRemoved",type:"event"},"BridgeChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"basset",type:"address"},{indexed:!1,internalType:"address",name:"bridge",type:"address"}],name:"BridgeChanged",type:"event"},"FactorChanged(address,int256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"basset",type:"address"},{indexed:!1,internalType:"int256",name:"factor",type:"int256"}],name:"FactorChanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"PausedChanged(address,bool)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"basset",type:"address"},{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedChanged",type:"event"},"RangeChanged(address,uint256,uint256)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"basset",type:"address"},{indexed:!1,internalType:"uint256",name:"min",type:"uint256"},{indexed:!1,internalType:"uint256",name:"max",type:"uint256"}],name:"RangeChanged",type:"event"}},methods:{"addBasset(address,int256,address,uint256,uint256,bool)":{constant:!1,inputs:[{internalType:"address",name:"_basset",type:"address"},{internalType:"int256",name:"_factor",type:"int256"},{internalType:"address",name:"_bridge",type:"address"},{internalType:"uint256",name:"_min",type:"uint256"},{internalType:"uint256",name:"_max",type:"uint256"},{internalType:"bool",name:"_paused",type:"bool"}],name:"addBasset",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Adds a new bAsset.",params:{_basset:"Address of bAsset.",_bridge:"Address of bridge.",_factor:"Factor amount.",_max:"Maximum ratio in basket.",_min:"Minimum ratio in basket.",_paused:"Flag to determine if basset should be paused."}},"addBassets(address[],int256[],address[],uint256[],uint256[],bool[])":{constant:!1,inputs:[{internalType:"address[]",name:"_bassets",type:"address[]"},{internalType:"int256[]",name:"_factors",type:"int256[]"},{internalType:"address[]",name:"_bridges",type:"address[]"},{internalType:"uint256[]",name:"_mins",type:"uint256[]"},{internalType:"uint256[]",name:"_maxs",type:"uint256[]"},{internalType:"bool[]",name:"_pausedFlags",type:"bool[]"}],name:"addBassets",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Adds multiple bAssets.",notice:"All parameters must be arrays with proper order and equal length."},"checkBasketBalanceForDeposit(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"_basset",type:"address"},{internalType:"uint256",name:"_bassetQuantity",type:"uint256"}],name:"checkBasketBalanceForDeposit",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Checks if ratio of bAssets in basket is within limits to make a deposit of specific asset.",params:{_basset:"Address of bAsset to deposit.",_bassetQuantity:"Amount of bAssets to deposit."},return:"Flag indicating whether a deposit can be made."},"checkBasketBalanceForWithdrawal(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"_basset",type:"address"},{internalType:"uint256",name:"_bassetQuantity",type:"uint256"}],name:"checkBasketBalanceForWithdrawal",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Checks if ratio of bAssets in basket is within limits to make a withdrawal of specific asset.",params:{_basset:"Address of bAsset to redeem.",_bassetQuantity:"Amount of bAssets to redeem."},return:"Flag indicating whether a withdrawal can be made."},"convertBassetToMassetQuantity(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"_basset",type:"address"},{internalType:"uint256",name:"_bassetQuantity",type:"uint256"}],name:"convertBassetToMassetQuantity",outputs:[{internalType:"uint256",name:"massetQuantity",type:"uint256"},{internalType:"uint256",name:"bassetQuantity",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Converts bAsset to mAsset quantity. This is used to adjust precision.     Despite bAssets and mAssets having 1:1 ratio, they may have diffrent decimal factors.     Since the ratio may cause fractions, the bAsset is adjusted to match nearest non fraction amount and returned.",params:{_basset:"Address of bAsset.",_bassetQuantity:"Amount of bAssets to check."},return:"Calculated amount of mAssets and Adjusted amount of bAssets."},"convertMassetToBassetQuantity(address,uint256)":{constant:!0,inputs:[{internalType:"address",name:"_basset",type:"address"},{internalType:"uint256",name:"_massetQuantity",type:"uint256"}],name:"convertMassetToBassetQuantity",outputs:[{internalType:"uint256",name:"bassetQuantity",type:"uint256"},{internalType:"uint256",name:"massetQuantity",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Converts mAsset to bAsset quantity. This is used to adjust precisions.     Despite bAssets and mAssets having 1:1 ratio, they may have diffrent decimal factors.     Since the ratio may cause fractions, the mAsset is adjusted to match nearest non fraction amount and returned.",params:{_basset:"Address of bAsset.",_massetQuantity:"Amount of mAssets to check."},return:"Calculated amount of bAssets and Adjusted amount of mAssets."},"getBassetBalance(address)":{constant:!0,inputs:[{internalType:"address",name:"_basset",type:"address"}],name:"getBassetBalance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"getBassets()":{constant:!0,inputs:[],name:"getBassets",outputs:[{internalType:"address[]",name:"",type:"address[]"}],payable:!1,stateMutability:"view",type:"function"},"getBridge(address)":{constant:!0,inputs:[{internalType:"address",name:"_basset",type:"address"}],name:"getBridge",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getFactor(address)":{constant:!0,inputs:[{internalType:"address",name:"_basset",type:"address"}],name:"getFactor",outputs:[{internalType:"int256",name:"",type:"int256"}],payable:!1,stateMutability:"view",type:"function"},"getPaused(address)":{constant:!0,inputs:[{internalType:"address",name:"_basset",type:"address"}],name:"getPaused",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"getRange(address)":{constant:!0,inputs:[{internalType:"address",name:"_basset",type:"address"}],name:"getRange",outputs:[{internalType:"uint256",name:"min",type:"uint256"},{internalType:"uint256",name:"max",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"getTotalMassetBalance()":{constant:!0,inputs:[],name:"getTotalMassetBalance",outputs:[{internalType:"uint256",name:"total",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"Calculates total mAsset balance.",return:"Calculated total balance."},"getVersion()":{constant:!0,inputs:[],name:"getVersion",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},"initialize(address)":{constant:!1,inputs:[{internalType:"address",name:"_masset",type:"address"}],name:"initialize",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Contract initializer.",params:{_masset:"Address of the mAsset contract."}},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"isPowerOfTen(int256)":{constant:!0,inputs:[{internalType:"int256",name:"x",type:"int256"}],name:"isPowerOfTen",outputs:[{internalType:"bool",name:"result",type:"bool"}],payable:!1,stateMutability:"pure",type:"function",details:"Returns true if the number is power of ten.",params:{x:"Number to be checked."},return:"Is the number power of ten."},"isValidBasset(address)":{constant:!0,inputs:[{internalType:"address",name:"_basset",type:"address"}],name:"isValidBasset",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Checks if bAasset is valid by checking its presence in the bAssets factors list."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"removeBasset(address)":{constant:!1,inputs:[{internalType:"address",name:"_basset",type:"address"}],name:"removeBasset",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Removes bAsset",params:{_basset:"Address of bAsset to remove."}},"renounceOwnership()":{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setBridge(address,address)":{constant:!1,inputs:[{internalType:"address",name:"_basset",type:"address"},{internalType:"address",name:"_bridge",type:"address"}],name:"setBridge",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setFactor(address,int256)":{constant:!1,inputs:[{internalType:"address",name:"_basset",type:"address"},{internalType:"int256",name:"_factor",type:"int256"}],name:"setFactor",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setPaused(address,bool)":{constant:!1,inputs:[{internalType:"address",name:"_basset",type:"address"},{internalType:"bool",name:"_flag",type:"bool"}],name:"setPaused",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"setRange(address,uint256,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_basset",type:"address"},{internalType:"uint256",name:"_min",type:"uint256"},{internalType:"uint256",name:"_max",type:"uint256"}],name:"setRange",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/mocks/masset/MockBridge.sol:MockBridge":{source:"contracts/mocks/masset/MockBridge.sol",name:"MockBridge",methods:{"callOnTokensMinted(address,uint256,address,address)":{constant:!1,inputs:[{internalType:"address",name:"masset",type:"address"},{internalType:"uint256",name:"_orderAmount",type:"uint256"},{internalType:"address",name:"_tokenAddress",type:"address"},{internalType:"address",name:"_userData",type:"address"}],name:"callOnTokensMinted",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"callRedeemByBridge(address,address,uint256,address)":{constant:!1,inputs:[{internalType:"address",name:"masset",type:"address"},{internalType:"address",name:"_basset",type:"address"},{internalType:"uint256",name:"_massetQuantity",type:"uint256"},{internalType:"address",name:"_recipient",type:"address"}],name:"callRedeemByBridge",outputs:[{internalType:"uint256",name:"massetRedeemed",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"function"},"receiveTokensAt(address,uint256,address,bytes)":{constant:!1,inputs:[{internalType:"address",name:"tokenToUse",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"receiver",type:"address"},{internalType:"bytes",name:"extraData",type:"bytes"}],name:"receiveTokensAt",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"}}},"contracts/mocks/masset/MockDummy.sol:IMockDummy":{source:"contracts/mocks/masset/MockDummy.sol",name:"IMockDummy",methods:{"getVersion()":{constant:!0,inputs:[],name:"getVersion",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"pure",type:"function"}}},"contracts/mocks/masset/MockDummy.sol:MockDummy1":{source:"contracts/mocks/masset/MockDummy.sol",name:"MockDummy1",methods:{"getVersion()":{constant:!0,inputs:[],name:"getVersion",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"pure",type:"function"}}},"contracts/mocks/masset/MockDummy.sol:MockDummy2":{source:"contracts/mocks/masset/MockDummy.sol",name:"MockDummy2",methods:{"getVersion()":{constant:!0,inputs:[],name:"getVersion",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"pure",type:"function"}}},"contracts/mocks/masset/MockMetaAssetToken.sol:MockMetaAssetToken":{source:"contracts/mocks/masset/MockMetaAssetToken.sol",name:"MockMetaAssetToken",constructor:{inputs:[{internalType:"string",name:"_tokenName",type:"string"},{internalType:"string",name:"_symbol",type:"string"},{internalType:"address",name:"_assetImplementation",type:"address"},{internalType:"address",name:"_basketManagerImplementation",type:"address"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"AssetProxyChanged(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_newAssetProxy",type:"address"}],name:"AssetProxyChanged",type:"event"},"BasketManagerProxyChanged(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_newBasketManagerProxy",type:"address"}],name:"BasketManagerProxyChanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"DOMAIN_SEPARATOR()":{constant:!0,inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"PERMIT_TYPEHASH()":{constant:!0,inputs:[],name:"PERMIT_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."},"approveAndCall(address,uint256,bytes)":{constant:!1,inputs:[{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"approveAndCall",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of tokens to be sent.",_data:"Parameters for the contract call, such as endpoint signature.",_spender:"The contract address to spend the tokens."},notice:"Approves and then calls the receiving contract. Useful to encapsulate sending tokens to a contract in one call. Solidity has no native way to send tokens to contracts. ERC-20 tokens require approval to be spent by third parties, such as a contract in this case."},"assetImplementation()":{constant:!0,inputs:[],name:"assetImplementation",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"assetProxy()":{constant:!0,inputs:[],name:"assetProxy",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"basketManagerImplementation()":{constant:!0,inputs:[],name:"basketManagerImplementation",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"getter function of basket manager implementation address",return:"basket manager implementation address"},"basketManagerProxy()":{constant:!0,inputs:[],name:"basketManagerProxy",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"burn(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"burn",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_account:"The recipient address to get the minted tokens.",_amount:"The amount of tokens to be minted."},notice:"Burns tokens for the given account.Can be burned only by the mAsset proxy contract."},"decimals()":{constant:!0,inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"getChainID()":{constant:!0,inputs:[],name:"getChainID",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"pure",type:"function"},"increaseAllowance(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"mint(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mint",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_account:"The recipient address to get the minted tokens.",_amount:"The amount of tokens to be minted."},notice:"Creates new tokens and sends them to the recipient.Can be minted only by the mAsset proxy contract."},"name()":{constant:!0,inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the name of the token."},"nonces(address)":{constant:!0,inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20Permit-nonces}."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{constant:!1,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20Permit-permit}."},"renounceOwnership()":{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setAssetProxy(address)":{constant:!1,inputs:[{internalType:"address",name:"_assetProxy",type:"address"}],name:"setAssetProxy",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_assetProxy:"The address of the mAsset proxy contract"},notice:"setAssetConfig sets the mAsset proxy address"},"setBasketManagerProxy(address)":{constant:!1,inputs:[{internalType:"address",name:"_basketManagerProxy",type:"address"}],name:"setBasketManagerProxy",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_basketManagerProxy:"The address of the Basket Manager proxy contract"},notice:"setBasketManagerConfig sets the Basket Manager proxy address"},"symbol()":{constant:!0,inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_recipient",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of token that will be transferred.",_recipient:"Recipient of the token."},return:"true / false.",notice:"Only owner who can transfer the token.destination cannot be: - Zero address. - DDLR contract address. - Sovryn mAsset proxy & implementation address. - Sovryn Basket Manager proxy & implementation address."},"transferFrom(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_from",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of token that will be transferred.",_from:"Sender of the token.",_to:"Recipient of the token."},return:"true / false.",notice:"Only owner who can transfer the token.destination cannot be: - Zero address. - DDLR contract address. - Sovryn mAsset proxy & implementation address. - Sovryn Basket Manager proxy & implementation address."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"transferWithPermit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{constant:!1,inputs:[{internalType:"address",name:"_from",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"uint256",name:"_deadline",type:"uint256"},{internalType:"uint8",name:"_v",type:"uint8"},{internalType:"bytes32",name:"_r",type:"bytes32"},{internalType:"bytes32",name:"_s",type:"bytes32"}],name:"transferWithPermit",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"By calling this function, the allowance will be overwritten by the total amount.",params:{_amount:"The amount of the token that will be transferred.",_deadline:"Expiration time of the signature.",_from:"Sender of the token.",_r:"First 32 bytes of ECDSA signature.",_s:"32 bytes after _r in ECDSA signature.",_to:"Recipient of the token.",_v:"Last 1 byte of ECDSA signature."},notice:"transfer utilizing EIP-2612, to reduce the additional sending transaction for doing the approval to the spender.destination cannot be: - Zero address. - DDLR contract address. - Sovryn mAsset proxy & implementation address. - Sovryn Basket Manager proxy & implementation address."}}},"contracts/mocks/mynt/MockApprovalReceiver.sol:MockApprovalReceiver":{source:"contracts/mocks/mynt/MockApprovalReceiver.sol",name:"MockApprovalReceiver",title:"Interface for contract governance/ApprovalReceiver.sol",details:"Interfaces are used to cast a contract address into a callable instance.",methods:{"amount()":{constant:!0,inputs:[],name:"amount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},"data()":{constant:!0,inputs:[],name:"data",outputs:[{internalType:"bytes",name:"",type:"bytes"}],payable:!1,stateMutability:"view",type:"function"},"receiveApproval(address,uint256,address,bytes)":{constant:!1,inputs:[{internalType:"address",name:"_sender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_token",type:"address"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"receiveApproval",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"sender()":{constant:!0,inputs:[],name:"sender",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"token()":{constant:!0,inputs:[],name:"token",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/mocks/shared/MockERC20.sol:MockERC20":{source:"contracts/mocks/shared/MockERC20.sol",name:"MockERC20",constructor:{inputs:[{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"},{internalType:"uint8",name:"_decimals",type:"uint8"},{internalType:"address",name:"_initialRecipient",type:"address"},{internalType:"uint256",name:"_initialMint",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"MinterAdded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"}],name:"MinterAdded",type:"event"},"MinterRemoved(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"}],name:"MinterRemoved",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"addMinter(address)":{constant:!1,inputs:[{internalType:"address",name:"account",type:"address"}],name:"addMinter",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"callTokensReceived(address,address,address,address,uint256,bytes,bytes)":{constant:!1,inputs:[{internalType:"address",name:"aggregator",type:"address"},{internalType:"address",name:"operator",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bytes",name:"operatorData",type:"bytes"}],name:"callTokensReceived",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"decimals()":{constant:!0,inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"giveMe(uint256)":{constant:!1,inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"giveMe",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"increaseAllowance(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."},"isMinter(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"isMinter",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"},"mint(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"mint",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {ERC20-_mint}.     * Requirements:     * - the caller must have the {MinterRole}."},"name()":{constant:!0,inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the name of the token."},"renounceMinter()":{constant:!1,inputs:[],name:"renounceMinter",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"symbol()":{constant:!0,inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."}}},"contracts/mocks/shared/MockERC20Permit.sol:MockERC20Permit":{source:"contracts/mocks/shared/MockERC20Permit.sol",name:"MockERC20Permit",constructor:{inputs:[{internalType:"string",name:"_tokenName",type:"string"},{internalType:"string",name:"_symbol",type:"string"},{internalType:"address",name:"_initialHolder",type:"address"},{internalType:"uint256",name:"_initialSupply",type:"uint256"}],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"DOMAIN_SEPARATOR()":{constant:!0,inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"PERMIT_TYPEHASH()":{constant:!0,inputs:[],name:"PERMIT_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"decimals()":{constant:!0,inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"getChainID()":{constant:!0,inputs:[],name:"getChainID",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"pure",type:"function"},"increaseAllowance(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."},"name()":{constant:!0,inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the name of the token."},"nonces(address)":{constant:!0,inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20Permit-nonces}."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{constant:!1,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20Permit-permit}."},"symbol()":{constant:!0,inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."}}},"contracts/mocks/shared/MockProxy.sol:MockProxy":{source:"contracts/mocks/shared/MockProxy.sol",name:"MockProxy",fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"AdminChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"previousAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"AdminChanged",type:"event"},"Upgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"implementation",type:"address"}],name:"Upgraded",type:"event"}},methods:{"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"The address of the proxy admin."},"changeAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"changeAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Changes the admin of the proxy. Only the current admin can call this function.",params:{newAdmin:"Address to transfer proxy administration to."}},"implementation()":{constant:!0,inputs:[],name:"implementation",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"The address of the implementation."},"initialize(address,address,bytes)":{constant:!1,inputs:[{internalType:"address",name:"_logic",type:"address"},{internalType:"address",name:"_admin",type:"address"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"initialize",outputs:[],payable:!0,stateMutability:"payable",type:"function",params:{_admin:"Address of the proxy administrator.",_data:"Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.",_logic:"Address of the initial implementation."},notice:"Contract initializer."},"initialize(address,bytes)":{constant:!1,inputs:[{internalType:"address",name:"_logic",type:"address"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"initialize",outputs:[],payable:!0,stateMutability:"payable",type:"function",details:"Contract initializer.",params:{_data:"Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.",_logic:"Address of the initial implementation."}},"upgradeTo(address)":{constant:!1,inputs:[{internalType:"address",name:"newImplementation",type:"address"}],name:"upgradeTo",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Upgrade the backing implementation of the proxy. Only the admin can call this function.",params:{newImplementation:"Address of the new implementation."}},"upgradeToAndCall(address,bytes)":{constant:!1,inputs:[{internalType:"address",name:"newImplementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"upgradeToAndCall",outputs:[],payable:!0,stateMutability:"payable",type:"function",details:"Upgrade the backing implementation of the proxy and call a function on the new implementation. This is useful to initialize the proxied contract.",params:{data:"Data to send as msg.data in the low level call. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.",newImplementation:"Address of the new implementation."}}}},"contracts/mocks/upgradability/MockProxyImplementation.sol:IMockImplementation":{source:"contracts/mocks/upgradability/MockProxyImplementation.sol",name:"IMockImplementation",methods:{"getVersion()":{constant:!0,inputs:[],name:"getVersion",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"pure",type:"function"},"isInitialized()":{constant:!0,inputs:[],name:"isInitialized",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/mocks/upgradability/MockProxyImplementation.sol:MockDependency":{source:"contracts/mocks/upgradability/MockProxyImplementation.sol",name:"MockDependency",methods:{"desc()":{constant:!0,inputs:[],name:"desc",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/mocks/upgradability/MockProxyImplementation.sol:MockProxyImplementation1":{source:"contracts/mocks/upgradability/MockProxyImplementation.sol",name:"MockProxyImplementation1",methods:{"getDep()":{constant:!0,inputs:[],name:"getDep",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getVersion()":{constant:!0,inputs:[],name:"getVersion",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"pure",type:"function"},"initialize(address)":{constant:!1,inputs:[{internalType:"address",name:"_depAddress",type:"address"}],name:"initialize",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"isInitialized()":{constant:!0,inputs:[],name:"isInitialized",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/mocks/upgradability/MockProxyImplementation.sol:MockProxyImplementation2":{source:"contracts/mocks/upgradability/MockProxyImplementation.sol",name:"MockProxyImplementation2",methods:{"getDep()":{constant:!0,inputs:[],name:"getDep",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getVersion()":{constant:!0,inputs:[],name:"getVersion",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"pure",type:"function"},"isInitialized()":{constant:!0,inputs:[],name:"isInitialized",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/mocks/upgradability/MockProxyImplementation.sol:MockProxyImplementationMetaAssetToken":{source:"contracts/mocks/upgradability/MockProxyImplementation.sol",name:"MockProxyImplementationMetaAssetToken",fallback:{payable:!0,stateMutability:"payable",type:"fallback"},methods:{"getDep()":{constant:!0,inputs:[],name:"getDep",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"getVersion()":{constant:!0,inputs:[],name:"getVersion",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"pure",type:"function"},"initialize(address)":{constant:!1,inputs:[{internalType:"address",name:"_depAddress",type:"address"}],name:"initialize",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"isInitialized()":{constant:!0,inputs:[],name:"isInitialized",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function"}}},"contracts/mynt/MyntToken.sol:MyntToken":{source:"contracts/mynt/MyntToken.sol",name:"MyntToken",title:"Token",details:"Implementation of staking Token. Inherits from ERC20 and ERC20Detailed with implemented mint and burn functions.",constructor:{inputs:[],payable:!1,stateMutability:"nonpayable",type:"constructor"},events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"MarketMakerChanged(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_address",type:"address"}],name:"MarketMakerChanged",type:"event"},"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},"PresaleChanged(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_address",type:"address"}],name:"PresaleChanged",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."},"approveAndCall(address,uint256,bytes)":{constant:!1,inputs:[{internalType:"address",name:"_spender",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"approveAndCall",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_amount:"The amount of tokens to be sent.",_data:"Parameters for the contract call, such as endpoint signature.",_spender:"The contract address to spend the tokens."},notice:"Approves and then calls the receiving contract. Useful to encapsulate sending tokens to a contract in one call. Solidity has no native way to send tokens to contracts. ERC-20 tokens require approval to be spent by third parties, such as a contract in this case."},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"burn(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"burn",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_account:"The recipient address to get the minted tokens.",_amount:"The amount of tokens to be minted."},notice:"Burns tokens for the given account."},"decimals()":{constant:!0,inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"marketMaker()":{constant:!0,inputs:[],name:"marketMaker",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"mint(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"_account",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"mint",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_account:"The recipient address to get the minted tokens.",_amount:"The amount of tokens to be minted."},notice:"Creates new tokens and sends them to the recipient."},"name()":{constant:!0,inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the name of the token."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"presale()":{constant:!0,inputs:[],name:"presale",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function"},"renounceOwnership()":{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setMarketMaker(address)":{constant:!1,inputs:[{internalType:"address",name:"_address",type:"address"}],name:"setMarketMaker",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_address:"The address of the market maker contract"},notice:"setMarketMaker sets the token's market maker address"},"setPresale(address)":{constant:!1,inputs:[{internalType:"address",name:"_address",type:"address"}],name:"setPresale",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",params:{_address:"The address of the presale contract"},notice:"setPresale sets the token's presale contract"},"symbol()":{constant:!0,inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}},"contracts/shared/ERC20Permit.sol:ERC20Permit":{source:"contracts/shared/ERC20Permit.sol",name:"ERC20Permit",details:"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ",events:{"Approval(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},"Transfer(address,address,uint256)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"}},methods:{"DOMAIN_SEPARATOR()":{constant:!0,inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"PERMIT_TYPEHASH()":{constant:!0,inputs:[],name:"PERMIT_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],payable:!1,stateMutability:"view",type:"function"},"allowance(address,address)":{constant:!0,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-allowance}."},"approve(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."},"balanceOf(address)":{constant:!0,inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-balanceOf}."},"decreaseAllowance(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"subtractedValue",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"getChainID()":{constant:!0,inputs:[],name:"getChainID",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"pure",type:"function"},"increaseAllowance(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."},"nonces(address)":{constant:!0,inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20Permit-nonces}."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{constant:!1,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20Permit-permit}."},"totalSupply()":{constant:!0,inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function",details:"See {IERC20-totalSupply}."},"transfer(address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{constant:!1,inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function",details:"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."}}},"contracts/upgradability/FeesVaultProxy.sol:FeesVaultProxy":{source:"contracts/upgradability/FeesVaultProxy.sol",name:"FeesVaultProxy",fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"AdminChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"previousAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"AdminChanged",type:"event"},"Upgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"implementation",type:"address"}],name:"Upgraded",type:"event"}},methods:{"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"The address of the proxy admin."},"changeAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"changeAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Changes the admin of the proxy. Only the current admin can call this function.",params:{newAdmin:"Address to transfer proxy administration to."}},"implementation()":{constant:!0,inputs:[],name:"implementation",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"The address of the implementation."},"initialize(address,address,bytes)":{constant:!1,inputs:[{internalType:"address",name:"_logic",type:"address"},{internalType:"address",name:"_admin",type:"address"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"initialize",outputs:[],payable:!0,stateMutability:"payable",type:"function",params:{_admin:"Address of the proxy administrator.",_data:"Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.",_logic:"Address of the initial implementation."},notice:"Contract initializer."},"initialize(address,bytes)":{constant:!1,inputs:[{internalType:"address",name:"_logic",type:"address"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"initialize",outputs:[],payable:!0,stateMutability:"payable",type:"function",details:"Contract initializer.",params:{_data:"Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.",_logic:"Address of the initial implementation."}},"upgradeTo(address)":{constant:!1,inputs:[{internalType:"address",name:"newImplementation",type:"address"}],name:"upgradeTo",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Upgrade the backing implementation of the proxy. Only the admin can call this function.",params:{newImplementation:"Address of the new implementation."}},"upgradeToAndCall(address,bytes)":{constant:!1,inputs:[{internalType:"address",name:"newImplementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"upgradeToAndCall",outputs:[],payable:!0,stateMutability:"payable",type:"function",details:"Upgrade the backing implementation of the proxy and call a function on the new implementation. This is useful to initialize the proxied contract.",params:{data:"Data to send as msg.data in the low level call. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.",newImplementation:"Address of the new implementation."}}}},"contracts/upgradability/MassetProxy.sol:MassetProxy":{source:"contracts/upgradability/MassetProxy.sol",name:"MassetProxy",title:"MassetProxy",details:"Implements a proxy that allows to change the mAsset contract address.",fallback:{payable:!0,stateMutability:"payable",type:"fallback"},events:{"AdminChanged(address,address)":{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"previousAdmin",type:"address"},{indexed:!1,internalType:"address",name:"newAdmin",type:"address"}],name:"AdminChanged",type:"event"},"Upgraded(address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"implementation",type:"address"}],name:"Upgraded",type:"event"}},methods:{"admin()":{constant:!0,inputs:[],name:"admin",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"The address of the proxy admin."},"changeAdmin(address)":{constant:!1,inputs:[{internalType:"address",name:"newAdmin",type:"address"}],name:"changeAdmin",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Changes the admin of the proxy. Only the current admin can call this function.",params:{newAdmin:"Address to transfer proxy administration to."}},"implementation()":{constant:!0,inputs:[],name:"implementation",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",return:"The address of the implementation."},"initialize(address,address,bytes)":{constant:!1,inputs:[{internalType:"address",name:"_logic",type:"address"},{internalType:"address",name:"_admin",type:"address"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"initialize",outputs:[],payable:!0,stateMutability:"payable",type:"function",params:{_admin:"Address of the proxy administrator.",_data:"Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.",_logic:"Address of the initial implementation."},notice:"Contract initializer."},"initialize(address,bytes)":{constant:!1,inputs:[{internalType:"address",name:"_logic",type:"address"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"initialize",outputs:[],payable:!0,stateMutability:"payable",type:"function",details:"Contract initializer.",params:{_data:"Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.",_logic:"Address of the initial implementation."}},"upgradeTo(address)":{constant:!1,inputs:[{internalType:"address",name:"newImplementation",type:"address"}],name:"upgradeTo",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Upgrade the backing implementation of the proxy. Only the admin can call this function.",params:{newImplementation:"Address of the new implementation."}},"upgradeToAndCall(address,bytes)":{constant:!1,inputs:[{internalType:"address",name:"newImplementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"upgradeToAndCall",outputs:[],payable:!0,stateMutability:"payable",type:"function",details:"Upgrade the backing implementation of the proxy and call a function on the new implementation. This is useful to initialize the proxied contract.",params:{data:"Data to send as msg.data in the low level call. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.",newImplementation:"Address of the new implementation."}}}},"contracts/vault/FeesVault.sol:FeesVault":{source:"contracts/vault/FeesVault.sol",name:"FeesVault",title:"FeesVault",details:"Contract is used to store fees.",events:{"OwnershipTransferred(address,address)":{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"}},methods:{"initialize()":{constant:!1,inputs:[],name:"initialize",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},"isOwner()":{constant:!0,inputs:[],name:"isOwner",outputs:[{internalType:"bool",name:"",type:"bool"}],payable:!1,stateMutability:"view",type:"function",details:"Returns true if the caller is the current owner."},"owner()":{constant:!0,inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],payable:!1,stateMutability:"view",type:"function",details:"Returns the address of the current owner."},"renounceOwnership()":{constant:!1,inputs:[],name:"renounceOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{constant:!1,inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"withdraw(address,uint256,address)":{constant:!1,inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"address",name:"_recipient",type:"address"}],name:"withdraw",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function",details:"Withdraw collected fees.",params:{_amount:"Amount to withdraw.",_recipient:"Recipient of withdrawn tokens.",_token:"Address of token to withdraw."}}}}},wt=new Ge({routes:[{path:"/",component:Tt,props:()=>({json:gt})},{path:"*",component:mt,props:e=>({json:gt[e.path.slice(1)]})}]});new a.a({el:"#app",router:wt,mounted(){document.dispatchEvent(new Event("render-event"))},render:e=>e(Ke)})},function(e,t,n){"use strict";function a(e,t){for(var n=[],a={},s=0;s<t.length;s++){var i=t[s],r=i[0],o={id:e+":"+s,css:i[1],media:i[2],sourceMap:i[3]};a[r]?a[r].parts.push(o):n.push(a[r]={id:r,parts:[o]})}return n}n.r(t),n.d(t,"default",(function(){return c}));var s="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!s)throw new Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var i={},r=s&&(document.head||document.getElementsByTagName("head")[0]),o=null,p=0,u=!1,d=function(){},l=null,y="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function c(e,t,n,s){u=n,l=s||{};var r=a(e,t);return m(r),function(t){for(var n=[],s=0;s<r.length;s++){var o=r[s];(p=i[o.id]).refs--,n.push(p)}t?m(r=a(e,t)):r=[];for(s=0;s<n.length;s++){var p;if(0===(p=n[s]).refs){for(var u=0;u<p.parts.length;u++)p.parts[u]();delete i[p.id]}}}}function m(e){for(var t=0;t<e.length;t++){var n=e[t],a=i[n.id];if(a){a.refs++;for(var s=0;s<a.parts.length;s++)a.parts[s](n.parts[s]);for(;s<n.parts.length;s++)a.parts.push(h(n.parts[s]));a.parts.length>n.parts.length&&(a.parts.length=n.parts.length)}else{var r=[];for(s=0;s<n.parts.length;s++)r.push(h(n.parts[s]));i[n.id]={id:n.id,refs:1,parts:r}}}}function f(){var e=document.createElement("style");return e.type="text/css",r.appendChild(e),e}function h(e){var t,n,a=document.querySelector('style[data-vue-ssr-id~="'+e.id+'"]');if(a){if(u)return d;a.parentNode.removeChild(a)}if(y){var s=p++;a=o||(o=f()),t=T.bind(null,a,s,!1),n=T.bind(null,a,s,!0)}else a=f(),t=g.bind(null,a),n=function(){a.parentNode.removeChild(a)};return t(e),function(a){if(a){if(a.css===e.css&&a.media===e.media&&a.sourceMap===e.sourceMap)return;t(e=a)}else n()}}var b,v=(b=[],function(e,t){return b[e]=t,b.filter(Boolean).join("\n")});function T(e,t,n,a){var s=n?"":a.css;if(e.styleSheet)e.styleSheet.cssText=v(t,s);else{var i=document.createTextNode(s),r=e.childNodes;r[t]&&e.removeChild(r[t]),r.length?e.insertBefore(i,r[t]):e.appendChild(i)}}function g(e,t){var n=t.css,a=t.media,s=t.sourceMap;if(a&&e.setAttribute("media",a),l.ssrId&&e.setAttribute("data-vue-ssr-id",t.id),s&&(n+="\n/*# sourceURL="+s.sources[0]+" */",n+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(s))))+" */"),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}]);